{
	"id": "ae0b7b946bda0b24f29aca30c99ca5b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SDC-Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.28;\n\nimport { IERC20 } from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport { Ownable } from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport { SafeERC20 } from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport { Address } from \"@openzeppelin/contracts/utils/Address.sol\";\nimport { IUniswapV2Router02 } from \"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\";\nimport { IPresale } from \"./interfaces/IPresale.sol\";\nimport { ReentrancyGuard } from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title Presale contract\n * @notice Create and manage a presale of an ERC20 token\n */\ncontract Presale is IPresale, Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n    using Address for address payable;\n\n    /// Для масштаба при пропорциональном вычислении.\n    uint256 constant SCALE = 10**18;\n\n    /** \n     * @notice Параметры пресейла\n     * @param tokenDeposit Всего токенов, вносимых в контракт (и на продажу, и на ликвидность).\n     * @param hardCap Максимальное количество BNB (wei), которое хотим собрать.\n     * @param softCap Минимальное количество BNB для успеха.\n     * @param max Максимальный взнос от одного адреса.\n     * @param min Минимальный взнос от одного адреса.\n     * @param start Timestamp начала пресейла.\n     * @param end Timestamp конца пресейла.\n     * @param liquidityBps Процент (в basis points) от собранных средств, который пойдёт в ликвидность (например, 50% = 5000).\n    */ \n    struct PresaleOptions {\n        uint256 tokenDeposit;\n        uint256 hardCap;\n        uint256 softCap;\n        uint256 max;\n        uint256 min;\n        uint112 start;\n        uint112 end;\n        uint32 liquidityBps; \n    }\n\n    /** \n     * @notice Структура хранения состояния пресейла\n     * @param token Адрес токена (ERC20).\n     * @param uniswapV2Router02 Адрес роутера (PancakeSwap / Uniswap V2).\n     * @param tokenBalance Текущее количество токенов на контракте.\n     * @param tokensClaimable Сколько токенов предназначено для участников пресейла.\n     * @param tokensLiquidity Сколько токенов пойдёт в пул ликвидности.\n     * @param weiRaised Сколько всего BNB собрано.\n     * @param weth Адрес WETH / WBNB (обёрнутый BNB).\n     * @param state Текущее состояние (1: Инициализирован, 2: Активен, 3: Отменён, 4: Завершён).\n     * @param options Параметры пресейла PresaleOptions.\n    */\n    struct Pool {\n        IERC20 token;\n        IUniswapV2Router02 uniswapV2Router02;\n        uint256 tokenBalance;\n        uint256 tokensClaimable;\n        uint256 tokensLiquidity;\n        uint256 weiRaised;\n        address weth;\n        uint8 state;\n        PresaleOptions options;\n    }\n\n    /// Учет вкладов (адрес -> внесённые BNB)\n    mapping(address => uint256) public contributions;\n    \n    /// Храним все данные в одной структуре\n    Pool public pool;\n\n    /// 2. Механика whitelist (для снижения рисков фронтраннинга)\n    bool public isWhitelistEnabled = false;\n    mapping(address => bool) public whitelist;\n\n    /// Модификатор, разрешающий рефанд при состоянии Canceled или при недостигнутом softCap после окончания\n    modifier onlyRefundable() {\n        bool canRefund = (\n            pool.state == 3 ||\n            (block.timestamp > pool.options.end && pool.weiRaised < pool.options.softCap)\n        );\n        if (!canRefund) revert NotRefundable();\n        _;\n    }\n\n    /** \n     * @param _weth Адрес WBNB в сети BSC (или WETH, если это другая EVM-сеть).\n     * @param _token Адрес токена, который продаём.\n     * @param _uniswapV2Router02 Адрес роутера (PancakeSwap/Uniswap).\n     * @param _options Параметры пресейла (PresaleOptions).\n    */\n    constructor(\n        address _weth,\n        address _token,\n        address _uniswapV2Router02,\n        PresaleOptions memory _options\n    )\n        Ownable(msg.sender)\n    {\n        _prevalidatePool(_options);\n\n        pool.uniswapV2Router02 = IUniswapV2Router02(_uniswapV2Router02);\n        pool.token = IERC20(_token);\n        pool.state = 1; // Initialized\n        pool.weth = _weth;\n        pool.options = _options;\n    }\n\n    /// Функция для приёма BNB напрямую. Вызывает _purchase().\n    receive() external payable {\n        _purchase(msg.sender, msg.value);\n    }\n\n    // ========================================================\n    //               ВНЕСЕНИЕ ТОКЕНОВ / СТАРТ ПРОДАЖИ\n    // ========================================================\n\n    /** \n     * @notice Владелец вносит нужное количество токенов для пресейла и ликвидности.\n     *         До вызова этой функции пресейл недоступен участникам.\n     * @return Количество внесённых токенов.\n    */\n    function deposit() external onlyOwner returns (uint256) {\n        // Проверяем, что пресейл ещё в начальном состоянии\n        if (pool.state != 1) revert InvalidState(pool.state);\n\n        // Переводим в состояние \"Active\"\n        pool.state = 2;\n        \n        // Рассчитываем, сколько токенов пойдёт на ликвидность и на пресейл\n        pool.tokenBalance += pool.options.tokenDeposit;\n        pool.tokensLiquidity = _tokensForLiquidity();\n        pool.tokensClaimable = _tokensForPresale();\n\n        // Безопасно переводим токены с адреса владельца на контракт\n        pool.token.safeTransferFrom(msg.sender, address(this), pool.options.tokenDeposit);\n\n        emit Deposit(msg.sender, pool.options.tokenDeposit, block.timestamp);\n        return pool.options.tokenDeposit;\n    }\n\n    // ========================================================\n    //               ПОКУПКА, РЕФАНД, КЛЕЙМ\n    // ========================================================\n\n    /** \n     * @dev Главная внутренняя функция покупки.\n     * @param beneficiary Адрес покупателя.\n     * @param amount Сколько BNB он отправил.\n    */\n    function _purchase(address beneficiary, uint256 amount) private nonReentrant {\n        _prevalidatePurchase(beneficiary, amount);\n\n        pool.weiRaised += amount;\n        contributions[beneficiary] += amount;\n        \n        emit Purchase(beneficiary, amount);\n    }\n\n    /**\n     * @notice Позволяет покупателям забрать свои токены после успешного завершения пресейла.\n     */\n    function claim() external nonReentrant returns (uint256) {\n        // Проверяем состояние: только после finalize\n        if (pool.state != 4) revert InvalidState(pool.state);\n        // Проверяем, что есть вклад\n        if (contributions[msg.sender] == 0) revert NotClaimable();\n\n        uint256 amount = userTokens(msg.sender);\n        contributions[msg.sender] = 0; // обнуляем вклад для исключения повторных вызовов\n        pool.tokenBalance -= amount;\n        \n        pool.token.safeTransfer(msg.sender, amount);\n\n        emit TokenClaim(msg.sender, amount, block.timestamp);\n        return amount;\n    }\n\n    /**\n     * @notice Возврат средств участникам, если пресейл отменён или не собрал softCap.\n     */\n    function refund() external onlyRefundable nonReentrant returns (uint256) {\n        if (contributions[msg.sender] == 0) revert NotRefundable();\n\n        uint256 amount = contributions[msg.sender];\n        contributions[msg.sender] = 0;\n\n        // Возвращаем BNB\n        payable(msg.sender).sendValue(amount);\n\n        emit Refund(msg.sender, amount, block.timestamp);\n        return amount;\n    }\n\n    // ========================================================\n    //               УПРАВЛЕНИЕ ПРЕСЕЙЛОМ\n    // ========================================================\n\n    /**\n     * @notice Завершает пресейл, если он успешен (достигнут softCap).\n     *         Добавляет ликвидность, переводит остатки владельцу, открывает клейм для участников.\n     */\n    function finalize() external onlyOwner nonReentrant returns (bool) {\n        if (pool.state != 2) revert InvalidState(pool.state);\n\n        // Если ещё не достигли softCap, но время не вышло, лучше подождать окончания\n        if (pool.weiRaised < pool.options.softCap && block.timestamp < pool.options.end) {\n            revert SoftCapNotReached();\n        }\n\n        // Переводим состояние в \"Finalized\"\n        pool.state = 4;\n\n        // Добавляем ликвидность: часть BNB + часть токенов\n        uint256 liquidityWei = _weiForLiquidity();\n        _liquify(liquidityWei, pool.tokensLiquidity);\n        pool.tokenBalance -= pool.tokensLiquidity;\n\n        // Остаток собранных средств отправляем владельцу\n        uint256 withdrawable = pool.weiRaised - liquidityWei;\n        if (withdrawable > 0) {\n            payable(msg.sender).sendValue(withdrawable);\n        }\n\n        emit Finalized(msg.sender, pool.weiRaised, block.timestamp);\n        return true;\n    }\n\n    /**\n     * @notice Владелец может отменить пресейл (если он ещё не завершён).\n     *         Тогда участники смогут вызвать refund() и вернуть BNB.\n     */\n    function cancel() external onlyOwner returns(bool) {\n        if (pool.state > 3) revert InvalidState(pool.state);\n\n        pool.state = 3; // Canceled\n\n        // Возвращаем владельцу невостребованные токены\n        if (pool.tokenBalance > 0) {\n            uint256 amount = pool.tokenBalance;\n            pool.tokenBalance = 0;\n            pool.token.safeTransfer(msg.sender, amount);\n        }\n\n        emit Cancel(msg.sender, block.timestamp);\n        return true;\n    }\n\n    // ========================================================\n    //               WHITELIST (доп. проверка)\n    // ========================================================\n\n    /**\n     * @notice Включает или отключает механизм whitelist.\n     */\n    function setWhitelistEnabled(bool _enabled) external onlyOwner {\n        isWhitelistEnabled = _enabled;\n    }\n\n    /**\n     * @notice Добавляет адреса в whitelist.\n     */\n    function addToWhitelist(address[] calldata accounts) external onlyOwner {\n        for (uint256 i = 0; i < accounts.length; i++) {\n            whitelist[accounts[i]] = true;\n        }\n    }\n\n    /**\n     * @notice Удаляет адреса из whitelist.\n     */\n    function removeFromWhitelist(address[] calldata accounts) external onlyOwner {\n        for (uint256 i = 0; i < accounts.length; i++) {\n            whitelist[accounts[i]] = false;\n        }\n    }\n\n    // ========================================================\n    //               ВНУТРЕННЯЯ ЛОГИКА И ПРОВЕРКИ\n    // ========================================================\n\n    /**\n     * @dev Проверка валидности покупки.\n     */\n    function _prevalidatePurchase(address _beneficiary, uint256 _amount) internal view {\n        if (pool.state != 2) revert InvalidState(pool.state);\n        // Проверяем период\n        if (block.timestamp < pool.options.start || block.timestamp > pool.options.end) {\n            revert NotInPurchasePeriod();\n        }\n        // Проверяем hardCap\n        if (pool.weiRaised + _amount > pool.options.hardCap) {\n            revert HardCapExceed();\n        }\n        // Проверяем min\n        if (_amount < pool.options.min) {\n            revert PurchaseBelowMinimum();\n        }\n        // Проверяем max\n        if (_amount + contributions[_beneficiary] > pool.options.max) {\n            revert PurchaseLimitExceed();\n        }\n        // Если включен whitelist — проверяем\n        if (isWhitelistEnabled && !whitelist[_beneficiary]) {\n            revert(\"NotWhitelisted\");\n        }\n    }\n\n    /**\n     * @dev Предварительная проверка параметров пресейла (можно доработать логику под нужды проекта).\n     */\n    function _prevalidatePool(PresaleOptions memory _options) internal pure {\n        if (_options.softCap > _options.hardCap) revert InvalidCapValue();\n        if (_options.min > _options.max) revert InvalidLimitValue();\n        if (_options.start >= _options.end) revert InvalidTimestampValue();\n    }\n\n\n    /**\n     * @dev Считаем, сколько токенов причитается конкретному участнику (пропорционально вкладу).\n     */\n    function userTokens(address contributor) public view returns (uint256) {\n        // Пропорция: (вклад / общий сбор) * pool.tokensClaimable\n        if (pool.weiRaised == 0) return 0;\n        return ((contributions[contributor] * SCALE) / pool.weiRaised)\n            * pool.tokensClaimable\n            / SCALE;\n    }\n\n    /**\n     * @dev Сколько токенов идёт на ликвидность\n     */\n    function _tokensForLiquidity() internal view returns (uint256) {\n        return pool.options.tokenDeposit * pool.options.liquidityBps / 10000;\n    }\n\n    /**\n     * @dev Сколько токенов идёт на пресейл (для участников)\n     */\n    function _tokensForPresale() internal view returns (uint256) {\n        return pool.options.tokenDeposit - _tokensForLiquidity();\n    }\n\n    /**\n     * @dev Сколько BNB пойдёт в пул ликвидности\n     */\n    function _weiForLiquidity() internal view returns (uint256) {\n        return pool.weiRaised * pool.options.liquidityBps / 10000;\n    }\n\n    /**\n     * @dev Добавление ликвидности через роутер (PancakeSwap / Uniswap V2).\n     */\n    function _liquify(uint256 _weiAmount, uint256 _tokenAmount) private {\n        (uint amountToken, uint amountETH, ) =\n            pool.uniswapV2Router02.addLiquidityETH{value : _weiAmount}(\n                address(pool.token),\n                _tokenAmount,\n                _tokenAmount,   // минимум токенов (0% проскальзывания в примере)\n                _weiAmount,     // минимум BNB\n                owner(),\n                block.timestamp + 600\n            );\n        \n        if (amountToken != _tokenAmount && amountETH != _weiAmount) {\n            revert LiquificationFailed();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"interfaces/IPresale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/**\n * This interface outlines the functions related to managing and interacting\n * with presale contracts. It includes capabilities such as depositing funds,\n * finalizing the presale, canceling the presale, claiming tokens, and refunding\n * contributions. Implementing contracts should provide the logic for these\n * operations in the context of a presale event.\n */\ninterface IPresale {\n    \n    /**\n     * @dev Emitted when an unauthorized address attempts an action requiring specific permissions.\n     */\n    error Unauthorized();\n\n    /**\n     * @dev Emitted when an action is performed in an invalid state.\n     * @param currentState The current state of the contract.\n     */\n    error InvalidState(uint8 currentState);\n\n    /**\n     * @dev Emitted when attempting to finalize a presale that has not reached its soft cap.\n     */\n    error SoftCapNotReached();\n\n    /**\n     * @dev Emitted when a purchase attempt exceeds the presale's hard cap.\n     */\n    error HardCapExceed();\n\n    /**\n     * @dev Emitted when user with no contribution attempts to claim tokens.\n     */\n    error NotClaimable();\n\n    /**\n     * @dev Emitted when a purchase or refund attempt is made outside the presale period.\n     */\n    error NotInPurchasePeriod();\n\n    /**\n     * @dev Emitted when a purchase amount is below the minimum allowed.\n     */\n    error PurchaseBelowMinimum();\n\n    /**\n     * @dev Emitted when a participant's purchase would exceed the maximum allowed contribution.\n     */\n    error PurchaseLimitExceed();\n\n    /**\n     * @dev Emitted when a refund is requested under conditions that do not permit refunds.\n     */\n    error NotRefundable();\n\n    /**\n     * @dev Emitted when the process of adding liquidity to a liquidity pool fails.\n     */\n    error LiquificationFailed();\n\n    /**\n     * @dev Emitted when the initialization parameters provided to the contract are invalid.\n     */\n    error InvalidInitializationParameters();\n\n    /**\n     * @dev Emitted when the pool validation parameters provided to the contract are invalid.\n     */\n    error InvalidCapValue();\n\n    /**\n     * @dev Emitted when the pool validation parameters provided to the contract are invalid.\n     */\n    error InvalidLimitValue();\n\n    /**\n     * @dev Emitted when the pool validation parameters provided to the contract are invalid.\n     */\n    error InvalidLiquidityValue();\n\n\n    /**\n     * @dev Emitted when the pool validation parameters provided to the contract are invalid.\n     */\n    error InvalidTimestampValue();\n\n    /**\n     * @dev Emitted when the presale contract owner deposits tokens for sale.\n     * This is usually done before the presale starts to ensure tokens are available for purchase.\n     * @param creator Address of the contract owner who performs the deposit.\n     * @param amount Amount of tokens deposited.\n     * @param timestamp Block timestamp when the deposit occurred.\n     */\n    event Deposit(address indexed creator, uint256 amount, uint256 timestamp);\n\n    /**\n     * @dev Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed,\n     * and the amount of tokens purchased.\n     * @param beneficiary Address of the participant who made the purchase.\n     * @param contribution Amount of ETH contributed by the participant.\n     */\n    event Purchase(address indexed beneficiary, uint256 contribution);\n\n    /**\n     * @dev Emitted when the presale is successfully finalized. Finalization may involve distributing tokens,\n     * transferring raised funds to a designated wallet, and/or enabling token claim functionality.\n     * @param creator Address of the contract owner who finalized the presale.\n     * @param amount Total amount of ETH raised in the presale.\n     * @param timestamp Block timestamp when the finalization occurred.\n     */\n    event Finalized(address indexed creator, uint256 amount, uint256 timestamp);\n\n    /**\n     * @dev Emitted when a participant successfully claims a refund. This is typically allowed when the presale\n     * is cancelled or does not meet its funding goals.\n     * @param beneficiary Address of the participant receiving the refund.\n     * @param amount Amount of wei refunded.\n     * @param timestamp Block timestamp when the refund occurred.\n     */\n    event Refund(address indexed beneficiary, uint256 amount, uint256 timestamp);\n\n    /**\n     * @dev Emitted when participants claim their purchased tokens after the presale is finalized. \n     * @param beneficiary Address of the participant claiming tokens.\n     * @param amount Amount of tokens claimed.\n     * @param timestamp Block timestamp when the claim occurred.\n     */\n    event TokenClaim(address indexed beneficiary, uint256 amount, uint256 timestamp);\n\n    /**\n     * @dev Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants\n     * to claim refunds for their contributions.\n     * @param creator Address of the contract owner who cancelled the presale.\n     * @param timestamp Block timestamp when the cancellation occurred.\n     */\n    event Cancel(address indexed creator, uint256 timestamp);\n\n    /**\n     * @dev Allows for the deposit of presale tokens by the owner.\n     * This function is intended to be called by the presale contract owner to\n     * deposit the tokens that are to be sold during the presale.\n     * \n     * @return The amount of tokens deposited for the presale.\n     */\n    function deposit() external returns (uint256);\n\n    /**\n     * @dev Finalizes the presale, allowing for the distribution of tokens to\n     * participants and the withdrawal of funds raised to the beneficiary. This\n     * function is typically called after the presale ends, assuming it meets\n     * any predefined criteria such as minimum funding goals.\n     * \n     * @return A boolean value indicating whether the presale was successfully\n     * finalized.\n     */\n    function finalize() external returns (bool);\n\n    /**\n     * @dev Cancels the presale and enables the refund process for participants.\n     * This function can be used in scenarios where the presale does not meet\n     * its goals or if the organizer decides to cancel the event for any reason.\n     * \n     * @return A boolean value indicating whether the presale was successfully\n     * cancelled.\n     */\n    function cancel() external returns (bool);\n\n    /**\n     * @dev Allows participants to claim their purchased tokens after the presale\n     * is finalized. Participants call this function to receive the tokens they\n     * are entitled to.\n     * \n     * @return The amount of tokens claimed by the caller.\n     */\n    function claim() external returns (uint256);\n\n    /**\n     * @dev Enables participants to request a refund of their contribution if the\n     * presale is cancelled or if they are otherwise eligible for a refund\n     * according to the presale's terms.\n     * \n     * @return The amount of funds refunded to the caller.\n     */\n    function refund() external returns (uint256);\n}"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "//SPDX-License-Identifier: UNLICENSED\n\n\npragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"SDC-Presale.sol",
								"interfaces/IPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS LT SWAP12 SWAP1 EXTCODECOPY EXP 0xEA 0x23 SWAP2 0xEE LOG0 0xC8 ADDRESS RETURNDATACOPY PUSH7 0x29797E67D4F1A6 0xF SWAP14 SHL PUSH20 0x4AD7D25E583664736F6C634300081C0033000000 ",
							"sourceMap": "233:5815:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030109b903c0aea2391eea0c8303e6629797e67d4f1a60f9d1b734ad7d25e583664736f6c634300081c0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"SDC-Presale.sol",
								"interfaces/IPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xC8 0xD0 SWAP3 CODECOPY 0xA5 SWAP12 PUSH14 0x8127DAF01C7A4B484E4331E32378 PUSH17 0x50CC36808EF7DBA49564736F6C63430008 SHR STOP CALLER ",
							"sourceMap": "411:484:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051c8d09239a59b6d8127daf01c7a4b484e4331e323787050cc36808ef7dba49564736f6c634300081c0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"SDC-Presale.sol",
								"interfaces/IPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x4cc957ba3709ab0cef11cae6a983fe33a931d5c0aeb0b9e3129b9a5799b37fe8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74305485aace6fb5aa13b699f2edcda13a401684ec78729fabadfab447ec3494\",\"dweb:/ipfs/QmdF1zEuHTskcYYrrCoaRo7cC5TDEJM1wPFVSXigyBmJ3j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x4cc957ba3709ab0cef11cae6a983fe33a931d5c0aeb0b9e3129b9a5799b37fe8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74305485aace6fb5aa13b699f2edcda13a401684ec78729fabadfab447ec3494\",\"dweb:/ipfs/QmdF1zEuHTskcYYrrCoaRo7cC5TDEJM1wPFVSXigyBmJ3j\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x2265bf397a975ed4e07bb22484fe9c078df3d5bb0a9e6c6e3fff07ee3e87cbdd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86a19560c1441a442c6998059ada03a67ab05997da6cc95a8ac31c55d1133e20\",\"dweb:/ipfs/QmTHjatmZ8sCpF8pTy9txZtCqDnd1xx3juog9G5RxUoPwF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SDC-Presale.sol": {
				"Presale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_weth",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapV2Router02",
									"type": "address"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenDeposit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "softCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "max",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "min",
											"type": "uint256"
										},
										{
											"internalType": "uint112",
											"name": "start",
											"type": "uint112"
										},
										{
											"internalType": "uint112",
											"name": "end",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "liquidityBps",
											"type": "uint32"
										}
									],
									"internalType": "struct Presale.PresaleOptions",
									"name": "_options",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "HardCapExceed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCapValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLimitValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLiquidityValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "currentState",
									"type": "uint8"
								}
							],
							"name": "InvalidState",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTimestampValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LiquificationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotClaimable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInPurchasePeriod",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotRefundable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PurchaseBelowMinimum",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PurchaseLimitExceed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoftCapNotReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Cancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Finalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "contribution",
									"type": "uint256"
								}
							],
							"name": "Purchase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Refund",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenClaim",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "contributions",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isWhitelistEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "uniswapV2Router02",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensClaimable",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokensLiquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weiRaised",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "weth",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "state",
									"type": "uint8"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenDeposit",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "hardCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "softCap",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "max",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "min",
											"type": "uint256"
										},
										{
											"internalType": "uint112",
											"name": "start",
											"type": "uint112"
										},
										{
											"internalType": "uint112",
											"name": "end",
											"type": "uint112"
										},
										{
											"internalType": "uint32",
											"name": "liquidityBps",
											"type": "uint32"
										}
									],
									"internalType": "struct Presale.PresaleOptions",
									"name": "options",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refund",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_enabled",
									"type": "bool"
								}
							],
							"name": "setWhitelistEnabled",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contributor",
									"type": "address"
								}
							],
							"name": "userTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"HardCapExceed()": [
								{
									"details": "Emitted when a purchase attempt exceeds the presale's hard cap."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"InvalidCapValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidInitializationParameters()": [
								{
									"details": "Emitted when the initialization parameters provided to the contract are invalid."
								}
							],
							"InvalidLimitValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidLiquidityValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidState(uint8)": [
								{
									"details": "Emitted when an action is performed in an invalid state.",
									"params": {
										"currentState": "The current state of the contract."
									}
								}
							],
							"InvalidTimestampValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"LiquificationFailed()": [
								{
									"details": "Emitted when the process of adding liquidity to a liquidity pool fails."
								}
							],
							"NotClaimable()": [
								{
									"details": "Emitted when user with no contribution attempts to claim tokens."
								}
							],
							"NotInPurchasePeriod()": [
								{
									"details": "Emitted when a purchase or refund attempt is made outside the presale period."
								}
							],
							"NotRefundable()": [
								{
									"details": "Emitted when a refund is requested under conditions that do not permit refunds."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"PurchaseBelowMinimum()": [
								{
									"details": "Emitted when a purchase amount is below the minimum allowed."
								}
							],
							"PurchaseLimitExceed()": [
								{
									"details": "Emitted when a participant's purchase would exceed the maximum allowed contribution."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							],
							"SoftCapNotReached()": [
								{
									"details": "Emitted when attempting to finalize a presale that has not reached its soft cap."
								}
							],
							"Unauthorized()": [
								{
									"details": "Emitted when an unauthorized address attempts an action requiring specific permissions."
								}
							]
						},
						"events": {
							"Cancel(address,uint256)": {
								"details": "Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants to claim refunds for their contributions.",
								"params": {
									"creator": "Address of the contract owner who cancelled the presale.",
									"timestamp": "Block timestamp when the cancellation occurred."
								}
							},
							"Deposit(address,uint256,uint256)": {
								"details": "Emitted when the presale contract owner deposits tokens for sale. This is usually done before the presale starts to ensure tokens are available for purchase.",
								"params": {
									"amount": "Amount of tokens deposited.",
									"creator": "Address of the contract owner who performs the deposit.",
									"timestamp": "Block timestamp when the deposit occurred."
								}
							},
							"Finalized(address,uint256,uint256)": {
								"details": "Emitted when the presale is successfully finalized. Finalization may involve distributing tokens, transferring raised funds to a designated wallet, and/or enabling token claim functionality.",
								"params": {
									"amount": "Total amount of ETH raised in the presale.",
									"creator": "Address of the contract owner who finalized the presale.",
									"timestamp": "Block timestamp when the finalization occurred."
								}
							},
							"Purchase(address,uint256)": {
								"details": "Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed, and the amount of tokens purchased.",
								"params": {
									"beneficiary": "Address of the participant who made the purchase.",
									"contribution": "Amount of ETH contributed by the participant."
								}
							},
							"Refund(address,uint256,uint256)": {
								"details": "Emitted when a participant successfully claims a refund. This is typically allowed when the presale is cancelled or does not meet its funding goals.",
								"params": {
									"amount": "Amount of wei refunded.",
									"beneficiary": "Address of the participant receiving the refund.",
									"timestamp": "Block timestamp when the refund occurred."
								}
							},
							"TokenClaim(address,uint256,uint256)": {
								"details": "Emitted when participants claim their purchased tokens after the presale is finalized. ",
								"params": {
									"amount": "Amount of tokens claimed.",
									"beneficiary": "Address of the participant claiming tokens.",
									"timestamp": "Block timestamp when the claim occurred."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_options": "Параметры пресейла (PresaleOptions).",
									"_token": "Адрес токена, который продаём.",
									"_uniswapV2Router02": "Адрес роутера (PancakeSwap/Uniswap).",
									"_weth": "Адрес WBNB в сети BSC (или WETH, если это другая EVM-сеть)."
								}
							},
							"deposit()": {
								"returns": {
									"_0": "Количество внесённых токенов."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"userTokens(address)": {
								"details": "Считаем, сколько токенов причитается конкретному участнику (пропорционально вкладу)."
							}
						},
						"title": "Presale contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SDC-Presale.sol\":695:15907  contract Presale is IPresale, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"SDC-Presale.sol\":3696:3701  false */\n  0x00\n    /* \"SDC-Presale.sol\":3663:3701  bool public isWhitelistEnabled = false */\n  0x10\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4556:4982  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"SDC-Presale.sol\":4713:4723  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4739:4765  _prevalidatePool(_options) */\n  tag_15\n    /* \"SDC-Presale.sol\":4756:4764  _options */\n  dup2\n    /* \"SDC-Presale.sol\":4739:4755  _prevalidatePool */\n  shl(0x20, tag_16)\n    /* \"SDC-Presale.sol\":4739:4765  _prevalidatePool(_options) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"SDC-Presale.sol\":4820:4838  _uniswapV2Router02 */\n  dup2\n    /* \"SDC-Presale.sol\":4776:4780  pool */\n  0x03\n    /* \"SDC-Presale.sol\":4776:4798  pool.uniswapV2Router02 */\n  0x01\n  add\n  0x00\n    /* \"SDC-Presale.sol\":4776:4839  pool.uniswapV2Router02 = IUniswapV2Router02(_uniswapV2Router02) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4869:4875  _token */\n  dup3\n    /* \"SDC-Presale.sol\":4849:4853  pool */\n  0x03\n    /* \"SDC-Presale.sol\":4849:4859  pool.token */\n  0x00\n  add\n  0x00\n    /* \"SDC-Presale.sol\":4849:4876  pool.token = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4899:4900  1 */\n  0x01\n    /* \"SDC-Presale.sol\":4886:4890  pool */\n  0x03\n    /* \"SDC-Presale.sol\":4886:4896  pool.state */\n  0x06\n  add\n  0x14\n    /* \"SDC-Presale.sol\":4886:4900  pool.state = 1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4937:4942  _weth */\n  dup4\n    /* \"SDC-Presale.sol\":4925:4929  pool */\n  0x03\n    /* \"SDC-Presale.sol\":4925:4934  pool.weth */\n  0x06\n  add\n  0x00\n    /* \"SDC-Presale.sol\":4925:4942  pool.weth = _weth */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"SDC-Presale.sol\":4967:4975  _options */\n  dup1\n    /* \"SDC-Presale.sol\":4952:4956  pool */\n  0x03\n    /* \"SDC-Presale.sol\":4952:4964  pool.options */\n  0x07\n  add\n    /* \"SDC-Presale.sol\":4952:4975  pool.options = _options */\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  sstore\n  0x80\n  dup3\n  add\n  mload\n  dup2\n  0x04\n  add\n  sstore\n  0xa0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0xc0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  exp(0x0100, 0x0e)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  0xe0\n  dup3\n  add\n  mload\n  dup2\n  0x05\n  add\n  exp(0x0100, 0x1c)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n  swap1\n  pop\n  pop\n    /* \"SDC-Presale.sol\":4556:4982  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"SDC-Presale.sol\":695:15907  contract Presale is IPresale, Ownable, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SDC-Presale.sol\":13564:13863  function _prevalidatePool(PresaleOptions memory _options) internal pure {... */\ntag_16:\n    /* \"SDC-Presale.sol\":13669:13677  _options */\n  dup1\n    /* \"SDC-Presale.sol\":13669:13685  _options.hardCap */\n  0x20\n  add\n  mload\n    /* \"SDC-Presale.sol\":13650:13658  _options */\n  dup2\n    /* \"SDC-Presale.sol\":13650:13666  _options.softCap */\n  0x40\n  add\n  mload\n    /* \"SDC-Presale.sol\":13650:13685  _options.softCap > _options.hardCap */\n  gt\n    /* \"SDC-Presale.sol\":13646:13711  if (_options.softCap > _options.hardCap) revert InvalidCapValue() */\n  iszero\n  tag_20\n  jumpi\n    /* \"SDC-Presale.sol\":13694:13711  InvalidCapValue() */\n  mload(0x40)\n  0xa606ca7800000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SDC-Presale.sol\":13646:13711  if (_options.softCap > _options.hardCap) revert InvalidCapValue() */\ntag_20:\n    /* \"SDC-Presale.sol\":13740:13748  _options */\n  dup1\n    /* \"SDC-Presale.sol\":13740:13752  _options.max */\n  0x60\n  add\n  mload\n    /* \"SDC-Presale.sol\":13725:13733  _options */\n  dup2\n    /* \"SDC-Presale.sol\":13725:13737  _options.min */\n  0x80\n  add\n  mload\n    /* \"SDC-Presale.sol\":13725:13752  _options.min > _options.max */\n  gt\n    /* \"SDC-Presale.sol\":13721:13780  if (_options.min > _options.max) revert InvalidLimitValue() */\n  iszero\n  tag_21\n  jumpi\n    /* \"SDC-Presale.sol\":13761:13780  InvalidLimitValue() */\n  mload(0x40)\n  0xb581346100000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SDC-Presale.sol\":13721:13780  if (_options.min > _options.max) revert InvalidLimitValue() */\ntag_21:\n    /* \"SDC-Presale.sol\":13812:13820  _options */\n  dup1\n    /* \"SDC-Presale.sol\":13812:13824  _options.end */\n  0xc0\n  add\n  mload\n    /* \"SDC-Presale.sol\":13794:13824  _options.start >= _options.end */\n  0xffffffffffffffffffffffffffff\n  and\n    /* \"SDC-Presale.sol\":13794:13802  _options */\n  dup2\n    /* \"SDC-Presale.sol\":13794:13808  _options.start */\n  0xa0\n  add\n  mload\n    /* \"SDC-Presale.sol\":13794:13824  _options.start >= _options.end */\n  0xffffffffffffffffffffffffffff\n  and\n  lt\n    /* \"SDC-Presale.sol\":13790:13856  if (_options.start >= _options.end) revert InvalidTimestampValue() */\n  tag_22\n  jumpi\n    /* \"SDC-Presale.sol\":13833:13856  InvalidTimestampValue() */\n  mload(0x40)\n  0xeff2c18200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"SDC-Presale.sol\":13790:13856  if (_options.start >= _options.end) revert InvalidTimestampValue() */\ntag_22:\n    /* \"SDC-Presale.sol\":13564:13863  function _prevalidatePool(PresaleOptions memory _options) internal pure {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_23:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_24:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_26:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_27:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_53\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_26\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_28:\n    /* \"#utility.yul\":641:665   */\n  tag_55\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_27\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_56\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_56:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_29:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_58\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:962   */\ntag_30:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":951:952   */\n  0x00\n    /* \"#utility.yul\":944:956   */\n  revert\n    /* \"#utility.yul\":968:1070   */\ntag_31:\n    /* \"#utility.yul\":1009:1015   */\n  0x00\n    /* \"#utility.yul\":1060:1062   */\n  0x1f\n    /* \"#utility.yul\":1056:1063   */\n  not\n    /* \"#utility.yul\":1051:1053   */\n  0x1f\n    /* \"#utility.yul\":1044:1049   */\n  dup4\n    /* \"#utility.yul\":1040:1054   */\n  add\n    /* \"#utility.yul\":1036:1064   */\n  and\n    /* \"#utility.yul\":1026:1064   */\n  swap1\n  pop\n    /* \"#utility.yul\":968:1070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1076:1256   */\ntag_32:\n    /* \"#utility.yul\":1124:1201   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1121:1122   */\n  0x00\n    /* \"#utility.yul\":1114:1202   */\n  mstore\n    /* \"#utility.yul\":1221:1225   */\n  0x41\n    /* \"#utility.yul\":1218:1219   */\n  0x04\n    /* \"#utility.yul\":1211:1226   */\n  mstore\n    /* \"#utility.yul\":1245:1249   */\n  0x24\n    /* \"#utility.yul\":1242:1243   */\n  0x00\n    /* \"#utility.yul\":1235:1250   */\n  revert\n    /* \"#utility.yul\":1262:1543   */\ntag_33:\n    /* \"#utility.yul\":1345:1372   */\n  tag_63\n    /* \"#utility.yul\":1367:1371   */\n  dup3\n    /* \"#utility.yul\":1345:1372   */\n  tag_31\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1337:1343   */\n  dup2\n    /* \"#utility.yul\":1333:1373   */\n  add\n    /* \"#utility.yul\":1475:1481   */\n  dup2\n    /* \"#utility.yul\":1463:1473   */\n  dup2\n    /* \"#utility.yul\":1460:1482   */\n  lt\n    /* \"#utility.yul\":1439:1457   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1427:1437   */\n  dup3\n    /* \"#utility.yul\":1424:1458   */\n  gt\n    /* \"#utility.yul\":1421:1483   */\n  or\n    /* \"#utility.yul\":1418:1506   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1486:1504   */\n  tag_65\n  tag_32\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1418:1506   */\ntag_64:\n    /* \"#utility.yul\":1526:1536   */\n  dup1\n    /* \"#utility.yul\":1522:1524   */\n  0x40\n    /* \"#utility.yul\":1515:1537   */\n  mstore\n    /* \"#utility.yul\":1305:1543   */\n  pop\n    /* \"#utility.yul\":1262:1543   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1549:1678   */\ntag_34:\n    /* \"#utility.yul\":1583:1589   */\n  0x00\n    /* \"#utility.yul\":1610:1630   */\n  tag_67\n  tag_23\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1600:1630   */\n  swap1\n  pop\n    /* \"#utility.yul\":1639:1672   */\n  tag_68\n    /* \"#utility.yul\":1667:1671   */\n  dup3\n    /* \"#utility.yul\":1659:1665   */\n  dup3\n    /* \"#utility.yul\":1639:1672   */\n  tag_33\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1549:1678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1807:1884   */\ntag_36:\n    /* \"#utility.yul\":1844:1851   */\n  0x00\n    /* \"#utility.yul\":1873:1878   */\n  dup2\n    /* \"#utility.yul\":1862:1878   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1884   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1890:2012   */\ntag_37:\n    /* \"#utility.yul\":1963:1987   */\n  tag_72\n    /* \"#utility.yul\":1981:1986   */\n  dup2\n    /* \"#utility.yul\":1963:1987   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1956:1961   */\n  dup2\n    /* \"#utility.yul\":1953:1988   */\n  eq\n    /* \"#utility.yul\":1943:2006   */\n  tag_73\n  jumpi\n    /* \"#utility.yul\":2002:2003   */\n  0x00\n    /* \"#utility.yul\":1999:2000   */\n  0x00\n    /* \"#utility.yul\":1992:2004   */\n  revert\n    /* \"#utility.yul\":1943:2006   */\ntag_73:\n    /* \"#utility.yul\":1890:2012   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2018:2161   */\ntag_38:\n    /* \"#utility.yul\":2075:2080   */\n  0x00\n    /* \"#utility.yul\":2106:2112   */\n  dup2\n    /* \"#utility.yul\":2100:2113   */\n  mload\n    /* \"#utility.yul\":2091:2113   */\n  swap1\n  pop\n    /* \"#utility.yul\":2122:2155   */\n  tag_75\n    /* \"#utility.yul\":2149:2154   */\n  dup2\n    /* \"#utility.yul\":2122:2155   */\n  tag_37\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2018:2161   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2167:2281   */\ntag_39:\n    /* \"#utility.yul\":2204:2211   */\n  0x00\n    /* \"#utility.yul\":2244:2274   */\n  0xffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2237:2242   */\n  dup3\n    /* \"#utility.yul\":2233:2275   */\n  and\n    /* \"#utility.yul\":2222:2275   */\n  swap1\n  pop\n    /* \"#utility.yul\":2167:2281   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2287:2409   */\ntag_40:\n    /* \"#utility.yul\":2360:2384   */\n  tag_78\n    /* \"#utility.yul\":2378:2383   */\n  dup2\n    /* \"#utility.yul\":2360:2384   */\n  tag_39\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2353:2358   */\n  dup2\n    /* \"#utility.yul\":2350:2385   */\n  eq\n    /* \"#utility.yul\":2340:2403   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":2399:2400   */\n  0x00\n    /* \"#utility.yul\":2396:2397   */\n  0x00\n    /* \"#utility.yul\":2389:2401   */\n  revert\n    /* \"#utility.yul\":2340:2403   */\ntag_79:\n    /* \"#utility.yul\":2287:2409   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2415:2558   */\ntag_41:\n    /* \"#utility.yul\":2472:2477   */\n  0x00\n    /* \"#utility.yul\":2503:2509   */\n  dup2\n    /* \"#utility.yul\":2497:2510   */\n  mload\n    /* \"#utility.yul\":2488:2510   */\n  swap1\n  pop\n    /* \"#utility.yul\":2519:2552   */\n  tag_81\n    /* \"#utility.yul\":2546:2551   */\n  dup2\n    /* \"#utility.yul\":2519:2552   */\n  tag_40\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2415:2558   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2564:2657   */\ntag_42:\n    /* \"#utility.yul\":2600:2607   */\n  0x00\n    /* \"#utility.yul\":2640:2650   */\n  0xffffffff\n    /* \"#utility.yul\":2633:2638   */\n  dup3\n    /* \"#utility.yul\":2629:2651   */\n  and\n    /* \"#utility.yul\":2618:2651   */\n  swap1\n  pop\n    /* \"#utility.yul\":2564:2657   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2663:2783   */\ntag_43:\n    /* \"#utility.yul\":2735:2758   */\n  tag_84\n    /* \"#utility.yul\":2752:2757   */\n  dup2\n    /* \"#utility.yul\":2735:2758   */\n  tag_42\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2728:2733   */\n  dup2\n    /* \"#utility.yul\":2725:2759   */\n  eq\n    /* \"#utility.yul\":2715:2777   */\n  tag_85\n  jumpi\n    /* \"#utility.yul\":2773:2774   */\n  0x00\n    /* \"#utility.yul\":2770:2771   */\n  0x00\n    /* \"#utility.yul\":2763:2775   */\n  revert\n    /* \"#utility.yul\":2715:2777   */\ntag_85:\n    /* \"#utility.yul\":2663:2783   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2789:2930   */\ntag_44:\n    /* \"#utility.yul\":2845:2850   */\n  0x00\n    /* \"#utility.yul\":2876:2882   */\n  dup2\n    /* \"#utility.yul\":2870:2883   */\n  mload\n    /* \"#utility.yul\":2861:2883   */\n  swap1\n  pop\n    /* \"#utility.yul\":2892:2924   */\n  tag_87\n    /* \"#utility.yul\":2918:2923   */\n  dup2\n    /* \"#utility.yul\":2892:2924   */\n  tag_43\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":2789:2930   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2973:4646   */\ntag_45:\n    /* \"#utility.yul\":3065:3070   */\n  0x00\n    /* \"#utility.yul\":3109:3115   */\n  0x0100\n    /* \"#utility.yul\":3097:3106   */\n  dup3\n    /* \"#utility.yul\":3092:3095   */\n  dup5\n    /* \"#utility.yul\":3088:3107   */\n  sub\n    /* \"#utility.yul\":3084:3116   */\n  slt\n    /* \"#utility.yul\":3081:3200   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3119:3198   */\n  tag_90\n  tag_30\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3081:3200   */\ntag_89:\n    /* \"#utility.yul\":3218:3241   */\n  tag_91\n    /* \"#utility.yul\":3234:3240   */\n  0x0100\n    /* \"#utility.yul\":3218:3241   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3209:3241   */\n  swap1\n  pop\n    /* \"#utility.yul\":3308:3309   */\n  0x00\n    /* \"#utility.yul\":3348:3408   */\n  tag_92\n    /* \"#utility.yul\":3404:3407   */\n  dup5\n    /* \"#utility.yul\":3395:3401   */\n  dup3\n    /* \"#utility.yul\":3384:3393   */\n  dup6\n    /* \"#utility.yul\":3380:3402   */\n  add\n    /* \"#utility.yul\":3348:3408   */\n  tag_38\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":3341:3345   */\n  0x00\n    /* \"#utility.yul\":3334:3339   */\n  dup4\n    /* \"#utility.yul\":3330:3346   */\n  add\n    /* \"#utility.yul\":3323:3409   */\n  mstore\n    /* \"#utility.yul\":3251:3420   */\n  pop\n    /* \"#utility.yul\":3482:3484   */\n  0x20\n    /* \"#utility.yul\":3523:3583   */\n  tag_93\n    /* \"#utility.yul\":3579:3582   */\n  dup5\n    /* \"#utility.yul\":3570:3576   */\n  dup3\n    /* \"#utility.yul\":3559:3568   */\n  dup6\n    /* \"#utility.yul\":3555:3577   */\n  add\n    /* \"#utility.yul\":3523:3583   */\n  tag_38\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":3516:3520   */\n  0x20\n    /* \"#utility.yul\":3509:3514   */\n  dup4\n    /* \"#utility.yul\":3505:3521   */\n  add\n    /* \"#utility.yul\":3498:3584   */\n  mstore\n    /* \"#utility.yul\":3430:3595   */\n  pop\n    /* \"#utility.yul\":3657:3659   */\n  0x40\n    /* \"#utility.yul\":3698:3758   */\n  tag_94\n    /* \"#utility.yul\":3754:3757   */\n  dup5\n    /* \"#utility.yul\":3745:3751   */\n  dup3\n    /* \"#utility.yul\":3734:3743   */\n  dup6\n    /* \"#utility.yul\":3730:3752   */\n  add\n    /* \"#utility.yul\":3698:3758   */\n  tag_38\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":3691:3695   */\n  0x40\n    /* \"#utility.yul\":3684:3689   */\n  dup4\n    /* \"#utility.yul\":3680:3696   */\n  add\n    /* \"#utility.yul\":3673:3759   */\n  mstore\n    /* \"#utility.yul\":3605:3770   */\n  pop\n    /* \"#utility.yul\":3828:3830   */\n  0x60\n    /* \"#utility.yul\":3869:3929   */\n  tag_95\n    /* \"#utility.yul\":3925:3928   */\n  dup5\n    /* \"#utility.yul\":3916:3922   */\n  dup3\n    /* \"#utility.yul\":3905:3914   */\n  dup6\n    /* \"#utility.yul\":3901:3923   */\n  add\n    /* \"#utility.yul\":3869:3929   */\n  tag_38\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3862:3866   */\n  0x60\n    /* \"#utility.yul\":3855:3860   */\n  dup4\n    /* \"#utility.yul\":3851:3867   */\n  add\n    /* \"#utility.yul\":3844:3930   */\n  mstore\n    /* \"#utility.yul\":3780:3941   */\n  pop\n    /* \"#utility.yul\":3999:4002   */\n  0x80\n    /* \"#utility.yul\":4041:4101   */\n  tag_96\n    /* \"#utility.yul\":4097:4100   */\n  dup5\n    /* \"#utility.yul\":4088:4094   */\n  dup3\n    /* \"#utility.yul\":4077:4086   */\n  dup6\n    /* \"#utility.yul\":4073:4095   */\n  add\n    /* \"#utility.yul\":4041:4101   */\n  tag_38\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4034:4038   */\n  0x80\n    /* \"#utility.yul\":4027:4032   */\n  dup4\n    /* \"#utility.yul\":4023:4039   */\n  add\n    /* \"#utility.yul\":4016:4102   */\n  mstore\n    /* \"#utility.yul\":3951:4113   */\n  pop\n    /* \"#utility.yul\":4173:4176   */\n  0xa0\n    /* \"#utility.yul\":4215:4275   */\n  tag_97\n    /* \"#utility.yul\":4271:4274   */\n  dup5\n    /* \"#utility.yul\":4262:4268   */\n  dup3\n    /* \"#utility.yul\":4251:4260   */\n  dup6\n    /* \"#utility.yul\":4247:4269   */\n  add\n    /* \"#utility.yul\":4215:4275   */\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4208:4212   */\n  0xa0\n    /* \"#utility.yul\":4201:4206   */\n  dup4\n    /* \"#utility.yul\":4197:4213   */\n  add\n    /* \"#utility.yul\":4190:4276   */\n  mstore\n    /* \"#utility.yul\":4123:4287   */\n  pop\n    /* \"#utility.yul\":4345:4348   */\n  0xc0\n    /* \"#utility.yul\":4387:4447   */\n  tag_98\n    /* \"#utility.yul\":4443:4446   */\n  dup5\n    /* \"#utility.yul\":4434:4440   */\n  dup3\n    /* \"#utility.yul\":4423:4432   */\n  dup6\n    /* \"#utility.yul\":4419:4441   */\n  add\n    /* \"#utility.yul\":4387:4447   */\n  tag_41\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4380:4384   */\n  0xc0\n    /* \"#utility.yul\":4373:4378   */\n  dup4\n    /* \"#utility.yul\":4369:4385   */\n  add\n    /* \"#utility.yul\":4362:4448   */\n  mstore\n    /* \"#utility.yul\":4297:4459   */\n  pop\n    /* \"#utility.yul\":4526:4529   */\n  0xe0\n    /* \"#utility.yul\":4568:4627   */\n  tag_99\n    /* \"#utility.yul\":4623:4626   */\n  dup5\n    /* \"#utility.yul\":4614:4620   */\n  dup3\n    /* \"#utility.yul\":4603:4612   */\n  dup6\n    /* \"#utility.yul\":4599:4621   */\n  add\n    /* \"#utility.yul\":4568:4627   */\n  tag_44\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":4561:4565   */\n  0xe0\n    /* \"#utility.yul\":4554:4559   */\n  dup4\n    /* \"#utility.yul\":4550:4566   */\n  add\n    /* \"#utility.yul\":4543:4628   */\n  mstore\n    /* \"#utility.yul\":4469:4639   */\n  pop\n    /* \"#utility.yul\":2973:4646   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4652:5536   */\ntag_3:\n    /* \"#utility.yul\":4781:4787   */\n  0x00\n    /* \"#utility.yul\":4789:4795   */\n  0x00\n    /* \"#utility.yul\":4797:4803   */\n  0x00\n    /* \"#utility.yul\":4805:4811   */\n  0x00\n    /* \"#utility.yul\":4854:4857   */\n  0x0160\n    /* \"#utility.yul\":4842:4851   */\n  dup6\n    /* \"#utility.yul\":4833:4840   */\n  dup8\n    /* \"#utility.yul\":4829:4852   */\n  sub\n    /* \"#utility.yul\":4825:4858   */\n  slt\n    /* \"#utility.yul\":4822:4942   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4861:4940   */\n  tag_102\n  tag_24\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4822:4942   */\ntag_101:\n    /* \"#utility.yul\":4981:4982   */\n  0x00\n    /* \"#utility.yul\":5006:5070   */\n  tag_103\n    /* \"#utility.yul\":5062:5069   */\n  dup8\n    /* \"#utility.yul\":5053:5059   */\n  dup3\n    /* \"#utility.yul\":5042:5051   */\n  dup9\n    /* \"#utility.yul\":5038:5060   */\n  add\n    /* \"#utility.yul\":5006:5070   */\n  tag_29\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4996:5070   */\n  swap5\n  pop\n    /* \"#utility.yul\":4952:5080   */\n  pop\n    /* \"#utility.yul\":5119:5121   */\n  0x20\n    /* \"#utility.yul\":5145:5209   */\n  tag_104\n    /* \"#utility.yul\":5201:5208   */\n  dup8\n    /* \"#utility.yul\":5192:5198   */\n  dup3\n    /* \"#utility.yul\":5181:5190   */\n  dup9\n    /* \"#utility.yul\":5177:5199   */\n  add\n    /* \"#utility.yul\":5145:5209   */\n  tag_29\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5135:5209   */\n  swap4\n  pop\n    /* \"#utility.yul\":5090:5219   */\n  pop\n    /* \"#utility.yul\":5258:5260   */\n  0x40\n    /* \"#utility.yul\":5284:5348   */\n  tag_105\n    /* \"#utility.yul\":5340:5347   */\n  dup8\n    /* \"#utility.yul\":5331:5337   */\n  dup3\n    /* \"#utility.yul\":5320:5329   */\n  dup9\n    /* \"#utility.yul\":5316:5338   */\n  add\n    /* \"#utility.yul\":5284:5348   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5274:5348   */\n  swap3\n  pop\n    /* \"#utility.yul\":5229:5358   */\n  pop\n    /* \"#utility.yul\":5397:5399   */\n  0x60\n    /* \"#utility.yul\":5423:5519   */\n  tag_106\n    /* \"#utility.yul\":5511:5518   */\n  dup8\n    /* \"#utility.yul\":5502:5508   */\n  dup3\n    /* \"#utility.yul\":5491:5500   */\n  dup9\n    /* \"#utility.yul\":5487:5509   */\n  add\n    /* \"#utility.yul\":5423:5519   */\n  tag_45\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5413:5519   */\n  swap2\n  pop\n    /* \"#utility.yul\":5368:5529   */\n  pop\n    /* \"#utility.yul\":4652:5536   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5542:5660   */\ntag_46:\n    /* \"#utility.yul\":5629:5653   */\n  tag_108\n    /* \"#utility.yul\":5647:5652   */\n  dup2\n    /* \"#utility.yul\":5629:5653   */\n  tag_27\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5624:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5654   */\n  mstore\n    /* \"#utility.yul\":5542:5660   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5666:5888   */\ntag_10:\n    /* \"#utility.yul\":5759:5763   */\n  0x00\n    /* \"#utility.yul\":5797:5799   */\n  0x20\n    /* \"#utility.yul\":5786:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5800   */\n  add\n    /* \"#utility.yul\":5774:5800   */\n  swap1\n  pop\n    /* \"#utility.yul\":5810:5881   */\n  tag_110\n    /* \"#utility.yul\":5878:5879   */\n  0x00\n    /* \"#utility.yul\":5867:5876   */\n  dup4\n    /* \"#utility.yul\":5863:5880   */\n  add\n    /* \"#utility.yul\":5854:5860   */\n  dup5\n    /* \"#utility.yul\":5810:5881   */\n  tag_46\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5666:5888   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SDC-Presale.sol\":695:15907  contract Presale is IPresale, Ownable, ReentrancyGuard {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SDC-Presale.sol\":695:15907  contract Presale is IPresale, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd0e30db0\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xea8a1af0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xed498fa8\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7f649783\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x4bb278f3\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x4bb278f3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x548db174\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x590e1ae3\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x052d9e7e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16f0115b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x184d69ab\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x42e94c90\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"SDC-Presale.sol\":5120:5152  _purchase(msg.sender, msg.value) */\n      tag_24\n        /* \"SDC-Presale.sol\":5130:5140  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":5142:5151  msg.value */\n      callvalue\n        /* \"SDC-Presale.sol\":5120:5129  _purchase */\n      tag_25\n        /* \"SDC-Presale.sol\":5120:5152  _purchase(msg.sender, msg.value) */\n      jump\t// in\n    tag_24:\n        /* \"SDC-Presale.sol\":695:15907  contract Presale is IPresale, Ownable, ReentrancyGuard {... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"SDC-Presale.sol\":11467:11576  function setWhitelistEnabled(bool _enabled) external onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"SDC-Presale.sol\":3536:3552  Pool public pool */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap10\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":3663:3701  bool public isWhitelistEnabled = false */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":3403:3451  mapping(address => uint256) public contributions */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":9297:10411  function finalize() external onlyOwner nonReentrant returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":7536:8237  function claim() external nonReentrant returns (uint256) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":11928:12122  function removeFromWhitelist(address[] calldata accounts) external onlyOwner {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      revert(0x00, 0x00)\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"SDC-Presale.sol\":8399:8805  function refund() external onlyRefundable nonReentrant returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      stop\n        /* \"SDC-Presale.sol\":11659:11847  function addToWhitelist(address[] calldata accounts) external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":3707:3748  mapping(address => bool) public whitelist */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      revert(0x00, 0x00)\n    tag_77:\n      pop\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":5722:6668  function deposit() external onlyOwner returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":10659:11172  function cancel() external onlyOwner returns(bool) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SDC-Presale.sol\":14056:14393  function userTokens(address contributor) public view returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      revert(0x00, 0x00)\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"SDC-Presale.sol\":7082:7351  function _purchase(address beneficiary, uint256 amount) private nonReentrant {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_100\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_100:\n        /* \"SDC-Presale.sol\":7169:7210  _prevalidatePurchase(beneficiary, amount) */\n      tag_103\n        /* \"SDC-Presale.sol\":7190:7201  beneficiary */\n      dup3\n        /* \"SDC-Presale.sol\":7203:7209  amount */\n      dup3\n        /* \"SDC-Presale.sol\":7169:7189  _prevalidatePurchase */\n      tag_104\n        /* \"SDC-Presale.sol\":7169:7210  _prevalidatePurchase(beneficiary, amount) */\n      jump\t// in\n    tag_103:\n        /* \"SDC-Presale.sol\":7239:7245  amount */\n      dup1\n        /* \"SDC-Presale.sol\":7221:7225  pool */\n      0x03\n        /* \"SDC-Presale.sol\":7221:7235  pool.weiRaised */\n      0x05\n      add\n      0x00\n        /* \"SDC-Presale.sol\":7221:7245  pool.weiRaised += amount */\n      dup3\n      dup3\n      sload\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":7285:7291  amount */\n      dup1\n        /* \"SDC-Presale.sol\":7255:7268  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":7255:7281  contributions[beneficiary] */\n      0x00\n        /* \"SDC-Presale.sol\":7269:7280  beneficiary */\n      dup5\n        /* \"SDC-Presale.sol\":7255:7281  contributions[beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SDC-Presale.sol\":7255:7291  contributions[beneficiary] += amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_107:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":7324:7335  beneficiary */\n      dup2\n        /* \"SDC-Presale.sol\":7315:7344  Purchase(beneficiary, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632\n        /* \"SDC-Presale.sol\":7337:7343  amount */\n      dup3\n        /* \"SDC-Presale.sol\":7315:7344  Purchase(beneficiary, amount) */\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_109\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_109:\n        /* \"SDC-Presale.sol\":7082:7351  function _purchase(address beneficiary, uint256 amount) private nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SDC-Presale.sol\":11467:11576  function setWhitelistEnabled(bool _enabled) external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"SDC-Presale.sol\":11561:11569  _enabled */\n      dup1\n        /* \"SDC-Presale.sol\":11540:11558  isWhitelistEnabled */\n      0x10\n      0x00\n        /* \"SDC-Presale.sol\":11540:11569  isWhitelistEnabled = _enabled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":11467:11576  function setWhitelistEnabled(bool _enabled) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SDC-Presale.sol\":3536:3552  Pool public pool */\n    tag_33:\n      0x03\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x07\n      add\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x05\n      dup3\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n      0xffffffff\n      and\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n      dup10\n      jump\t// out\n        /* \"SDC-Presale.sol\":3663:3701  bool public isWhitelistEnabled = false */\n    tag_38:\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SDC-Presale.sol\":3403:3451  mapping(address => uint256) public contributions */\n    tag_45:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"SDC-Presale.sol\":9297:10411  function finalize() external onlyOwner nonReentrant returns (bool) {... */\n    tag_50:\n        /* \"SDC-Presale.sol\":9358:9362  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_118:\n        /* \"SDC-Presale.sol\":9392:9393  2 */\n      0x02\n        /* \"SDC-Presale.sol\":9378:9382  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9378:9388  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":9378:9393  pool.state != 2 */\n      0xff\n      and\n      eq\n        /* \"SDC-Presale.sol\":9374:9426  if (pool.state != 2) revert InvalidState(pool.state) */\n      tag_120\n      jumpi\n        /* \"SDC-Presale.sol\":9415:9419  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9415:9425  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":9402:9426  InvalidState(pool.state) */\n      mload(0x40)\n      0xd07e897600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":9374:9426  if (pool.state != 2) revert InvalidState(pool.state) */\n    tag_120:\n        /* \"SDC-Presale.sol\":9598:9602  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9598:9610  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":9598:9618  pool.options.softCap */\n      0x02\n      add\n      sload\n        /* \"SDC-Presale.sol\":9581:9585  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9581:9595  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":9581:9618  pool.weiRaised < pool.options.softCap */\n      lt\n        /* \"SDC-Presale.sol\":9581:9656  pool.weiRaised < pool.options.softCap && block.timestamp < pool.options.end */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":9640:9644  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9640:9652  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":9640:9656  pool.options.end */\n      0x05\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":9622:9656  block.timestamp < pool.options.end */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":9622:9637  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":9622:9656  block.timestamp < pool.options.end */\n      lt\n        /* \"SDC-Presale.sol\":9581:9656  pool.weiRaised < pool.options.softCap && block.timestamp < pool.options.end */\n    tag_123:\n        /* \"SDC-Presale.sol\":9577:9709  if (pool.weiRaised < pool.options.softCap && block.timestamp < pool.options.end) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"SDC-Presale.sol\":9679:9698  SoftCapNotReached() */\n      mload(0x40)\n      0x2bdc91ad00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":9577:9709  if (pool.weiRaised < pool.options.softCap && block.timestamp < pool.options.end) {... */\n    tag_124:\n        /* \"SDC-Presale.sol\":9796:9797  4 */\n      0x04\n        /* \"SDC-Presale.sol\":9783:9787  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9783:9793  pool.state */\n      0x06\n      add\n      0x14\n        /* \"SDC-Presale.sol\":9783:9797  pool.state = 4 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":9905:9925  uint256 liquidityWei */\n      0x00\n        /* \"SDC-Presale.sol\":9928:9946  _weiForLiquidity() */\n      tag_125\n        /* \"SDC-Presale.sol\":9928:9944  _weiForLiquidity */\n      tag_126\n        /* \"SDC-Presale.sol\":9928:9946  _weiForLiquidity() */\n      jump\t// in\n    tag_125:\n        /* \"SDC-Presale.sol\":9905:9946  uint256 liquidityWei = _weiForLiquidity() */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":9956:10000  _liquify(liquidityWei, pool.tokensLiquidity) */\n      tag_127\n        /* \"SDC-Presale.sol\":9965:9977  liquidityWei */\n      dup2\n        /* \"SDC-Presale.sol\":9979:9983  pool */\n      0x03\n        /* \"SDC-Presale.sol\":9979:9999  pool.tokensLiquidity */\n      0x04\n      add\n      sload\n        /* \"SDC-Presale.sol\":9956:9964  _liquify */\n      tag_128\n        /* \"SDC-Presale.sol\":9956:10000  _liquify(liquidityWei, pool.tokensLiquidity) */\n      jump\t// in\n    tag_127:\n        /* \"SDC-Presale.sol\":10031:10035  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10031:10051  pool.tokensLiquidity */\n      0x04\n      add\n      sload\n        /* \"SDC-Presale.sol\":10010:10014  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10010:10027  pool.tokenBalance */\n      0x02\n      add\n      0x00\n        /* \"SDC-Presale.sol\":10010:10051  pool.tokenBalance -= pool.tokensLiquidity */\n      dup3\n      dup3\n      sload\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":10162:10182  uint256 withdrawable */\n      0x00\n        /* \"SDC-Presale.sol\":10202:10214  liquidityWei */\n      dup2\n        /* \"SDC-Presale.sol\":10185:10189  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10185:10199  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":10185:10214  pool.weiRaised - liquidityWei */\n      tag_131\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n        /* \"SDC-Presale.sol\":10162:10214  uint256 withdrawable = pool.weiRaised - liquidityWei */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":10243:10244  0 */\n      0x00\n        /* \"SDC-Presale.sol\":10228:10240  withdrawable */\n      dup2\n        /* \"SDC-Presale.sol\":10228:10244  withdrawable > 0 */\n      gt\n        /* \"SDC-Presale.sol\":10224:10314  if (withdrawable > 0) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"SDC-Presale.sol\":10260:10303  payable(msg.sender).sendValue(withdrawable) */\n      tag_133\n        /* \"SDC-Presale.sol\":10290:10302  withdrawable */\n      dup2\n        /* \"SDC-Presale.sol\":10268:10278  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":10260:10289  payable(msg.sender).sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"SDC-Presale.sol\":10260:10303  payable(msg.sender).sendValue(withdrawable) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"SDC-Presale.sol\":10224:10314  if (withdrawable > 0) {... */\n    tag_132:\n        /* \"SDC-Presale.sol\":10339:10349  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":10329:10383  Finalized(msg.sender, pool.weiRaised, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x616c9469db50815ae0f1d0a020d9fc9060da7c57f03559afb0d4ebdaa0a3a05e\n        /* \"SDC-Presale.sol\":10351:10355  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10351:10365  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":10367:10382  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":10329:10383  Finalized(msg.sender, pool.weiRaised, block.timestamp) */\n      mload(0x40)\n      tag_135\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SDC-Presale.sol\":10400:10404  true */\n      0x01\n        /* \"SDC-Presale.sol\":10393:10404  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_137:\n        /* \"SDC-Presale.sol\":9297:10411  function finalize() external onlyOwner nonReentrant returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":7536:8237  function claim() external nonReentrant returns (uint256) {... */\n    tag_54:\n        /* \"SDC-Presale.sol\":7584:7591  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_139\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_139:\n        /* \"SDC-Presale.sol\":7704:7705  4 */\n      0x04\n        /* \"SDC-Presale.sol\":7690:7694  pool */\n      0x03\n        /* \"SDC-Presale.sol\":7690:7700  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":7690:7705  pool.state != 4 */\n      0xff\n      and\n      eq\n        /* \"SDC-Presale.sol\":7686:7738  if (pool.state != 4) revert InvalidState(pool.state) */\n      tag_141\n      jumpi\n        /* \"SDC-Presale.sol\":7727:7731  pool */\n      0x03\n        /* \"SDC-Presale.sol\":7727:7737  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":7714:7738  InvalidState(pool.state) */\n      mload(0x40)\n      0xd07e897600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":7686:7738  if (pool.state != 4) revert InvalidState(pool.state) */\n    tag_141:\n        /* \"SDC-Presale.sol\":7839:7840  0 */\n      0x00\n        /* \"SDC-Presale.sol\":7810:7823  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":7810:7835  contributions[msg.sender] */\n      0x00\n        /* \"SDC-Presale.sol\":7824:7834  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":7810:7835  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SDC-Presale.sol\":7810:7840  contributions[msg.sender] == 0 */\n      sub\n        /* \"SDC-Presale.sol\":7806:7863  if (contributions[msg.sender] == 0) revert NotClaimable() */\n      tag_143\n      jumpi\n        /* \"SDC-Presale.sol\":7849:7863  NotClaimable() */\n      mload(0x40)\n      0x6247a84e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":7806:7863  if (contributions[msg.sender] == 0) revert NotClaimable() */\n    tag_143:\n        /* \"SDC-Presale.sol\":7874:7888  uint256 amount */\n      0x00\n        /* \"SDC-Presale.sol\":7891:7913  userTokens(msg.sender) */\n      tag_144\n        /* \"SDC-Presale.sol\":7902:7912  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":7891:7901  userTokens */\n      tag_93\n        /* \"SDC-Presale.sol\":7891:7913  userTokens(msg.sender) */\n      jump\t// in\n    tag_144:\n        /* \"SDC-Presale.sol\":7874:7913  uint256 amount = userTokens(msg.sender) */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":7951:7952  0 */\n      0x00\n        /* \"SDC-Presale.sol\":7923:7936  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":7923:7948  contributions[msg.sender] */\n      0x00\n        /* \"SDC-Presale.sol\":7937:7947  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":7923:7948  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SDC-Presale.sol\":7923:7952  contributions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":8076:8082  amount */\n      dup1\n        /* \"SDC-Presale.sol\":8055:8059  pool */\n      0x03\n        /* \"SDC-Presale.sol\":8055:8072  pool.tokenBalance */\n      0x02\n      add\n      0x00\n        /* \"SDC-Presale.sol\":8055:8082  pool.tokenBalance -= amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":8101:8144  pool.token.safeTransfer(msg.sender, amount) */\n      tag_146\n        /* \"SDC-Presale.sol\":8125:8135  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8137:8143  amount */\n      dup3\n        /* \"SDC-Presale.sol\":8101:8105  pool */\n      0x03\n        /* \"SDC-Presale.sol\":8101:8111  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":8101:8124  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_147\n      swap1\n        /* \"SDC-Presale.sol\":8101:8144  pool.token.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"SDC-Presale.sol\":8171:8181  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8160:8207  TokenClaim(msg.sender, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x30c2341ba3f2142e78472f07dcf018a42044ae1c2c2e7ce867b327257f07ef2b\n        /* \"SDC-Presale.sol\":8183:8189  amount */\n      dup3\n        /* \"SDC-Presale.sol\":8191:8206  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":8160:8207  TokenClaim(msg.sender, amount, block.timestamp) */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SDC-Presale.sol\":8224:8230  amount */\n      dup1\n        /* \"SDC-Presale.sol\":8217:8230  return amount */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_149:\n        /* \"SDC-Presale.sol\":7536:8237  function claim() external nonReentrant returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":11928:12122  function removeFromWhitelist(address[] calldata accounts) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_151:\n        /* \"SDC-Presale.sol\":12020:12029  uint256 i */\n      0x00\n        /* \"SDC-Presale.sol\":12032:12033  0 */\n      0x00\n        /* \"SDC-Presale.sol\":12020:12033  uint256 i = 0 */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":12015:12116  for (uint256 i = 0; i < accounts.length; i++) {... */\n    tag_153:\n        /* \"SDC-Presale.sol\":12039:12047  accounts */\n      dup3\n      dup3\n        /* \"SDC-Presale.sol\":12039:12054  accounts.length */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":12035:12036  i */\n      dup2\n        /* \"SDC-Presale.sol\":12035:12054  i < accounts.length */\n      lt\n        /* \"SDC-Presale.sol\":12015:12116  for (uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_154\n      jumpi\n        /* \"SDC-Presale.sol\":12100:12105  false */\n      0x00\n        /* \"SDC-Presale.sol\":12075:12084  whitelist */\n      0x11\n        /* \"SDC-Presale.sol\":12075:12097  whitelist[accounts[i]] */\n      0x00\n        /* \"SDC-Presale.sol\":12085:12093  accounts */\n      dup6\n      dup6\n        /* \"SDC-Presale.sol\":12094:12095  i */\n      dup6\n        /* \"SDC-Presale.sol\":12085:12096  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_156\n      jumpi\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n    tag_156:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_159:\n        /* \"SDC-Presale.sol\":12075:12097  whitelist[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SDC-Presale.sol\":12075:12105  whitelist[accounts[i]] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":12056:12059  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"SDC-Presale.sol\":12015:12116  for (uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_153)\n    tag_154:\n      pop\n        /* \"SDC-Presale.sol\":11928:12122  function removeFromWhitelist(address[] calldata accounts) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SDC-Presale.sol\":8399:8805  function refund() external onlyRefundable nonReentrant returns (uint256) {... */\n    tag_63:\n        /* \"SDC-Presale.sol\":8463:8470  uint256 */\n      0x00\n        /* \"SDC-Presale.sol\":3973:3987  bool canRefund */\n      0x00\n        /* \"SDC-Presale.sol\":4018:4019  3 */\n      0x03\n        /* \"SDC-Presale.sol\":4004:4008  pool */\n      dup1\n        /* \"SDC-Presale.sol\":4004:4014  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":4004:4019  pool.state == 3 */\n      0xff\n      and\n      eq\n        /* \"SDC-Presale.sol\":4004:4112  pool.state == 3 ||... */\n      dup1\n      tag_161\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":4054:4058  pool */\n      0x03\n        /* \"SDC-Presale.sol\":4054:4066  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":4054:4070  pool.options.end */\n      0x05\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":4036:4070  block.timestamp > pool.options.end */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":4036:4051  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":4036:4070  block.timestamp > pool.options.end */\n      gt\n        /* \"SDC-Presale.sol\":4036:4111  block.timestamp > pool.options.end && pool.weiRaised < pool.options.softCap */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":4091:4095  pool */\n      0x03\n        /* \"SDC-Presale.sol\":4091:4103  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":4091:4111  pool.options.softCap */\n      0x02\n      add\n      sload\n        /* \"SDC-Presale.sol\":4074:4078  pool */\n      0x03\n        /* \"SDC-Presale.sol\":4074:4088  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":4074:4111  pool.weiRaised < pool.options.softCap */\n      lt\n        /* \"SDC-Presale.sol\":4036:4111  block.timestamp > pool.options.end && pool.weiRaised < pool.options.softCap */\n    tag_162:\n        /* \"SDC-Presale.sol\":4004:4112  pool.state == 3 ||... */\n    tag_161:\n        /* \"SDC-Presale.sol\":3973:4122  bool canRefund = (... */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":4137:4146  canRefund */\n      dup1\n        /* \"SDC-Presale.sol\":4132:4170  if (!canRefund) revert NotRefundable() */\n      tag_163\n      jumpi\n        /* \"SDC-Presale.sol\":4155:4170  NotRefundable() */\n      mload(0x40)\n      0x3742d1f600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":4132:4170  if (!canRefund) revert NotRefundable() */\n    tag_163:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_101\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"SDC-Presale.sol\":8515:8516  0 */\n      0x00\n        /* \"SDC-Presale.sol\":8486:8499  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":8486:8511  contributions[msg.sender] */\n      0x00\n        /* \"SDC-Presale.sol\":8500:8510  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8486:8511  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SDC-Presale.sol\":8486:8516  contributions[msg.sender] == 0 */\n      sub\n        /* \"SDC-Presale.sol\":8482:8540  if (contributions[msg.sender] == 0) revert NotRefundable() */\n      tag_167\n      jumpi\n        /* \"SDC-Presale.sol\":8525:8540  NotRefundable() */\n      mload(0x40)\n      0x3742d1f600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":8482:8540  if (contributions[msg.sender] == 0) revert NotRefundable() */\n    tag_167:\n        /* \"SDC-Presale.sol\":8551:8565  uint256 amount */\n      0x00\n        /* \"SDC-Presale.sol\":8568:8581  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":8568:8593  contributions[msg.sender] */\n      0x00\n        /* \"SDC-Presale.sol\":8582:8592  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8568:8593  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SDC-Presale.sol\":8551:8593  uint256 amount = contributions[msg.sender] */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":8631:8632  0 */\n      0x00\n        /* \"SDC-Presale.sol\":8603:8616  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":8603:8628  contributions[msg.sender] */\n      0x00\n        /* \"SDC-Presale.sol\":8617:8627  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8603:8628  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"SDC-Presale.sol\":8603:8632  contributions[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":8679:8716  payable(msg.sender).sendValue(amount) */\n      tag_168\n        /* \"SDC-Presale.sol\":8709:8715  amount */\n      dup2\n        /* \"SDC-Presale.sol\":8687:8697  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8679:8708  payable(msg.sender).sendValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_134\n      swap1\n        /* \"SDC-Presale.sol\":8679:8716  payable(msg.sender).sendValue(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"SDC-Presale.sol\":8739:8749  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":8732:8775  Refund(msg.sender, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6\n        /* \"SDC-Presale.sol\":8751:8757  amount */\n      dup3\n        /* \"SDC-Presale.sol\":8759:8774  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":8732:8775  Refund(msg.sender, amount, block.timestamp) */\n      mload(0x40)\n      tag_169\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SDC-Presale.sol\":8792:8798  amount */\n      dup1\n        /* \"SDC-Presale.sol\":8785:8798  return amount */\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_170\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_110\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_170:\n        /* \"SDC-Presale.sol\":3963:4188  {... */\n      pop\n        /* \"SDC-Presale.sol\":8399:8805  function refund() external onlyRefundable nonReentrant returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"SDC-Presale.sol\":11659:11847  function addToWhitelist(address[] calldata accounts) external onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_177:\n        /* \"SDC-Presale.sol\":11746:11755  uint256 i */\n      0x00\n        /* \"SDC-Presale.sol\":11758:11759  0 */\n      0x00\n        /* \"SDC-Presale.sol\":11746:11759  uint256 i = 0 */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":11741:11841  for (uint256 i = 0; i < accounts.length; i++) {... */\n    tag_179:\n        /* \"SDC-Presale.sol\":11765:11773  accounts */\n      dup3\n      dup3\n        /* \"SDC-Presale.sol\":11765:11780  accounts.length */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":11761:11762  i */\n      dup2\n        /* \"SDC-Presale.sol\":11761:11780  i < accounts.length */\n      lt\n        /* \"SDC-Presale.sol\":11741:11841  for (uint256 i = 0; i < accounts.length; i++) {... */\n      iszero\n      tag_180\n      jumpi\n        /* \"SDC-Presale.sol\":11826:11830  true */\n      0x01\n        /* \"SDC-Presale.sol\":11801:11810  whitelist */\n      0x11\n        /* \"SDC-Presale.sol\":11801:11823  whitelist[accounts[i]] */\n      0x00\n        /* \"SDC-Presale.sol\":11811:11819  accounts */\n      dup6\n      dup6\n        /* \"SDC-Presale.sol\":11820:11821  i */\n      dup6\n        /* \"SDC-Presale.sol\":11811:11822  accounts[i] */\n      dup2\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_183\n      tag_158\n      jump\t// in\n    tag_183:\n    tag_182:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_184:\n        /* \"SDC-Presale.sol\":11801:11823  whitelist[accounts[i]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SDC-Presale.sol\":11801:11830  whitelist[accounts[i]] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":11782:11785  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"SDC-Presale.sol\":11741:11841  for (uint256 i = 0; i < accounts.length; i++) {... */\n      jump(tag_179)\n    tag_180:\n      pop\n        /* \"SDC-Presale.sol\":11659:11847  function addToWhitelist(address[] calldata accounts) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":3707:3748  mapping(address => bool) public whitelist */\n    tag_80:\n      mstore(0x20, 0x11)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"SDC-Presale.sol\":5722:6668  function deposit() external onlyOwner returns (uint256) {... */\n    tag_84:\n        /* \"SDC-Presale.sol\":5769:5776  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_187:\n        /* \"SDC-Presale.sol\":5907:5908  1 */\n      0x01\n        /* \"SDC-Presale.sol\":5893:5897  pool */\n      0x03\n        /* \"SDC-Presale.sol\":5893:5903  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":5893:5908  pool.state != 1 */\n      0xff\n      and\n      eq\n        /* \"SDC-Presale.sol\":5889:5941  if (pool.state != 1) revert InvalidState(pool.state) */\n      tag_189\n      jumpi\n        /* \"SDC-Presale.sol\":5930:5934  pool */\n      0x03\n        /* \"SDC-Presale.sol\":5930:5940  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":5917:5941  InvalidState(pool.state) */\n      mload(0x40)\n      0xd07e897600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":5889:5941  if (pool.state != 1) revert InvalidState(pool.state) */\n    tag_189:\n        /* \"SDC-Presale.sol\":6026:6027  2 */\n      0x02\n        /* \"SDC-Presale.sol\":6013:6017  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6013:6023  pool.state */\n      0x06\n      add\n      0x14\n        /* \"SDC-Presale.sol\":6013:6027  pool.state = 2 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":6198:6202  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6198:6210  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":6198:6223  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":6177:6181  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6177:6194  pool.tokenBalance */\n      0x02\n      add\n      0x00\n        /* \"SDC-Presale.sol\":6177:6223  pool.tokenBalance += pool.options.tokenDeposit */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":6256:6277  _tokensForLiquidity() */\n      tag_192\n        /* \"SDC-Presale.sol\":6256:6275  _tokensForLiquidity */\n      tag_193\n        /* \"SDC-Presale.sol\":6256:6277  _tokensForLiquidity() */\n      jump\t// in\n    tag_192:\n        /* \"SDC-Presale.sol\":6233:6237  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6233:6253  pool.tokensLiquidity */\n      0x04\n      add\n        /* \"SDC-Presale.sol\":6233:6277  pool.tokensLiquidity = _tokensForLiquidity() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":6310:6329  _tokensForPresale() */\n      tag_194\n        /* \"SDC-Presale.sol\":6310:6327  _tokensForPresale */\n      tag_195\n        /* \"SDC-Presale.sol\":6310:6329  _tokensForPresale() */\n      jump\t// in\n    tag_194:\n        /* \"SDC-Presale.sol\":6287:6291  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6287:6307  pool.tokensClaimable */\n      dup1\n      add\n        /* \"SDC-Presale.sol\":6287:6329  pool.tokensClaimable = _tokensForPresale() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":6459:6540  pool.token.safeTransferFrom(msg.sender, address(this), pool.options.tokenDeposit) */\n      tag_196\n        /* \"SDC-Presale.sol\":6487:6497  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":6507:6511  this */\n      address\n        /* \"SDC-Presale.sol\":6514:6518  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6514:6526  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":6514:6539  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":6459:6463  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6459:6469  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":6459:6486  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_197\n      swap1\n        /* \"SDC-Presale.sol\":6459:6540  pool.token.safeTransferFrom(msg.sender, address(this), pool.options.tokenDeposit) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"SDC-Presale.sol\":6564:6574  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":6556:6619  Deposit(msg.sender, pool.options.tokenDeposit, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"SDC-Presale.sol\":6576:6580  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6576:6588  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":6576:6601  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":6603:6618  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":6556:6619  Deposit(msg.sender, pool.options.tokenDeposit, block.timestamp) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SDC-Presale.sol\":6636:6640  pool */\n      0x03\n        /* \"SDC-Presale.sol\":6636:6648  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":6636:6661  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":6629:6661  return pool.options.tokenDeposit */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":5722:6668  function deposit() external onlyOwner returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":10659:11172  function cancel() external onlyOwner returns(bool) {... */\n    tag_88:\n        /* \"SDC-Presale.sol\":10704:10708  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"SDC-Presale.sol\":10737:10738  3 */\n      0x03\n        /* \"SDC-Presale.sol\":10724:10728  pool */\n      dup1\n        /* \"SDC-Presale.sol\":10724:10734  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":10724:10738  pool.state > 3 */\n      0xff\n      and\n      gt\n        /* \"SDC-Presale.sol\":10720:10771  if (pool.state > 3) revert InvalidState(pool.state) */\n      iszero\n      tag_202\n      jumpi\n        /* \"SDC-Presale.sol\":10760:10764  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10760:10770  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":10747:10771  InvalidState(pool.state) */\n      mload(0x40)\n      0xd07e897600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":10720:10771  if (pool.state > 3) revert InvalidState(pool.state) */\n    tag_202:\n        /* \"SDC-Presale.sol\":10795:10796  3 */\n      0x03\n        /* \"SDC-Presale.sol\":10782:10786  pool */\n      dup1\n        /* \"SDC-Presale.sol\":10782:10792  pool.state */\n      0x06\n      add\n      0x14\n        /* \"SDC-Presale.sol\":10782:10796  pool.state = 3 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":10940:10941  0 */\n      0x00\n        /* \"SDC-Presale.sol\":10920:10924  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10920:10937  pool.tokenBalance */\n      0x02\n      add\n      sload\n        /* \"SDC-Presale.sol\":10920:10941  pool.tokenBalance > 0 */\n      gt\n        /* \"SDC-Presale.sol\":10916:11094  if (pool.tokenBalance > 0) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"SDC-Presale.sol\":10957:10971  uint256 amount */\n      0x00\n        /* \"SDC-Presale.sol\":10974:10978  pool */\n      0x03\n        /* \"SDC-Presale.sol\":10974:10991  pool.tokenBalance */\n      0x02\n      add\n      sload\n        /* \"SDC-Presale.sol\":10957:10991  uint256 amount = pool.tokenBalance */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":11025:11026  0 */\n      0x00\n        /* \"SDC-Presale.sol\":11005:11009  pool */\n      0x03\n        /* \"SDC-Presale.sol\":11005:11022  pool.tokenBalance */\n      0x02\n      add\n        /* \"SDC-Presale.sol\":11005:11026  pool.tokenBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SDC-Presale.sol\":11040:11083  pool.token.safeTransfer(msg.sender, amount) */\n      tag_205\n        /* \"SDC-Presale.sol\":11064:11074  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":11076:11082  amount */\n      dup3\n        /* \"SDC-Presale.sol\":11040:11044  pool */\n      0x03\n        /* \"SDC-Presale.sol\":11040:11050  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":11040:11063  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_147\n      swap1\n        /* \"SDC-Presale.sol\":11040:11083  pool.token.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"SDC-Presale.sol\":10943:11094  {... */\n      pop\n        /* \"SDC-Presale.sol\":10916:11094  if (pool.tokenBalance > 0) {... */\n    tag_204:\n        /* \"SDC-Presale.sol\":11116:11126  msg.sender */\n      caller\n        /* \"SDC-Presale.sol\":11109:11144  Cancel(msg.sender, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27f83af92b39768b17fe0c8d6922452702717efb8626d97e7a754e0b27d4f6d2\n        /* \"SDC-Presale.sol\":11128:11143  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":11109:11144  Cancel(msg.sender, block.timestamp) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SDC-Presale.sol\":11161:11165  true */\n      0x01\n        /* \"SDC-Presale.sol\":11154:11165  return true */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":10659:11172  function cancel() external onlyOwner returns(bool) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":14056:14393  function userTokens(address contributor) public view returns (uint256) {... */\n    tag_93:\n        /* \"SDC-Presale.sol\":14118:14125  uint256 */\n      0x00\n        /* \"SDC-Presale.sol\":14248:14249  0 */\n      0x00\n        /* \"SDC-Presale.sol\":14230:14234  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14230:14244  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":14230:14249  pool.weiRaised == 0 */\n      sub\n        /* \"SDC-Presale.sol\":14226:14259  if (pool.weiRaised == 0) return 0 */\n      tag_208\n      jumpi\n        /* \"SDC-Presale.sol\":14258:14259  0 */\n      0x00\n        /* \"SDC-Presale.sol\":14251:14259  return 0 */\n      swap1\n      pop\n      jump(tag_207)\n        /* \"SDC-Presale.sol\":14226:14259  if (pool.weiRaised == 0) return 0 */\n    tag_208:\n        /* \"SDC-Presale.sol\":947:953  10**18 */\n      0x0de0b6b3a7640000\n        /* \"SDC-Presale.sol\":14346:14350  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14346:14366  pool.tokensClaimable */\n      dup1\n      add\n      sload\n        /* \"SDC-Presale.sol\":14316:14320  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14316:14330  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":947:953  10**18 */\n      0x0de0b6b3a7640000\n        /* \"SDC-Presale.sol\":14278:14291  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":14278:14304  contributions[contributor] */\n      0x00\n        /* \"SDC-Presale.sol\":14292:14303  contributor */\n      dup8\n        /* \"SDC-Presale.sol\":14278:14304  contributions[contributor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SDC-Presale.sol\":14278:14312  contributions[contributor] * SCALE */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"SDC-Presale.sol\":14277:14330  (contributions[contributor] * SCALE) / pool.weiRaised */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"SDC-Presale.sol\":14276:14366  ((contributions[contributor] * SCALE) / pool.weiRaised)... */\n      tag_213\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_213:\n        /* \"SDC-Presale.sol\":14276:14386  ((contributions[contributor] * SCALE) / pool.weiRaised)... */\n      tag_214\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_214:\n        /* \"SDC-Presale.sol\":14269:14386  return ((contributions[contributor] * SCALE) / pool.weiRaised)... */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":14056:14393  function userTokens(address contributor) public view returns (uint256) {... */\n    tag_207:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap1\n      tag_224\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_222:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"SDC-Presale.sol\":12414:13363  function _prevalidatePurchase(address _beneficiary, uint256 _amount) internal view {... */\n    tag_104:\n        /* \"SDC-Presale.sol\":12525:12526  2 */\n      0x02\n        /* \"SDC-Presale.sol\":12511:12515  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12511:12521  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":12511:12526  pool.state != 2 */\n      0xff\n      and\n      eq\n        /* \"SDC-Presale.sol\":12507:12559  if (pool.state != 2) revert InvalidState(pool.state) */\n      tag_226\n      jumpi\n        /* \"SDC-Presale.sol\":12548:12552  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12548:12558  pool.state */\n      0x06\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":12535:12559  InvalidState(pool.state) */\n      mload(0x40)\n      0xd07e897600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":12507:12559  if (pool.state != 2) revert InvalidState(pool.state) */\n    tag_226:\n        /* \"SDC-Presale.sol\":12634:12638  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12634:12646  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":12634:12652  pool.options.start */\n      0x05\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":12616:12652  block.timestamp < pool.options.start */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":12616:12631  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":12616:12652  block.timestamp < pool.options.start */\n      lt\n        /* \"SDC-Presale.sol\":12616:12690  block.timestamp < pool.options.start || block.timestamp > pool.options.end */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":12674:12678  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12674:12686  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":12674:12690  pool.options.end */\n      0x05\n      add\n      0x0e\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":12656:12690  block.timestamp > pool.options.end */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":12656:12671  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":12656:12690  block.timestamp > pool.options.end */\n      gt\n        /* \"SDC-Presale.sol\":12616:12690  block.timestamp < pool.options.start || block.timestamp > pool.options.end */\n    tag_228:\n        /* \"SDC-Presale.sol\":12612:12745  if (block.timestamp < pool.options.start || block.timestamp > pool.options.end) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"SDC-Presale.sol\":12713:12734  NotInPurchasePeriod() */\n      mload(0x40)\n      0xe3840bc400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":12612:12745  if (block.timestamp < pool.options.start || block.timestamp > pool.options.end) {... */\n    tag_229:\n        /* \"SDC-Presale.sol\":12823:12827  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12823:12835  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":12823:12843  pool.options.hardCap */\n      0x01\n      add\n      sload\n        /* \"SDC-Presale.sol\":12813:12820  _amount */\n      dup2\n        /* \"SDC-Presale.sol\":12796:12800  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12796:12810  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":12796:12820  pool.weiRaised + _amount */\n      tag_230\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_230:\n        /* \"SDC-Presale.sol\":12796:12843  pool.weiRaised + _amount > pool.options.hardCap */\n      gt\n        /* \"SDC-Presale.sol\":12792:12892  if (pool.weiRaised + _amount > pool.options.hardCap) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"SDC-Presale.sol\":12866:12881  HardCapExceed() */\n      mload(0x40)\n      0x283452da00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":12792:12892  if (pool.weiRaised + _amount > pool.options.hardCap) {... */\n    tag_231:\n        /* \"SDC-Presale.sol\":12949:12953  pool */\n      0x03\n        /* \"SDC-Presale.sol\":12949:12961  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":12949:12965  pool.options.min */\n      0x04\n      add\n      sload\n        /* \"SDC-Presale.sol\":12939:12946  _amount */\n      dup2\n        /* \"SDC-Presale.sol\":12939:12965  _amount < pool.options.min */\n      lt\n        /* \"SDC-Presale.sol\":12935:13021  if (_amount < pool.options.min) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"SDC-Presale.sol\":12988:13010  PurchaseBelowMinimum() */\n      mload(0x40)\n      0xbd70f35d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":12935:13021  if (_amount < pool.options.min) {... */\n    tag_232:\n        /* \"SDC-Presale.sol\":13108:13112  pool */\n      0x03\n        /* \"SDC-Presale.sol\":13108:13120  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":13108:13124  pool.options.max */\n      0x03\n      add\n      sload\n        /* \"SDC-Presale.sol\":13078:13091  contributions */\n      0x02\n        /* \"SDC-Presale.sol\":13078:13105  contributions[_beneficiary] */\n      0x00\n        /* \"SDC-Presale.sol\":13092:13104  _beneficiary */\n      dup5\n        /* \"SDC-Presale.sol\":13078:13105  contributions[_beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"SDC-Presale.sol\":13068:13075  _amount */\n      dup3\n        /* \"SDC-Presale.sol\":13068:13105  _amount + contributions[_beneficiary] */\n      tag_233\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_233:\n        /* \"SDC-Presale.sol\":13068:13124  _amount + contributions[_beneficiary] > pool.options.max */\n      gt\n        /* \"SDC-Presale.sol\":13064:13179  if (_amount + contributions[_beneficiary] > pool.options.max) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"SDC-Presale.sol\":13147:13168  PurchaseLimitExceed() */\n      mload(0x40)\n      0x5a99681c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":13064:13179  if (_amount + contributions[_beneficiary] > pool.options.max) {... */\n    tag_234:\n        /* \"SDC-Presale.sol\":13260:13278  isWhitelistEnabled */\n      0x10\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":13260:13306  isWhitelistEnabled && !whitelist[_beneficiary] */\n      dup1\n      iszero\n      tag_235\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":13283:13292  whitelist */\n      0x11\n        /* \"SDC-Presale.sol\":13283:13306  whitelist[_beneficiary] */\n      0x00\n        /* \"SDC-Presale.sol\":13293:13305  _beneficiary */\n      dup4\n        /* \"SDC-Presale.sol\":13283:13306  whitelist[_beneficiary] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"SDC-Presale.sol\":13282:13306  !whitelist[_beneficiary] */\n      iszero\n        /* \"SDC-Presale.sol\":13260:13306  isWhitelistEnabled && !whitelist[_beneficiary] */\n    tag_235:\n        /* \"SDC-Presale.sol\":13256:13357  if (isWhitelistEnabled && !whitelist[_beneficiary]) {... */\n      iszero\n      tag_236\n      jumpi\n        /* \"SDC-Presale.sol\":13322:13346  revert(\"NotWhitelisted\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":13256:13357  if (isWhitelistEnabled && !whitelist[_beneficiary]) {... */\n    tag_236:\n        /* \"SDC-Presale.sol\":12414:13363  function _prevalidatePurchase(address _beneficiary, uint256 _amount) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_241\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_243\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_244\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_242\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"SDC-Presale.sol\":14998:15132  function _weiForLiquidity() internal view returns (uint256) {... */\n    tag_126:\n        /* \"SDC-Presale.sol\":15049:15056  uint256 */\n      0x00\n        /* \"SDC-Presale.sol\":15120:15125  10000 */\n      0x2710\n        /* \"SDC-Presale.sol\":15092:15096  pool */\n      0x03\n        /* \"SDC-Presale.sol\":15092:15104  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":15092:15117  pool.options.liquidityBps */\n      0x05\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"SDC-Presale.sol\":15075:15117  pool.weiRaised * pool.options.liquidityBps */\n      0xffffffff\n      and\n        /* \"SDC-Presale.sol\":15075:15079  pool */\n      0x03\n        /* \"SDC-Presale.sol\":15075:15089  pool.weiRaised */\n      0x05\n      add\n      sload\n        /* \"SDC-Presale.sol\":15075:15117  pool.weiRaised * pool.options.liquidityBps */\n      tag_248\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_248:\n        /* \"SDC-Presale.sol\":15075:15125  pool.weiRaised * pool.options.liquidityBps / 10000 */\n      tag_249\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_249:\n        /* \"SDC-Presale.sol\":15068:15125  return pool.weiRaised * pool.options.liquidityBps / 10000 */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":14998:15132  function _weiForLiquidity() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":15262:15905  function _liquify(uint256 _weiAmount, uint256 _tokenAmount) private {... */\n    tag_128:\n        /* \"SDC-Presale.sol\":15341:15357  uint amountToken */\n      0x00\n        /* \"SDC-Presale.sol\":15359:15373  uint amountETH */\n      0x00\n        /* \"SDC-Presale.sol\":15391:15395  pool */\n      0x03\n        /* \"SDC-Presale.sol\":15391:15413  pool.uniswapV2Router02 */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":15391:15429  pool.uniswapV2Router02.addLiquidityETH */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf305d719\n        /* \"SDC-Presale.sol\":15438:15448  _weiAmount */\n      dup6\n        /* \"SDC-Presale.sol\":15475:15479  pool */\n      0x03\n        /* \"SDC-Presale.sol\":15475:15485  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"SDC-Presale.sol\":15504:15516  _tokenAmount */\n      dup7\n        /* \"SDC-Presale.sol\":15534:15546  _tokenAmount */\n      dup8\n        /* \"SDC-Presale.sol\":15653:15663  _weiAmount */\n      dup10\n        /* \"SDC-Presale.sol\":15707:15714  owner() */\n      tag_251\n        /* \"SDC-Presale.sol\":15707:15712  owner */\n      tag_74\n        /* \"SDC-Presale.sol\":15707:15714  owner() */\n      jump\t// in\n    tag_251:\n        /* \"SDC-Presale.sol\":15750:15753  600 */\n      0x0258\n        /* \"SDC-Presale.sol\":15732:15747  block.timestamp */\n      timestamp\n        /* \"SDC-Presale.sol\":15732:15753  block.timestamp + 600 */\n      tag_252\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_252:\n        /* \"SDC-Presale.sol\":15391:15767  pool.uniswapV2Router02.addLiquidityETH{value : _weiAmount}(... */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_253\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_256\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_256:\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_257\n      swap2\n      swap1\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"SDC-Presale.sol\":15340:15767  (uint amountToken, uint amountETH, ) =... */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"SDC-Presale.sol\":15805:15817  _tokenAmount */\n      dup3\n        /* \"SDC-Presale.sol\":15790:15801  amountToken */\n      dup3\n        /* \"SDC-Presale.sol\":15790:15817  amountToken != _tokenAmount */\n      eq\n      iszero\n        /* \"SDC-Presale.sol\":15790:15844  amountToken != _tokenAmount && amountETH != _weiAmount */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"SDC-Presale.sol\":15834:15844  _weiAmount */\n      dup4\n        /* \"SDC-Presale.sol\":15821:15830  amountETH */\n      dup2\n        /* \"SDC-Presale.sol\":15821:15844  amountETH != _weiAmount */\n      eq\n      iszero\n        /* \"SDC-Presale.sol\":15790:15844  amountToken != _tokenAmount && amountETH != _weiAmount */\n    tag_259:\n        /* \"SDC-Presale.sol\":15786:15899  if (amountToken != _tokenAmount && amountETH != _weiAmount) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"SDC-Presale.sol\":15867:15888  LiquificationFailed() */\n      mload(0x40)\n      0xeda12fe600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"SDC-Presale.sol\":15786:15899  if (amountToken != _tokenAmount && amountETH != _weiAmount) {... */\n    tag_260:\n        /* \"SDC-Presale.sol\":15330:15905  {... */\n      pop\n      pop\n        /* \"SDC-Presale.sol\":15262:15905  function _liquify(uint256 _weiAmount, uint256 _tokenAmount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1399:1405  amount */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1396  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1375:1405  address(this).balance < amount */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1455:1476  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1478:1484  amount */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1428:1485  Errors.InsufficientBalance(address(this).balance, amount) */\n      mload(0x40)\n      0xcf47918100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap3\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1371:1496  if (address(this).balance < amount) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1507:1519  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1521:1544  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1557  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1562  recipient.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1570:1576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1548:1581  recipient.call{value: amount}(\"\") */\n      mload(0x40)\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_268\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_267)\n    tag_268:\n      0x60\n      swap2\n      pop\n    tag_267:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1506:1581  (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\") */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1596:1603  success */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      tag_270\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1627:1637  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1626  _revert */\n      tag_271\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1619:1638  _revert(returndata) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1591:1649  if (!success) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1361:1655  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1290:1655  function sendValue(address payable recipient, uint256 amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_274\n      swap3\n      swap2\n      swap1\n      tag_275\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"SDC-Presale.sol\":14494:14642  function _tokensForLiquidity() internal view returns (uint256) {... */\n    tag_193:\n        /* \"SDC-Presale.sol\":14548:14555  uint256 */\n      0x00\n        /* \"SDC-Presale.sol\":14630:14635  10000 */\n      0x2710\n        /* \"SDC-Presale.sol\":14602:14606  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14602:14614  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":14602:14627  pool.options.liquidityBps */\n      0x05\n      add\n      0x1c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffff\n      and\n        /* \"SDC-Presale.sol\":14574:14627  pool.options.tokenDeposit * pool.options.liquidityBps */\n      0xffffffff\n      and\n        /* \"SDC-Presale.sol\":14574:14578  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14574:14586  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":14574:14599  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":14574:14627  pool.options.tokenDeposit * pool.options.liquidityBps */\n      tag_279\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_279:\n        /* \"SDC-Presale.sol\":14574:14635  pool.options.tokenDeposit * pool.options.liquidityBps / 10000 */\n      tag_280\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_280:\n        /* \"SDC-Presale.sol\":14567:14635  return pool.options.tokenDeposit * pool.options.liquidityBps / 10000 */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":14494:14642  function _tokensForLiquidity() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SDC-Presale.sol\":14765:14899  function _tokensForPresale() internal view returns (uint256) {... */\n    tag_195:\n        /* \"SDC-Presale.sol\":14817:14824  uint256 */\n      0x00\n        /* \"SDC-Presale.sol\":14871:14892  _tokensForLiquidity() */\n      tag_282\n        /* \"SDC-Presale.sol\":14871:14890  _tokensForLiquidity */\n      tag_193\n        /* \"SDC-Presale.sol\":14871:14892  _tokensForLiquidity() */\n      jump\t// in\n    tag_282:\n        /* \"SDC-Presale.sol\":14843:14847  pool */\n      0x03\n        /* \"SDC-Presale.sol\":14843:14855  pool.options */\n      0x07\n      add\n        /* \"SDC-Presale.sol\":14843:14868  pool.options.tokenDeposit */\n      0x00\n      add\n      sload\n        /* \"SDC-Presale.sol\":14843:14892  pool.options.tokenDeposit - _tokensForLiquidity() */\n      tag_283\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_283:\n        /* \"SDC-Presale.sol\":14836:14892  return pool.options.tokenDeposit - _tokensForLiquidity() */\n      swap1\n      pop\n        /* \"SDC-Presale.sol\":14765:14899  function _tokensForPresale() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_285\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_286\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_287\n      jump\t// in\n    tag_286:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_276\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_295)\n    tag_294:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_299:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_300:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:424   */\n    tag_301:\n        /* \"#utility.yul\":368:375   */\n      0x00\n        /* \"#utility.yul\":411:416   */\n      dup2\n        /* \"#utility.yul\":404:417   */\n      iszero\n        /* \"#utility.yul\":397:418   */\n      iszero\n        /* \"#utility.yul\":386:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":430:546   */\n    tag_302:\n        /* \"#utility.yul\":500:521   */\n      tag_349\n        /* \"#utility.yul\":515:520   */\n      dup2\n        /* \"#utility.yul\":500:521   */\n      tag_301\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":493:498   */\n      dup2\n        /* \"#utility.yul\":490:522   */\n      eq\n        /* \"#utility.yul\":480:540   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":536:537   */\n      0x00\n        /* \"#utility.yul\":533:534   */\n      0x00\n        /* \"#utility.yul\":526:538   */\n      revert\n        /* \"#utility.yul\":480:540   */\n    tag_350:\n        /* \"#utility.yul\":430:546   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":552:685   */\n    tag_303:\n        /* \"#utility.yul\":595:600   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":620:640   */\n      calldataload\n        /* \"#utility.yul\":611:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:679   */\n      tag_352\n        /* \"#utility.yul\":673:678   */\n      dup2\n        /* \"#utility.yul\":649:679   */\n      tag_302\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":552:685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:1014   */\n    tag_29:\n        /* \"#utility.yul\":747:753   */\n      0x00\n        /* \"#utility.yul\":796:798   */\n      0x20\n        /* \"#utility.yul\":784:793   */\n      dup3\n        /* \"#utility.yul\":775:782   */\n      dup5\n        /* \"#utility.yul\":771:794   */\n      sub\n        /* \"#utility.yul\":767:799   */\n      slt\n        /* \"#utility.yul\":764:883   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":802:881   */\n      tag_355\n      tag_299\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":764:883   */\n    tag_354:\n        /* \"#utility.yul\":922:923   */\n      0x00\n        /* \"#utility.yul\":947:997   */\n      tag_356\n        /* \"#utility.yul\":989:996   */\n      dup5\n        /* \"#utility.yul\":980:986   */\n      dup3\n        /* \"#utility.yul\":969:978   */\n      dup6\n        /* \"#utility.yul\":965:987   */\n      add\n        /* \"#utility.yul\":947:997   */\n      tag_303\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":937:997   */\n      swap2\n      pop\n        /* \"#utility.yul\":893:1007   */\n      pop\n        /* \"#utility.yul\":691:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1020:1146   */\n    tag_304:\n        /* \"#utility.yul\":1057:1064   */\n      0x00\n        /* \"#utility.yul\":1097:1139   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1090:1095   */\n      dup3\n        /* \"#utility.yul\":1086:1140   */\n      and\n        /* \"#utility.yul\":1075:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":1020:1146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1212   */\n    tag_305:\n        /* \"#utility.yul\":1180:1183   */\n      0x00\n        /* \"#utility.yul\":1201:1206   */\n      dup2\n        /* \"#utility.yul\":1194:1206   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1218:1360   */\n    tag_306:\n        /* \"#utility.yul\":1268:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1354   */\n      tag_360\n        /* \"#utility.yul\":1319:1353   */\n      tag_361\n        /* \"#utility.yul\":1328:1352   */\n      tag_362\n        /* \"#utility.yul\":1346:1351   */\n      dup5\n        /* \"#utility.yul\":1328:1352   */\n      tag_304\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1319:1353   */\n      tag_305\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1301:1354   */\n      tag_304\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":1288:1354   */\n      swap1\n      pop\n        /* \"#utility.yul\":1218:1360   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1366:1492   */\n    tag_307:\n        /* \"#utility.yul\":1416:1425   */\n      0x00\n        /* \"#utility.yul\":1449:1486   */\n      tag_364\n        /* \"#utility.yul\":1480:1485   */\n      dup3\n        /* \"#utility.yul\":1449:1486   */\n      tag_306\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1436:1486   */\n      swap1\n      pop\n        /* \"#utility.yul\":1366:1492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1498:1638   */\n    tag_308:\n        /* \"#utility.yul\":1562:1571   */\n      0x00\n        /* \"#utility.yul\":1595:1632   */\n      tag_366\n        /* \"#utility.yul\":1626:1631   */\n      dup3\n        /* \"#utility.yul\":1595:1632   */\n      tag_307\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1582:1632   */\n      swap1\n      pop\n        /* \"#utility.yul\":1498:1638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1644:1803   */\n    tag_309:\n        /* \"#utility.yul\":1745:1796   */\n      tag_368\n        /* \"#utility.yul\":1790:1795   */\n      dup2\n        /* \"#utility.yul\":1745:1796   */\n      tag_308\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":1740:1743   */\n      dup3\n        /* \"#utility.yul\":1733:1797   */\n      mstore\n        /* \"#utility.yul\":1644:1803   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1809:1962   */\n    tag_310:\n        /* \"#utility.yul\":1886:1895   */\n      0x00\n        /* \"#utility.yul\":1919:1956   */\n      tag_370\n        /* \"#utility.yul\":1950:1955   */\n      dup3\n        /* \"#utility.yul\":1919:1956   */\n      tag_307\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1906:1956   */\n      swap1\n      pop\n        /* \"#utility.yul\":1809:1962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2153   */\n    tag_311:\n        /* \"#utility.yul\":2082:2146   */\n      tag_372\n        /* \"#utility.yul\":2140:2145   */\n      dup2\n        /* \"#utility.yul\":2082:2146   */\n      tag_310\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2077:2080   */\n      dup3\n        /* \"#utility.yul\":2070:2147   */\n      mstore\n        /* \"#utility.yul\":1968:2153   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2236   */\n    tag_312:\n        /* \"#utility.yul\":2196:2203   */\n      0x00\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2214:2230   */\n      swap1\n      pop\n        /* \"#utility.yul\":2159:2236   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2242:2360   */\n    tag_313:\n        /* \"#utility.yul\":2329:2353   */\n      tag_375\n        /* \"#utility.yul\":2347:2352   */\n      dup2\n        /* \"#utility.yul\":2329:2353   */\n      tag_312\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2324:2327   */\n      dup3\n        /* \"#utility.yul\":2317:2354   */\n      mstore\n        /* \"#utility.yul\":2242:2360   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2366:2462   */\n    tag_314:\n        /* \"#utility.yul\":2403:2410   */\n      0x00\n        /* \"#utility.yul\":2432:2456   */\n      tag_377\n        /* \"#utility.yul\":2450:2455   */\n      dup3\n        /* \"#utility.yul\":2432:2456   */\n      tag_304\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2421:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2366:2462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2468:2586   */\n    tag_315:\n        /* \"#utility.yul\":2555:2579   */\n      tag_379\n        /* \"#utility.yul\":2573:2578   */\n      dup2\n        /* \"#utility.yul\":2555:2579   */\n      tag_314\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":2550:2553   */\n      dup3\n        /* \"#utility.yul\":2543:2580   */\n      mstore\n        /* \"#utility.yul\":2468:2586   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:2678   */\n    tag_316:\n        /* \"#utility.yul\":2627:2634   */\n      0x00\n        /* \"#utility.yul\":2667:2671   */\n      0xff\n        /* \"#utility.yul\":2660:2665   */\n      dup3\n        /* \"#utility.yul\":2656:2672   */\n      and\n        /* \"#utility.yul\":2645:2672   */\n      swap1\n      pop\n        /* \"#utility.yul\":2592:2678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2684:2796   */\n    tag_317:\n        /* \"#utility.yul\":2767:2789   */\n      tag_382\n        /* \"#utility.yul\":2783:2788   */\n      dup2\n        /* \"#utility.yul\":2767:2789   */\n      tag_316\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2762:2765   */\n      dup3\n        /* \"#utility.yul\":2755:2790   */\n      mstore\n        /* \"#utility.yul\":2684:2796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2802:2910   */\n    tag_318:\n        /* \"#utility.yul\":2879:2903   */\n      tag_384\n        /* \"#utility.yul\":2897:2902   */\n      dup2\n        /* \"#utility.yul\":2879:2903   */\n      tag_312\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2874:2877   */\n      dup3\n        /* \"#utility.yul\":2867:2904   */\n      mstore\n        /* \"#utility.yul\":2802:2910   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2916:3030   */\n    tag_319:\n        /* \"#utility.yul\":2953:2960   */\n      0x00\n        /* \"#utility.yul\":2993:3023   */\n      0xffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2986:2991   */\n      dup3\n        /* \"#utility.yul\":2982:3024   */\n      and\n        /* \"#utility.yul\":2971:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":2916:3030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3036:3144   */\n    tag_320:\n        /* \"#utility.yul\":3113:3137   */\n      tag_387\n        /* \"#utility.yul\":3131:3136   */\n      dup2\n        /* \"#utility.yul\":3113:3137   */\n      tag_319\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3108:3111   */\n      dup3\n        /* \"#utility.yul\":3101:3138   */\n      mstore\n        /* \"#utility.yul\":3036:3144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3243   */\n    tag_321:\n        /* \"#utility.yul\":3186:3193   */\n      0x00\n        /* \"#utility.yul\":3226:3236   */\n      0xffffffff\n        /* \"#utility.yul\":3219:3224   */\n      dup3\n        /* \"#utility.yul\":3215:3237   */\n      and\n        /* \"#utility.yul\":3204:3237   */\n      swap1\n      pop\n        /* \"#utility.yul\":3150:3243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3249:3354   */\n    tag_322:\n        /* \"#utility.yul\":3324:3347   */\n      tag_390\n        /* \"#utility.yul\":3341:3346   */\n      dup2\n        /* \"#utility.yul\":3324:3347   */\n      tag_321\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3319:3322   */\n      dup3\n        /* \"#utility.yul\":3312:3348   */\n      mstore\n        /* \"#utility.yul\":3249:3354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3430:5015   */\n    tag_323:\n        /* \"#utility.yul\":3591:3597   */\n      0x0100\n        /* \"#utility.yul\":3586:3589   */\n      dup3\n        /* \"#utility.yul\":3582:3598   */\n      add\n        /* \"#utility.yul\":3688:3692   */\n      0x00\n        /* \"#utility.yul\":3681:3686   */\n      dup3\n        /* \"#utility.yul\":3677:3693   */\n      add\n        /* \"#utility.yul\":3671:3694   */\n      mload\n        /* \"#utility.yul\":3707:3770   */\n      tag_392\n        /* \"#utility.yul\":3764:3768   */\n      0x00\n        /* \"#utility.yul\":3759:3762   */\n      dup6\n        /* \"#utility.yul\":3755:3769   */\n      add\n        /* \"#utility.yul\":3741:3753   */\n      dup3\n        /* \"#utility.yul\":3707:3770   */\n      tag_318\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3608:3780   */\n      pop\n        /* \"#utility.yul\":3865:3869   */\n      0x20\n        /* \"#utility.yul\":3858:3863   */\n      dup3\n        /* \"#utility.yul\":3854:3870   */\n      add\n        /* \"#utility.yul\":3848:3871   */\n      mload\n        /* \"#utility.yul\":3884:3947   */\n      tag_393\n        /* \"#utility.yul\":3941:3945   */\n      0x20\n        /* \"#utility.yul\":3936:3939   */\n      dup6\n        /* \"#utility.yul\":3932:3946   */\n      add\n        /* \"#utility.yul\":3918:3930   */\n      dup3\n        /* \"#utility.yul\":3884:3947   */\n      tag_318\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":3790:3957   */\n      pop\n        /* \"#utility.yul\":4042:4046   */\n      0x40\n        /* \"#utility.yul\":4035:4040   */\n      dup3\n        /* \"#utility.yul\":4031:4047   */\n      add\n        /* \"#utility.yul\":4025:4048   */\n      mload\n        /* \"#utility.yul\":4061:4124   */\n      tag_394\n        /* \"#utility.yul\":4118:4122   */\n      0x40\n        /* \"#utility.yul\":4113:4116   */\n      dup6\n        /* \"#utility.yul\":4109:4123   */\n      add\n        /* \"#utility.yul\":4095:4107   */\n      dup3\n        /* \"#utility.yul\":4061:4124   */\n      tag_318\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3967:4134   */\n      pop\n        /* \"#utility.yul\":4215:4219   */\n      0x60\n        /* \"#utility.yul\":4208:4213   */\n      dup3\n        /* \"#utility.yul\":4204:4220   */\n      add\n        /* \"#utility.yul\":4198:4221   */\n      mload\n        /* \"#utility.yul\":4234:4297   */\n      tag_395\n        /* \"#utility.yul\":4291:4295   */\n      0x60\n        /* \"#utility.yul\":4286:4289   */\n      dup6\n        /* \"#utility.yul\":4282:4296   */\n      add\n        /* \"#utility.yul\":4268:4280   */\n      dup3\n        /* \"#utility.yul\":4234:4297   */\n      tag_318\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4144:4307   */\n      pop\n        /* \"#utility.yul\":4388:4392   */\n      0x80\n        /* \"#utility.yul\":4381:4386   */\n      dup3\n        /* \"#utility.yul\":4377:4393   */\n      add\n        /* \"#utility.yul\":4371:4394   */\n      mload\n        /* \"#utility.yul\":4407:4470   */\n      tag_396\n        /* \"#utility.yul\":4464:4468   */\n      0x80\n        /* \"#utility.yul\":4459:4462   */\n      dup6\n        /* \"#utility.yul\":4455:4469   */\n      add\n        /* \"#utility.yul\":4441:4453   */\n      dup3\n        /* \"#utility.yul\":4407:4470   */\n      tag_318\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4317:4480   */\n      pop\n        /* \"#utility.yul\":4563:4567   */\n      0xa0\n        /* \"#utility.yul\":4556:4561   */\n      dup3\n        /* \"#utility.yul\":4552:4568   */\n      add\n        /* \"#utility.yul\":4546:4569   */\n      mload\n        /* \"#utility.yul\":4582:4645   */\n      tag_397\n        /* \"#utility.yul\":4639:4643   */\n      0xa0\n        /* \"#utility.yul\":4634:4637   */\n      dup6\n        /* \"#utility.yul\":4630:4644   */\n      add\n        /* \"#utility.yul\":4616:4628   */\n      dup3\n        /* \"#utility.yul\":4582:4645   */\n      tag_320\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4490:4655   */\n      pop\n        /* \"#utility.yul\":4736:4740   */\n      0xc0\n        /* \"#utility.yul\":4729:4734   */\n      dup3\n        /* \"#utility.yul\":4725:4741   */\n      add\n        /* \"#utility.yul\":4719:4742   */\n      mload\n        /* \"#utility.yul\":4755:4818   */\n      tag_398\n        /* \"#utility.yul\":4812:4816   */\n      0xc0\n        /* \"#utility.yul\":4807:4810   */\n      dup6\n        /* \"#utility.yul\":4803:4817   */\n      add\n        /* \"#utility.yul\":4789:4801   */\n      dup3\n        /* \"#utility.yul\":4755:4818   */\n      tag_320\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4665:4828   */\n      pop\n        /* \"#utility.yul\":4918:4922   */\n      0xe0\n        /* \"#utility.yul\":4911:4916   */\n      dup3\n        /* \"#utility.yul\":4907:4923   */\n      add\n        /* \"#utility.yul\":4901:4924   */\n      mload\n        /* \"#utility.yul\":4937:4998   */\n      tag_399\n        /* \"#utility.yul\":4992:4996   */\n      0xe0\n        /* \"#utility.yul\":4987:4990   */\n      dup6\n        /* \"#utility.yul\":4983:4997   */\n      add\n        /* \"#utility.yul\":4969:4981   */\n      dup3\n        /* \"#utility.yul\":4937:4998   */\n      tag_322\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4838:5008   */\n      pop\n        /* \"#utility.yul\":3560:5015   */\n      pop\n        /* \"#utility.yul\":3430:5015   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5021:6331   */\n    tag_35:\n        /* \"#utility.yul\":5439:5443   */\n      0x00\n        /* \"#utility.yul\":5477:5480   */\n      0x0200\n        /* \"#utility.yul\":5466:5475   */\n      dup3\n        /* \"#utility.yul\":5462:5481   */\n      add\n        /* \"#utility.yul\":5454:5481   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5576   */\n      tag_401\n        /* \"#utility.yul\":5573:5574   */\n      0x00\n        /* \"#utility.yul\":5562:5571   */\n      dup4\n        /* \"#utility.yul\":5558:5575   */\n      add\n        /* \"#utility.yul\":5549:5555   */\n      dup13\n        /* \"#utility.yul\":5491:5576   */\n      tag_309\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":5586:5685   */\n      tag_402\n        /* \"#utility.yul\":5681:5683   */\n      0x20\n        /* \"#utility.yul\":5670:5679   */\n      dup4\n        /* \"#utility.yul\":5666:5684   */\n      add\n        /* \"#utility.yul\":5657:5663   */\n      dup12\n        /* \"#utility.yul\":5586:5685   */\n      tag_311\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":5695:5767   */\n      tag_403\n        /* \"#utility.yul\":5763:5765   */\n      0x40\n        /* \"#utility.yul\":5752:5761   */\n      dup4\n        /* \"#utility.yul\":5748:5766   */\n      add\n        /* \"#utility.yul\":5739:5745   */\n      dup11\n        /* \"#utility.yul\":5695:5767   */\n      tag_313\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5777:5849   */\n      tag_404\n        /* \"#utility.yul\":5845:5847   */\n      0x60\n        /* \"#utility.yul\":5834:5843   */\n      dup4\n        /* \"#utility.yul\":5830:5848   */\n      add\n        /* \"#utility.yul\":5821:5827   */\n      dup10\n        /* \"#utility.yul\":5777:5849   */\n      tag_313\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5859:5932   */\n      tag_405\n        /* \"#utility.yul\":5927:5930   */\n      0x80\n        /* \"#utility.yul\":5916:5925   */\n      dup4\n        /* \"#utility.yul\":5912:5931   */\n      add\n        /* \"#utility.yul\":5903:5909   */\n      dup9\n        /* \"#utility.yul\":5859:5932   */\n      tag_313\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5942:6015   */\n      tag_406\n        /* \"#utility.yul\":6010:6013   */\n      0xa0\n        /* \"#utility.yul\":5999:6008   */\n      dup4\n        /* \"#utility.yul\":5995:6014   */\n      add\n        /* \"#utility.yul\":5986:5992   */\n      dup8\n        /* \"#utility.yul\":5942:6015   */\n      tag_313\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":6025:6098   */\n      tag_407\n        /* \"#utility.yul\":6093:6096   */\n      0xc0\n        /* \"#utility.yul\":6082:6091   */\n      dup4\n        /* \"#utility.yul\":6078:6097   */\n      add\n        /* \"#utility.yul\":6069:6075   */\n      dup7\n        /* \"#utility.yul\":6025:6098   */\n      tag_315\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":6108:6177   */\n      tag_408\n        /* \"#utility.yul\":6172:6175   */\n      0xe0\n        /* \"#utility.yul\":6161:6170   */\n      dup4\n        /* \"#utility.yul\":6157:6176   */\n      add\n        /* \"#utility.yul\":6148:6154   */\n      dup6\n        /* \"#utility.yul\":6108:6177   */\n      tag_317\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":6187:6324   */\n      tag_409\n        /* \"#utility.yul\":6319:6322   */\n      0x0100\n        /* \"#utility.yul\":6308:6317   */\n      dup4\n        /* \"#utility.yul\":6304:6323   */\n      add\n        /* \"#utility.yul\":6295:6301   */\n      dup5\n        /* \"#utility.yul\":6187:6324   */\n      tag_323\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5021:6331   */\n      swap11\n      swap10\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6337:6446   */\n    tag_324:\n        /* \"#utility.yul\":6418:6439   */\n      tag_411\n        /* \"#utility.yul\":6433:6438   */\n      dup2\n        /* \"#utility.yul\":6418:6439   */\n      tag_301\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":6413:6416   */\n      dup3\n        /* \"#utility.yul\":6406:6440   */\n      mstore\n        /* \"#utility.yul\":6337:6446   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6452:6662   */\n    tag_40:\n        /* \"#utility.yul\":6539:6543   */\n      0x00\n        /* \"#utility.yul\":6577:6579   */\n      0x20\n        /* \"#utility.yul\":6566:6575   */\n      dup3\n        /* \"#utility.yul\":6562:6580   */\n      add\n        /* \"#utility.yul\":6554:6580   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6655   */\n      tag_413\n        /* \"#utility.yul\":6652:6653   */\n      0x00\n        /* \"#utility.yul\":6641:6650   */\n      dup4\n        /* \"#utility.yul\":6637:6654   */\n      add\n        /* \"#utility.yul\":6628:6634   */\n      dup5\n        /* \"#utility.yul\":6590:6655   */\n      tag_324\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":6452:6662   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6668:6790   */\n    tag_325:\n        /* \"#utility.yul\":6741:6765   */\n      tag_415\n        /* \"#utility.yul\":6759:6764   */\n      dup2\n        /* \"#utility.yul\":6741:6765   */\n      tag_314\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":6734:6739   */\n      dup2\n        /* \"#utility.yul\":6731:6766   */\n      eq\n        /* \"#utility.yul\":6721:6784   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":6780:6781   */\n      0x00\n        /* \"#utility.yul\":6777:6778   */\n      0x00\n        /* \"#utility.yul\":6770:6782   */\n      revert\n        /* \"#utility.yul\":6721:6784   */\n    tag_416:\n        /* \"#utility.yul\":6668:6790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6796:6935   */\n    tag_326:\n        /* \"#utility.yul\":6842:6847   */\n      0x00\n        /* \"#utility.yul\":6880:6886   */\n      dup2\n        /* \"#utility.yul\":6867:6887   */\n      calldataload\n        /* \"#utility.yul\":6858:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6896:6929   */\n      tag_418\n        /* \"#utility.yul\":6923:6928   */\n      dup2\n        /* \"#utility.yul\":6896:6929   */\n      tag_325\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6796:6935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7270   */\n    tag_44:\n        /* \"#utility.yul\":7000:7006   */\n      0x00\n        /* \"#utility.yul\":7049:7051   */\n      0x20\n        /* \"#utility.yul\":7037:7046   */\n      dup3\n        /* \"#utility.yul\":7028:7035   */\n      dup5\n        /* \"#utility.yul\":7024:7047   */\n      sub\n        /* \"#utility.yul\":7020:7052   */\n      slt\n        /* \"#utility.yul\":7017:7136   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":7055:7134   */\n      tag_421\n      tag_299\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":7017:7136   */\n    tag_420:\n        /* \"#utility.yul\":7175:7176   */\n      0x00\n        /* \"#utility.yul\":7200:7253   */\n      tag_422\n        /* \"#utility.yul\":7245:7252   */\n      dup5\n        /* \"#utility.yul\":7236:7242   */\n      dup3\n        /* \"#utility.yul\":7225:7234   */\n      dup6\n        /* \"#utility.yul\":7221:7243   */\n      add\n        /* \"#utility.yul\":7200:7253   */\n      tag_326\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":7190:7253   */\n      swap2\n      pop\n        /* \"#utility.yul\":7146:7263   */\n      pop\n        /* \"#utility.yul\":6941:7270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7276:7498   */\n    tag_47:\n        /* \"#utility.yul\":7369:7373   */\n      0x00\n        /* \"#utility.yul\":7407:7409   */\n      0x20\n        /* \"#utility.yul\":7396:7405   */\n      dup3\n        /* \"#utility.yul\":7392:7410   */\n      add\n        /* \"#utility.yul\":7384:7410   */\n      swap1\n      pop\n        /* \"#utility.yul\":7420:7491   */\n      tag_424\n        /* \"#utility.yul\":7488:7489   */\n      0x00\n        /* \"#utility.yul\":7477:7486   */\n      dup4\n        /* \"#utility.yul\":7473:7490   */\n      add\n        /* \"#utility.yul\":7464:7470   */\n      dup5\n        /* \"#utility.yul\":7420:7491   */\n      tag_313\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":7276:7498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7504:7621   */\n    tag_327:\n        /* \"#utility.yul\":7613:7614   */\n      0x00\n        /* \"#utility.yul\":7610:7611   */\n      0x00\n        /* \"#utility.yul\":7603:7615   */\n      revert\n        /* \"#utility.yul\":7627:7744   */\n    tag_328:\n        /* \"#utility.yul\":7736:7737   */\n      0x00\n        /* \"#utility.yul\":7733:7734   */\n      0x00\n        /* \"#utility.yul\":7726:7738   */\n      revert\n        /* \"#utility.yul\":7750:7867   */\n    tag_329:\n        /* \"#utility.yul\":7859:7860   */\n      0x00\n        /* \"#utility.yul\":7856:7857   */\n      0x00\n        /* \"#utility.yul\":7849:7861   */\n      revert\n        /* \"#utility.yul\":7890:8458   */\n    tag_330:\n        /* \"#utility.yul\":7963:7971   */\n      0x00\n        /* \"#utility.yul\":7973:7979   */\n      0x00\n        /* \"#utility.yul\":8023:8026   */\n      dup4\n        /* \"#utility.yul\":8016:8020   */\n      0x1f\n        /* \"#utility.yul\":8008:8014   */\n      dup5\n        /* \"#utility.yul\":8004:8021   */\n      add\n        /* \"#utility.yul\":8000:8027   */\n      slt\n        /* \"#utility.yul\":7990:8112   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":8031:8110   */\n      tag_430\n      tag_327\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7990:8112   */\n    tag_429:\n        /* \"#utility.yul\":8144:8150   */\n      dup3\n        /* \"#utility.yul\":8131:8151   */\n      calldataload\n        /* \"#utility.yul\":8121:8151   */\n      swap1\n      pop\n        /* \"#utility.yul\":8174:8192   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8166:8172   */\n      dup2\n        /* \"#utility.yul\":8163:8193   */\n      gt\n        /* \"#utility.yul\":8160:8277   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":8196:8275   */\n      tag_432\n      tag_328\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8160:8277   */\n    tag_431:\n        /* \"#utility.yul\":8310:8314   */\n      0x20\n        /* \"#utility.yul\":8302:8308   */\n      dup4\n        /* \"#utility.yul\":8298:8315   */\n      add\n        /* \"#utility.yul\":8286:8315   */\n      swap2\n      pop\n        /* \"#utility.yul\":8364:8367   */\n      dup4\n        /* \"#utility.yul\":8356:8360   */\n      0x20\n        /* \"#utility.yul\":8348:8354   */\n      dup3\n        /* \"#utility.yul\":8344:8361   */\n      mul\n        /* \"#utility.yul\":8334:8342   */\n      dup4\n        /* \"#utility.yul\":8330:8362   */\n      add\n        /* \"#utility.yul\":8327:8368   */\n      gt\n        /* \"#utility.yul\":8324:8452   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":8371:8450   */\n      tag_434\n      tag_329\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":8324:8452   */\n    tag_433:\n        /* \"#utility.yul\":7890:8458   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8464:9023   */\n    tag_59:\n        /* \"#utility.yul\":8550:8556   */\n      0x00\n        /* \"#utility.yul\":8558:8564   */\n      0x00\n        /* \"#utility.yul\":8607:8609   */\n      0x20\n        /* \"#utility.yul\":8595:8604   */\n      dup4\n        /* \"#utility.yul\":8586:8593   */\n      dup6\n        /* \"#utility.yul\":8582:8605   */\n      sub\n        /* \"#utility.yul\":8578:8610   */\n      slt\n        /* \"#utility.yul\":8575:8694   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":8613:8692   */\n      tag_437\n      tag_299\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":8575:8694   */\n    tag_436:\n        /* \"#utility.yul\":8761:8762   */\n      0x00\n        /* \"#utility.yul\":8750:8759   */\n      dup4\n        /* \"#utility.yul\":8746:8763   */\n      add\n        /* \"#utility.yul\":8733:8764   */\n      calldataload\n        /* \"#utility.yul\":8791:8809   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8783:8789   */\n      dup2\n        /* \"#utility.yul\":8780:8810   */\n      gt\n        /* \"#utility.yul\":8777:8894   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":8813:8892   */\n      tag_439\n      tag_300\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8777:8894   */\n    tag_438:\n        /* \"#utility.yul\":8926:9006   */\n      tag_440\n        /* \"#utility.yul\":8998:9005   */\n      dup6\n        /* \"#utility.yul\":8989:8995   */\n      dup3\n        /* \"#utility.yul\":8978:8987   */\n      dup7\n        /* \"#utility.yul\":8974:8996   */\n      add\n        /* \"#utility.yul\":8926:9006   */\n      tag_330\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":8908:9006   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":8704:9016   */\n      pop\n        /* \"#utility.yul\":8464:9023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9029:9251   */\n    tag_76:\n        /* \"#utility.yul\":9122:9126   */\n      0x00\n        /* \"#utility.yul\":9160:9162   */\n      0x20\n        /* \"#utility.yul\":9149:9158   */\n      dup3\n        /* \"#utility.yul\":9145:9163   */\n      add\n        /* \"#utility.yul\":9137:9163   */\n      swap1\n      pop\n        /* \"#utility.yul\":9173:9244   */\n      tag_442\n        /* \"#utility.yul\":9241:9242   */\n      0x00\n        /* \"#utility.yul\":9230:9239   */\n      dup4\n        /* \"#utility.yul\":9226:9243   */\n      add\n        /* \"#utility.yul\":9217:9223   */\n      dup5\n        /* \"#utility.yul\":9173:9244   */\n      tag_315\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9029:9251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9257:9437   */\n    tag_331:\n        /* \"#utility.yul\":9305:9382   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9302:9303   */\n      0x00\n        /* \"#utility.yul\":9295:9383   */\n      mstore\n        /* \"#utility.yul\":9402:9406   */\n      0x11\n        /* \"#utility.yul\":9399:9400   */\n      0x04\n        /* \"#utility.yul\":9392:9407   */\n      mstore\n        /* \"#utility.yul\":9426:9430   */\n      0x24\n        /* \"#utility.yul\":9423:9424   */\n      0x00\n        /* \"#utility.yul\":9416:9431   */\n      revert\n        /* \"#utility.yul\":9443:9634   */\n    tag_106:\n        /* \"#utility.yul\":9483:9486   */\n      0x00\n        /* \"#utility.yul\":9502:9522   */\n      tag_445\n        /* \"#utility.yul\":9520:9521   */\n      dup3\n        /* \"#utility.yul\":9502:9522   */\n      tag_312\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9497:9522   */\n      swap2\n      pop\n        /* \"#utility.yul\":9536:9556   */\n      tag_446\n        /* \"#utility.yul\":9554:9555   */\n      dup4\n        /* \"#utility.yul\":9536:9556   */\n      tag_312\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":9531:9556   */\n      swap3\n      pop\n        /* \"#utility.yul\":9579:9580   */\n      dup3\n        /* \"#utility.yul\":9576:9577   */\n      dup3\n        /* \"#utility.yul\":9572:9581   */\n      add\n        /* \"#utility.yul\":9565:9581   */\n      swap1\n      pop\n        /* \"#utility.yul\":9600:9603   */\n      dup1\n        /* \"#utility.yul\":9597:9598   */\n      dup3\n        /* \"#utility.yul\":9594:9604   */\n      gt\n        /* \"#utility.yul\":9591:9627   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":9607:9625   */\n      tag_448\n      tag_331\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":9591:9627   */\n    tag_447:\n        /* \"#utility.yul\":9443:9634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9854   */\n    tag_122:\n        /* \"#utility.yul\":9729:9733   */\n      0x00\n        /* \"#utility.yul\":9767:9769   */\n      0x20\n        /* \"#utility.yul\":9756:9765   */\n      dup3\n        /* \"#utility.yul\":9752:9770   */\n      add\n        /* \"#utility.yul\":9744:9770   */\n      swap1\n      pop\n        /* \"#utility.yul\":9780:9847   */\n      tag_450\n        /* \"#utility.yul\":9844:9845   */\n      0x00\n        /* \"#utility.yul\":9833:9842   */\n      dup4\n        /* \"#utility.yul\":9829:9846   */\n      add\n        /* \"#utility.yul\":9820:9826   */\n      dup5\n        /* \"#utility.yul\":9780:9847   */\n      tag_317\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9640:9854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9860:10054   */\n    tag_130:\n        /* \"#utility.yul\":9900:9904   */\n      0x00\n        /* \"#utility.yul\":9920:9940   */\n      tag_452\n        /* \"#utility.yul\":9938:9939   */\n      dup3\n        /* \"#utility.yul\":9920:9940   */\n      tag_312\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9915:9940   */\n      swap2\n      pop\n        /* \"#utility.yul\":9954:9974   */\n      tag_453\n        /* \"#utility.yul\":9972:9973   */\n      dup4\n        /* \"#utility.yul\":9954:9974   */\n      tag_312\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9949:9974   */\n      swap3\n      pop\n        /* \"#utility.yul\":9998:9999   */\n      dup3\n        /* \"#utility.yul\":9995:9996   */\n      dup3\n        /* \"#utility.yul\":9991:10000   */\n      sub\n        /* \"#utility.yul\":9983:10000   */\n      swap1\n      pop\n        /* \"#utility.yul\":10022:10023   */\n      dup2\n        /* \"#utility.yul\":10016:10020   */\n      dup2\n        /* \"#utility.yul\":10013:10024   */\n      gt\n        /* \"#utility.yul\":10010:10047   */\n      iszero\n      tag_454\n      jumpi\n        /* \"#utility.yul\":10027:10045   */\n      tag_455\n      tag_331\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":10010:10047   */\n    tag_454:\n        /* \"#utility.yul\":9860:10054   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10060:10392   */\n    tag_136:\n        /* \"#utility.yul\":10181:10185   */\n      0x00\n        /* \"#utility.yul\":10219:10221   */\n      0x40\n        /* \"#utility.yul\":10208:10217   */\n      dup3\n        /* \"#utility.yul\":10204:10222   */\n      add\n        /* \"#utility.yul\":10196:10222   */\n      swap1\n      pop\n        /* \"#utility.yul\":10232:10303   */\n      tag_457\n        /* \"#utility.yul\":10300:10301   */\n      0x00\n        /* \"#utility.yul\":10289:10298   */\n      dup4\n        /* \"#utility.yul\":10285:10302   */\n      add\n        /* \"#utility.yul\":10276:10282   */\n      dup6\n        /* \"#utility.yul\":10232:10303   */\n      tag_313\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":10313:10385   */\n      tag_458\n        /* \"#utility.yul\":10381:10383   */\n      0x20\n        /* \"#utility.yul\":10370:10379   */\n      dup4\n        /* \"#utility.yul\":10366:10384   */\n      add\n        /* \"#utility.yul\":10357:10363   */\n      dup5\n        /* \"#utility.yul\":10313:10385   */\n      tag_313\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":10060:10392   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10398:10578   */\n    tag_158:\n        /* \"#utility.yul\":10446:10523   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10443:10444   */\n      0x00\n        /* \"#utility.yul\":10436:10524   */\n      mstore\n        /* \"#utility.yul\":10543:10547   */\n      0x32\n        /* \"#utility.yul\":10540:10541   */\n      0x04\n        /* \"#utility.yul\":10533:10548   */\n      mstore\n        /* \"#utility.yul\":10567:10571   */\n      0x24\n        /* \"#utility.yul\":10564:10565   */\n      0x00\n        /* \"#utility.yul\":10557:10572   */\n      revert\n        /* \"#utility.yul\":10584:10994   */\n    tag_210:\n        /* \"#utility.yul\":10624:10631   */\n      0x00\n        /* \"#utility.yul\":10647:10667   */\n      tag_461\n        /* \"#utility.yul\":10665:10666   */\n      dup3\n        /* \"#utility.yul\":10647:10667   */\n      tag_312\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10642:10667   */\n      swap2\n      pop\n        /* \"#utility.yul\":10681:10701   */\n      tag_462\n        /* \"#utility.yul\":10699:10700   */\n      dup4\n        /* \"#utility.yul\":10681:10701   */\n      tag_312\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10676:10701   */\n      swap3\n      pop\n        /* \"#utility.yul\":10736:10737   */\n      dup3\n        /* \"#utility.yul\":10733:10734   */\n      dup3\n        /* \"#utility.yul\":10729:10738   */\n      mul\n        /* \"#utility.yul\":10758:10788   */\n      tag_463\n        /* \"#utility.yul\":10776:10787   */\n      dup2\n        /* \"#utility.yul\":10758:10788   */\n      tag_312\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10747:10788   */\n      swap2\n      pop\n        /* \"#utility.yul\":10937:10938   */\n      dup3\n        /* \"#utility.yul\":10928:10935   */\n      dup3\n        /* \"#utility.yul\":10924:10939   */\n      div\n        /* \"#utility.yul\":10921:10922   */\n      dup5\n        /* \"#utility.yul\":10918:10940   */\n      eq\n        /* \"#utility.yul\":10898:10899   */\n      dup4\n        /* \"#utility.yul\":10891:10900   */\n      iszero\n        /* \"#utility.yul\":10871:10954   */\n      or\n        /* \"#utility.yul\":10848:10987   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":10967:10985   */\n      tag_465\n      tag_331\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10848:10987   */\n    tag_464:\n        /* \"#utility.yul\":10632:10994   */\n      pop\n        /* \"#utility.yul\":10584:10994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11000:11180   */\n    tag_332:\n        /* \"#utility.yul\":11048:11125   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11045:11046   */\n      0x00\n        /* \"#utility.yul\":11038:11126   */\n      mstore\n        /* \"#utility.yul\":11145:11149   */\n      0x12\n        /* \"#utility.yul\":11142:11143   */\n      0x04\n        /* \"#utility.yul\":11135:11150   */\n      mstore\n        /* \"#utility.yul\":11169:11173   */\n      0x24\n        /* \"#utility.yul\":11166:11167   */\n      0x00\n        /* \"#utility.yul\":11159:11174   */\n      revert\n        /* \"#utility.yul\":11186:11371   */\n    tag_212:\n        /* \"#utility.yul\":11226:11227   */\n      0x00\n        /* \"#utility.yul\":11243:11263   */\n      tag_468\n        /* \"#utility.yul\":11261:11262   */\n      dup3\n        /* \"#utility.yul\":11243:11263   */\n      tag_312\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11238:11263   */\n      swap2\n      pop\n        /* \"#utility.yul\":11277:11297   */\n      tag_469\n        /* \"#utility.yul\":11295:11296   */\n      dup4\n        /* \"#utility.yul\":11277:11297   */\n      tag_312\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":11272:11297   */\n      swap3\n      pop\n        /* \"#utility.yul\":11316:11317   */\n      dup3\n        /* \"#utility.yul\":11306:11341   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":11321:11339   */\n      tag_471\n      tag_332\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11306:11341   */\n    tag_470:\n        /* \"#utility.yul\":11363:11364   */\n      dup3\n        /* \"#utility.yul\":11360:11361   */\n      dup3\n        /* \"#utility.yul\":11356:11365   */\n      div\n        /* \"#utility.yul\":11351:11365   */\n      swap1\n      pop\n        /* \"#utility.yul\":11186:11371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11377:11546   */\n    tag_333:\n        /* \"#utility.yul\":11461:11472   */\n      0x00\n        /* \"#utility.yul\":11495:11501   */\n      dup3\n        /* \"#utility.yul\":11490:11493   */\n      dup3\n        /* \"#utility.yul\":11483:11502   */\n      mstore\n        /* \"#utility.yul\":11535:11539   */\n      0x20\n        /* \"#utility.yul\":11530:11533   */\n      dup3\n        /* \"#utility.yul\":11526:11540   */\n      add\n        /* \"#utility.yul\":11511:11540   */\n      swap1\n      pop\n        /* \"#utility.yul\":11377:11546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11552:11733   */\n    tag_334:\n        /* \"#utility.yul\":11692:11725   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11688:11689   */\n      0x00\n        /* \"#utility.yul\":11680:11686   */\n      dup3\n        /* \"#utility.yul\":11676:11690   */\n      add\n        /* \"#utility.yul\":11669:11726   */\n      mstore\n        /* \"#utility.yul\":11552:11733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11739:12105   */\n    tag_335:\n        /* \"#utility.yul\":11881:11884   */\n      0x00\n        /* \"#utility.yul\":11902:11969   */\n      tag_475\n        /* \"#utility.yul\":11966:11968   */\n      0x1f\n        /* \"#utility.yul\":11961:11964   */\n      dup4\n        /* \"#utility.yul\":11902:11969   */\n      tag_333\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":11895:11969   */\n      swap2\n      pop\n        /* \"#utility.yul\":11978:12071   */\n      tag_476\n        /* \"#utility.yul\":12067:12070   */\n      dup3\n        /* \"#utility.yul\":11978:12071   */\n      tag_334\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12096:12098   */\n      0x20\n        /* \"#utility.yul\":12091:12094   */\n      dup3\n        /* \"#utility.yul\":12087:12099   */\n      add\n        /* \"#utility.yul\":12080:12099   */\n      swap1\n      pop\n        /* \"#utility.yul\":11739:12105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12111:12530   */\n    tag_224:\n        /* \"#utility.yul\":12277:12281   */\n      0x00\n        /* \"#utility.yul\":12315:12317   */\n      0x20\n        /* \"#utility.yul\":12304:12313   */\n      dup3\n        /* \"#utility.yul\":12300:12318   */\n      add\n        /* \"#utility.yul\":12292:12318   */\n      swap1\n      pop\n        /* \"#utility.yul\":12364:12373   */\n      dup2\n        /* \"#utility.yul\":12358:12362   */\n      dup2\n        /* \"#utility.yul\":12354:12374   */\n      sub\n        /* \"#utility.yul\":12350:12351   */\n      0x00\n        /* \"#utility.yul\":12339:12348   */\n      dup4\n        /* \"#utility.yul\":12335:12352   */\n      add\n        /* \"#utility.yul\":12328:12375   */\n      mstore\n        /* \"#utility.yul\":12392:12523   */\n      tag_478\n        /* \"#utility.yul\":12518:12522   */\n      dup2\n        /* \"#utility.yul\":12392:12523   */\n      tag_335\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12384:12523   */\n      swap1\n      pop\n        /* \"#utility.yul\":12111:12530   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12536:12700   */\n    tag_336:\n        /* \"#utility.yul\":12676:12692   */\n      0x4e6f7457686974656c6973746564000000000000000000000000000000000000\n        /* \"#utility.yul\":12672:12673   */\n      0x00\n        /* \"#utility.yul\":12664:12670   */\n      dup3\n        /* \"#utility.yul\":12660:12674   */\n      add\n        /* \"#utility.yul\":12653:12693   */\n      mstore\n        /* \"#utility.yul\":12536:12700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12706:13072   */\n    tag_337:\n        /* \"#utility.yul\":12848:12851   */\n      0x00\n        /* \"#utility.yul\":12869:12936   */\n      tag_481\n        /* \"#utility.yul\":12933:12935   */\n      0x0e\n        /* \"#utility.yul\":12928:12931   */\n      dup4\n        /* \"#utility.yul\":12869:12936   */\n      tag_333\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12862:12936   */\n      swap2\n      pop\n        /* \"#utility.yul\":12945:13038   */\n      tag_482\n        /* \"#utility.yul\":13034:13037   */\n      dup3\n        /* \"#utility.yul\":12945:13038   */\n      tag_336\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":13063:13065   */\n      0x20\n        /* \"#utility.yul\":13058:13061   */\n      dup3\n        /* \"#utility.yul\":13054:13066   */\n      add\n        /* \"#utility.yul\":13047:13066   */\n      swap1\n      pop\n        /* \"#utility.yul\":12706:13072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13078:13497   */\n    tag_238:\n        /* \"#utility.yul\":13244:13248   */\n      0x00\n        /* \"#utility.yul\":13282:13284   */\n      0x20\n        /* \"#utility.yul\":13271:13280   */\n      dup3\n        /* \"#utility.yul\":13267:13285   */\n      add\n        /* \"#utility.yul\":13259:13285   */\n      swap1\n      pop\n        /* \"#utility.yul\":13331:13340   */\n      dup2\n        /* \"#utility.yul\":13325:13329   */\n      dup2\n        /* \"#utility.yul\":13321:13341   */\n      sub\n        /* \"#utility.yul\":13317:13318   */\n      0x00\n        /* \"#utility.yul\":13306:13315   */\n      dup4\n        /* \"#utility.yul\":13302:13319   */\n      add\n        /* \"#utility.yul\":13295:13342   */\n      mstore\n        /* \"#utility.yul\":13359:13490   */\n      tag_484\n        /* \"#utility.yul\":13485:13489   */\n      dup2\n        /* \"#utility.yul\":13359:13490   */\n      tag_337\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13351:13490   */\n      swap1\n      pop\n        /* \"#utility.yul\":13078:13497   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13503:14278   */\n    tag_254:\n        /* \"#utility.yul\":13736:13740   */\n      0x00\n        /* \"#utility.yul\":13774:13777   */\n      0xc0\n        /* \"#utility.yul\":13763:13772   */\n      dup3\n        /* \"#utility.yul\":13759:13778   */\n      add\n        /* \"#utility.yul\":13751:13778   */\n      swap1\n      pop\n        /* \"#utility.yul\":13788:13859   */\n      tag_486\n        /* \"#utility.yul\":13856:13857   */\n      0x00\n        /* \"#utility.yul\":13845:13854   */\n      dup4\n        /* \"#utility.yul\":13841:13858   */\n      add\n        /* \"#utility.yul\":13832:13838   */\n      dup10\n        /* \"#utility.yul\":13788:13859   */\n      tag_315\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13869:13941   */\n      tag_487\n        /* \"#utility.yul\":13937:13939   */\n      0x20\n        /* \"#utility.yul\":13926:13935   */\n      dup4\n        /* \"#utility.yul\":13922:13940   */\n      add\n        /* \"#utility.yul\":13913:13919   */\n      dup9\n        /* \"#utility.yul\":13869:13941   */\n      tag_313\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13951:14023   */\n      tag_488\n        /* \"#utility.yul\":14019:14021   */\n      0x40\n        /* \"#utility.yul\":14008:14017   */\n      dup4\n        /* \"#utility.yul\":14004:14022   */\n      add\n        /* \"#utility.yul\":13995:14001   */\n      dup8\n        /* \"#utility.yul\":13951:14023   */\n      tag_313\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":14033:14105   */\n      tag_489\n        /* \"#utility.yul\":14101:14103   */\n      0x60\n        /* \"#utility.yul\":14090:14099   */\n      dup4\n        /* \"#utility.yul\":14086:14104   */\n      add\n        /* \"#utility.yul\":14077:14083   */\n      dup7\n        /* \"#utility.yul\":14033:14105   */\n      tag_313\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14115:14188   */\n      tag_490\n        /* \"#utility.yul\":14183:14186   */\n      0x80\n        /* \"#utility.yul\":14172:14181   */\n      dup4\n        /* \"#utility.yul\":14168:14187   */\n      add\n        /* \"#utility.yul\":14159:14165   */\n      dup6\n        /* \"#utility.yul\":14115:14188   */\n      tag_315\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14198:14271   */\n      tag_491\n        /* \"#utility.yul\":14266:14269   */\n      0xa0\n        /* \"#utility.yul\":14255:14264   */\n      dup4\n        /* \"#utility.yul\":14251:14270   */\n      add\n        /* \"#utility.yul\":14242:14248   */\n      dup5\n        /* \"#utility.yul\":14198:14271   */\n      tag_313\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":13503:14278   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14284:14406   */\n    tag_338:\n        /* \"#utility.yul\":14357:14381   */\n      tag_493\n        /* \"#utility.yul\":14375:14380   */\n      dup2\n        /* \"#utility.yul\":14357:14381   */\n      tag_312\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":14350:14355   */\n      dup2\n        /* \"#utility.yul\":14347:14382   */\n      eq\n        /* \"#utility.yul\":14337:14400   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":14396:14397   */\n      0x00\n        /* \"#utility.yul\":14393:14394   */\n      0x00\n        /* \"#utility.yul\":14386:14398   */\n      revert\n        /* \"#utility.yul\":14337:14400   */\n    tag_494:\n        /* \"#utility.yul\":14284:14406   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14412:14555   */\n    tag_339:\n        /* \"#utility.yul\":14469:14474   */\n      0x00\n        /* \"#utility.yul\":14500:14506   */\n      dup2\n        /* \"#utility.yul\":14494:14507   */\n      mload\n        /* \"#utility.yul\":14485:14507   */\n      swap1\n      pop\n        /* \"#utility.yul\":14516:14549   */\n      tag_496\n        /* \"#utility.yul\":14543:14548   */\n      dup2\n        /* \"#utility.yul\":14516:14549   */\n      tag_338\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":14412:14555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14561:15224   */\n    tag_258:\n        /* \"#utility.yul\":14649:14655   */\n      0x00\n        /* \"#utility.yul\":14657:14663   */\n      0x00\n        /* \"#utility.yul\":14665:14671   */\n      0x00\n        /* \"#utility.yul\":14714:14716   */\n      0x60\n        /* \"#utility.yul\":14702:14711   */\n      dup5\n        /* \"#utility.yul\":14693:14700   */\n      dup7\n        /* \"#utility.yul\":14689:14712   */\n      sub\n        /* \"#utility.yul\":14685:14717   */\n      slt\n        /* \"#utility.yul\":14682:14801   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":14720:14799   */\n      tag_499\n      tag_299\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":14682:14801   */\n    tag_498:\n        /* \"#utility.yul\":14840:14841   */\n      0x00\n        /* \"#utility.yul\":14865:14929   */\n      tag_500\n        /* \"#utility.yul\":14921:14928   */\n      dup7\n        /* \"#utility.yul\":14912:14918   */\n      dup3\n        /* \"#utility.yul\":14901:14910   */\n      dup8\n        /* \"#utility.yul\":14897:14919   */\n      add\n        /* \"#utility.yul\":14865:14929   */\n      tag_339\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":14855:14929   */\n      swap4\n      pop\n        /* \"#utility.yul\":14811:14939   */\n      pop\n        /* \"#utility.yul\":14978:14980   */\n      0x20\n        /* \"#utility.yul\":15004:15068   */\n      tag_501\n        /* \"#utility.yul\":15060:15067   */\n      dup7\n        /* \"#utility.yul\":15051:15057   */\n      dup3\n        /* \"#utility.yul\":15040:15049   */\n      dup8\n        /* \"#utility.yul\":15036:15058   */\n      add\n        /* \"#utility.yul\":15004:15068   */\n      tag_339\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":14994:15068   */\n      swap3\n      pop\n        /* \"#utility.yul\":14949:15078   */\n      pop\n        /* \"#utility.yul\":15117:15119   */\n      0x40\n        /* \"#utility.yul\":15143:15207   */\n      tag_502\n        /* \"#utility.yul\":15199:15206   */\n      dup7\n        /* \"#utility.yul\":15190:15196   */\n      dup3\n        /* \"#utility.yul\":15179:15188   */\n      dup8\n        /* \"#utility.yul\":15175:15197   */\n      add\n        /* \"#utility.yul\":15143:15207   */\n      tag_339\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":15133:15207   */\n      swap2\n      pop\n        /* \"#utility.yul\":15088:15217   */\n      pop\n        /* \"#utility.yul\":14561:15224   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":15230:15377   */\n    tag_340:\n        /* \"#utility.yul\":15331:15342   */\n      0x00\n        /* \"#utility.yul\":15368:15371   */\n      dup2\n        /* \"#utility.yul\":15353:15371   */\n      swap1\n      pop\n        /* \"#utility.yul\":15230:15377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15383:15497   */\n    tag_341:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15503:15901   */\n    tag_342:\n        /* \"#utility.yul\":15662:15665   */\n      0x00\n        /* \"#utility.yul\":15683:15766   */\n      tag_506\n        /* \"#utility.yul\":15764:15765   */\n      0x00\n        /* \"#utility.yul\":15759:15762   */\n      dup4\n        /* \"#utility.yul\":15683:15766   */\n      tag_340\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":15676:15766   */\n      swap2\n      pop\n        /* \"#utility.yul\":15775:15868   */\n      tag_507\n        /* \"#utility.yul\":15864:15867   */\n      dup3\n        /* \"#utility.yul\":15775:15868   */\n      tag_341\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":15893:15894   */\n      0x00\n        /* \"#utility.yul\":15888:15891   */\n      dup3\n        /* \"#utility.yul\":15884:15895   */\n      add\n        /* \"#utility.yul\":15877:15895   */\n      swap1\n      pop\n        /* \"#utility.yul\":15503:15901   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15907:16286   */\n    tag_265:\n        /* \"#utility.yul\":16091:16094   */\n      0x00\n        /* \"#utility.yul\":16113:16260   */\n      tag_509\n        /* \"#utility.yul\":16256:16259   */\n      dup3\n        /* \"#utility.yul\":16113:16260   */\n      tag_342\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":16106:16260   */\n      swap2\n      pop\n        /* \"#utility.yul\":16277:16280   */\n      dup2\n        /* \"#utility.yul\":16270:16280   */\n      swap1\n      pop\n        /* \"#utility.yul\":15907:16286   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16292:16624   */\n    tag_275:\n        /* \"#utility.yul\":16413:16417   */\n      0x00\n        /* \"#utility.yul\":16451:16453   */\n      0x40\n        /* \"#utility.yul\":16440:16449   */\n      dup3\n        /* \"#utility.yul\":16436:16454   */\n      add\n        /* \"#utility.yul\":16428:16454   */\n      swap1\n      pop\n        /* \"#utility.yul\":16464:16535   */\n      tag_511\n        /* \"#utility.yul\":16532:16533   */\n      0x00\n        /* \"#utility.yul\":16521:16530   */\n      dup4\n        /* \"#utility.yul\":16517:16534   */\n      add\n        /* \"#utility.yul\":16508:16514   */\n      dup6\n        /* \"#utility.yul\":16464:16535   */\n      tag_315\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":16545:16617   */\n      tag_512\n        /* \"#utility.yul\":16613:16615   */\n      0x20\n        /* \"#utility.yul\":16602:16611   */\n      dup4\n        /* \"#utility.yul\":16598:16616   */\n      add\n        /* \"#utility.yul\":16589:16595   */\n      dup5\n        /* \"#utility.yul\":16545:16617   */\n      tag_313\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":16292:16624   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16630:17072   */\n    tag_287:\n        /* \"#utility.yul\":16779:16783   */\n      0x00\n        /* \"#utility.yul\":16817:16819   */\n      0x60\n        /* \"#utility.yul\":16806:16815   */\n      dup3\n        /* \"#utility.yul\":16802:16820   */\n      add\n        /* \"#utility.yul\":16794:16820   */\n      swap1\n      pop\n        /* \"#utility.yul\":16830:16901   */\n      tag_514\n        /* \"#utility.yul\":16898:16899   */\n      0x00\n        /* \"#utility.yul\":16887:16896   */\n      dup4\n        /* \"#utility.yul\":16883:16900   */\n      add\n        /* \"#utility.yul\":16874:16880   */\n      dup7\n        /* \"#utility.yul\":16830:16901   */\n      tag_315\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":16911:16983   */\n      tag_515\n        /* \"#utility.yul\":16979:16981   */\n      0x20\n        /* \"#utility.yul\":16968:16977   */\n      dup4\n        /* \"#utility.yul\":16964:16982   */\n      add\n        /* \"#utility.yul\":16955:16961   */\n      dup6\n        /* \"#utility.yul\":16911:16983   */\n      tag_315\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":16993:17065   */\n      tag_516\n        /* \"#utility.yul\":17061:17063   */\n      0x40\n        /* \"#utility.yul\":17050:17059   */\n      dup4\n        /* \"#utility.yul\":17046:17064   */\n      add\n        /* \"#utility.yul\":17037:17043   */\n      dup5\n        /* \"#utility.yul\":16993:17065   */\n      tag_313\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":16630:17072   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078ef971a7cea222bf3ed048b44a9612aa1142ba9d2b023511839a5410217c9ea64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1693": {
									"entryPoint": null,
									"id": 1693,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_prevalidatePool_2290": {
									"entryPoint": 871,
									"id": 2290,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 678,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_PresaleOptions_$1563_memory_ptr_fromMemory": {
									"entryPoint": 1521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint112_fromMemory": {
									"entryPoint": 1444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint32_fromMemory": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_struct$_PresaleOptions_$1563_memory_ptr_fromMemory": {
									"entryPoint": 1720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 1206,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint112": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint32": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5891:15",
										"nodeType": "YulBlock",
										"src": "0:5891:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "379:81:15",
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nativeSrc": "389:65:15",
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:15",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nativeSrc": "400:54:15",
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:15",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:15",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nativeSrc": "511:51:15",
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nativeSrc": "521:35:15",
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nativeSrc": "532:24:15",
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:15",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:15",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nativeSrc": "611:79:15",
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:15",
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:15",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:15",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nativeSrc": "670:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nativeSrc": "670:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nativeSrc": "641:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nativeSrc": "631:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nativeSrc": "624:43:15",
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nativeSrc": "621:63:15",
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:15",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nativeSrc": "759:80:15",
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nativeSrc": "769:22:15",
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nativeSrc": "778:13:15",
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nativeSrc": "800:33:15",
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nativeSrc": "800:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:15",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:15",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:15",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nativeSrc": "934:28:15",
													"nodeType": "YulBlock",
													"src": "934:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "951:1:15",
																		"nodeType": "YulLiteral",
																		"src": "951:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "954:1:15",
																		"nodeType": "YulLiteral",
																		"src": "954:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "944:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "944:6:15"
																},
																"nativeSrc": "944:12:15",
																"nodeType": "YulFunctionCall",
																"src": "944:12:15"
															},
															"nativeSrc": "944:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "944:12:15"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "845:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "845:117:15"
											},
											{
												"body": {
													"nativeSrc": "1016:54:15",
													"nodeType": "YulBlock",
													"src": "1016:54:15",
													"statements": [
														{
															"nativeSrc": "1026:38:15",
															"nodeType": "YulAssignment",
															"src": "1026:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1044:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1044:5:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1051:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1040:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1040:3:15"
																		},
																		"nativeSrc": "1040:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1040:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1060:2:15",
																				"nodeType": "YulLiteral",
																				"src": "1060:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1056:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "1056:3:15"
																		},
																		"nativeSrc": "1056:7:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1056:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1036:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1036:3:15"
																},
																"nativeSrc": "1036:28:15",
																"nodeType": "YulFunctionCall",
																"src": "1036:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1026:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "968:102:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "999:5:15",
														"nodeType": "YulTypedName",
														"src": "999:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1009:6:15",
														"nodeType": "YulTypedName",
														"src": "1009:6:15",
														"type": ""
													}
												],
												"src": "968:102:15"
											},
											{
												"body": {
													"nativeSrc": "1104:152:15",
													"nodeType": "YulBlock",
													"src": "1104:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1121:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1121:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1124:77:15",
																		"nodeType": "YulLiteral",
																		"src": "1124:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1114:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:15"
																},
																"nativeSrc": "1114:88:15",
																"nodeType": "YulFunctionCall",
																"src": "1114:88:15"
															},
															"nativeSrc": "1114:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "1114:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1221:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1221:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1211:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:15"
																},
																"nativeSrc": "1211:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1211:15:15"
															},
															"nativeSrc": "1211:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1211:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1242:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1242:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1245:4:15",
																		"nodeType": "YulLiteral",
																		"src": "1245:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1235:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:15"
																},
																"nativeSrc": "1235:15:15",
																"nodeType": "YulFunctionCall",
																"src": "1235:15:15"
															},
															"nativeSrc": "1235:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "1235:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1076:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1076:180:15"
											},
											{
												"body": {
													"nativeSrc": "1305:238:15",
													"nodeType": "YulBlock",
													"src": "1305:238:15",
													"statements": [
														{
															"nativeSrc": "1315:58:15",
															"nodeType": "YulVariableDeclaration",
															"src": "1315:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1337:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "1367:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "1367:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1345:21:15",
																			"nodeType": "YulIdentifier",
																			"src": "1345:21:15"
																		},
																		"nativeSrc": "1345:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1333:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1333:3:15"
																},
																"nativeSrc": "1333:40:15",
																"nodeType": "YulFunctionCall",
																"src": "1333:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1319:10:15",
																	"nodeType": "YulTypedName",
																	"src": "1319:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1484:22:15",
																"nodeType": "YulBlock",
																"src": "1484:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1486:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "1486:16:15"
																			},
																			"nativeSrc": "1486:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1486:18:15"
																		},
																		"nativeSrc": "1486:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1427:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1427:10:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1439:18:15",
																				"nodeType": "YulLiteral",
																				"src": "1439:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1424:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1424:2:15"
																		},
																		"nativeSrc": "1424:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1424:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1463:10:15",
																				"nodeType": "YulIdentifier",
																				"src": "1463:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1475:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1475:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1460:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1460:2:15"
																		},
																		"nativeSrc": "1460:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1421:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "1421:2:15"
																},
																"nativeSrc": "1421:62:15",
																"nodeType": "YulFunctionCall",
																"src": "1421:62:15"
															},
															"nativeSrc": "1418:88:15",
															"nodeType": "YulIf",
															"src": "1418:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1522:2:15",
																		"nodeType": "YulLiteral",
																		"src": "1522:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1526:10:15",
																		"nodeType": "YulIdentifier",
																		"src": "1526:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1515:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1515:6:15"
																},
																"nativeSrc": "1515:22:15",
																"nodeType": "YulFunctionCall",
																"src": "1515:22:15"
															},
															"nativeSrc": "1515:22:15",
															"nodeType": "YulExpressionStatement",
															"src": "1515:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "1262:281:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1291:6:15",
														"nodeType": "YulTypedName",
														"src": "1291:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "1299:4:15",
														"nodeType": "YulTypedName",
														"src": "1299:4:15",
														"type": ""
													}
												],
												"src": "1262:281:15"
											},
											{
												"body": {
													"nativeSrc": "1590:88:15",
													"nodeType": "YulBlock",
													"src": "1590:88:15",
													"statements": [
														{
															"nativeSrc": "1600:30:15",
															"nodeType": "YulAssignment",
															"src": "1600:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1610:18:15",
																	"nodeType": "YulIdentifier",
																	"src": "1610:18:15"
																},
																"nativeSrc": "1610:20:15",
																"nodeType": "YulFunctionCall",
																"src": "1610:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1600:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1600:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1659:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:15"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1667:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "1667:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1639:19:15",
																	"nodeType": "YulIdentifier",
																	"src": "1639:19:15"
																},
																"nativeSrc": "1639:33:15",
																"nodeType": "YulFunctionCall",
																"src": "1639:33:15"
															},
															"nativeSrc": "1639:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "1639:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1549:129:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1574:4:15",
														"nodeType": "YulTypedName",
														"src": "1574:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1583:6:15",
														"nodeType": "YulTypedName",
														"src": "1583:6:15",
														"type": ""
													}
												],
												"src": "1549:129:15"
											},
											{
												"body": {
													"nativeSrc": "1773:28:15",
													"nodeType": "YulBlock",
													"src": "1773:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1790:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1790:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1793:1:15",
																		"nodeType": "YulLiteral",
																		"src": "1793:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1783:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1783:6:15"
																},
																"nativeSrc": "1783:12:15",
																"nodeType": "YulFunctionCall",
																"src": "1783:12:15"
															},
															"nativeSrc": "1783:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "1783:12:15"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "1684:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "1684:117:15"
											},
											{
												"body": {
													"nativeSrc": "1852:32:15",
													"nodeType": "YulBlock",
													"src": "1852:32:15",
													"statements": [
														{
															"nativeSrc": "1862:16:15",
															"nodeType": "YulAssignment",
															"src": "1862:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "1873:5:15",
																"nodeType": "YulIdentifier",
																"src": "1873:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1862:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1862:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1807:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1834:5:15",
														"nodeType": "YulTypedName",
														"src": "1834:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1844:7:15",
														"nodeType": "YulTypedName",
														"src": "1844:7:15",
														"type": ""
													}
												],
												"src": "1807:77:15"
											},
											{
												"body": {
													"nativeSrc": "1933:79:15",
													"nodeType": "YulBlock",
													"src": "1933:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "1990:16:15",
																"nodeType": "YulBlock",
																"src": "1990:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1999:1:15",
																					"nodeType": "YulLiteral",
																					"src": "1999:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2002:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2002:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1992:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "1992:6:15"
																			},
																			"nativeSrc": "1992:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "1992:12:15"
																		},
																		"nativeSrc": "1992:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "1992:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1956:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1956:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1981:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1981:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1963:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1963:17:15"
																				},
																				"nativeSrc": "1963:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1963:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1953:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "1953:2:15"
																		},
																		"nativeSrc": "1953:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1946:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:15"
																},
																"nativeSrc": "1946:43:15",
																"nodeType": "YulFunctionCall",
																"src": "1946:43:15"
															},
															"nativeSrc": "1943:63:15",
															"nodeType": "YulIf",
															"src": "1943:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1890:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1926:5:15",
														"nodeType": "YulTypedName",
														"src": "1926:5:15",
														"type": ""
													}
												],
												"src": "1890:122:15"
											},
											{
												"body": {
													"nativeSrc": "2081:80:15",
													"nodeType": "YulBlock",
													"src": "2081:80:15",
													"statements": [
														{
															"nativeSrc": "2091:22:15",
															"nodeType": "YulAssignment",
															"src": "2091:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2106:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2100:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:15"
																},
																"nativeSrc": "2100:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2100:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2091:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2091:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2149:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2149:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2122:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2122:26:15"
																},
																"nativeSrc": "2122:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2122:33:15"
															},
															"nativeSrc": "2122:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2122:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2018:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2059:6:15",
														"nodeType": "YulTypedName",
														"src": "2059:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2067:3:15",
														"nodeType": "YulTypedName",
														"src": "2067:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2075:5:15",
														"nodeType": "YulTypedName",
														"src": "2075:5:15",
														"type": ""
													}
												],
												"src": "2018:143:15"
											},
											{
												"body": {
													"nativeSrc": "2212:69:15",
													"nodeType": "YulBlock",
													"src": "2212:69:15",
													"statements": [
														{
															"nativeSrc": "2222:53:15",
															"nodeType": "YulAssignment",
															"src": "2222:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2237:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2237:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2244:30:15",
																		"nodeType": "YulLiteral",
																		"src": "2244:30:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2233:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2233:3:15"
																},
																"nativeSrc": "2233:42:15",
																"nodeType": "YulFunctionCall",
																"src": "2233:42:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2222:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2222:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nativeSrc": "2167:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2194:5:15",
														"nodeType": "YulTypedName",
														"src": "2194:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2204:7:15",
														"nodeType": "YulTypedName",
														"src": "2204:7:15",
														"type": ""
													}
												],
												"src": "2167:114:15"
											},
											{
												"body": {
													"nativeSrc": "2330:79:15",
													"nodeType": "YulBlock",
													"src": "2330:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2387:16:15",
																"nodeType": "YulBlock",
																"src": "2387:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2396:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2396:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2399:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2399:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2389:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2389:6:15"
																			},
																			"nativeSrc": "2389:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2389:12:15"
																		},
																		"nativeSrc": "2389:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2389:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2353:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2353:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2378:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2378:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint112",
																					"nativeSrc": "2360:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "2360:17:15"
																				},
																				"nativeSrc": "2360:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2360:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2350:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2350:2:15"
																		},
																		"nativeSrc": "2350:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2350:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2343:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2343:6:15"
																},
																"nativeSrc": "2343:43:15",
																"nodeType": "YulFunctionCall",
																"src": "2343:43:15"
															},
															"nativeSrc": "2340:63:15",
															"nodeType": "YulIf",
															"src": "2340:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint112",
												"nativeSrc": "2287:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2323:5:15",
														"nodeType": "YulTypedName",
														"src": "2323:5:15",
														"type": ""
													}
												],
												"src": "2287:122:15"
											},
											{
												"body": {
													"nativeSrc": "2478:80:15",
													"nodeType": "YulBlock",
													"src": "2478:80:15",
													"statements": [
														{
															"nativeSrc": "2488:22:15",
															"nodeType": "YulAssignment",
															"src": "2488:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2503:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2503:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2497:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2497:5:15"
																},
																"nativeSrc": "2497:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2497:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2488:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2488:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2546:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2546:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint112",
																	"nativeSrc": "2519:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "2519:26:15"
																},
																"nativeSrc": "2519:33:15",
																"nodeType": "YulFunctionCall",
																"src": "2519:33:15"
															},
															"nativeSrc": "2519:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "2519:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint112_fromMemory",
												"nativeSrc": "2415:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2456:6:15",
														"nodeType": "YulTypedName",
														"src": "2456:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2464:3:15",
														"nodeType": "YulTypedName",
														"src": "2464:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2472:5:15",
														"nodeType": "YulTypedName",
														"src": "2472:5:15",
														"type": ""
													}
												],
												"src": "2415:143:15"
											},
											{
												"body": {
													"nativeSrc": "2608:49:15",
													"nodeType": "YulBlock",
													"src": "2608:49:15",
													"statements": [
														{
															"nativeSrc": "2618:33:15",
															"nodeType": "YulAssignment",
															"src": "2618:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2633:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2633:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2640:10:15",
																		"nodeType": "YulLiteral",
																		"src": "2640:10:15",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2629:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2629:3:15"
																},
																"nativeSrc": "2629:22:15",
																"nodeType": "YulFunctionCall",
																"src": "2629:22:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2618:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2618:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "2564:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2590:5:15",
														"nodeType": "YulTypedName",
														"src": "2590:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2600:7:15",
														"nodeType": "YulTypedName",
														"src": "2600:7:15",
														"type": ""
													}
												],
												"src": "2564:93:15"
											},
											{
												"body": {
													"nativeSrc": "2705:78:15",
													"nodeType": "YulBlock",
													"src": "2705:78:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "2761:16:15",
																"nodeType": "YulBlock",
																"src": "2761:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2770:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2770:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2773:1:15",
																					"nodeType": "YulLiteral",
																					"src": "2773:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2763:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "2763:6:15"
																			},
																			"nativeSrc": "2763:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "2763:12:15"
																		},
																		"nativeSrc": "2763:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "2763:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2728:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2728:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2752:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "2752:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint32",
																					"nativeSrc": "2735:16:15",
																					"nodeType": "YulIdentifier",
																					"src": "2735:16:15"
																				},
																				"nativeSrc": "2735:23:15",
																				"nodeType": "YulFunctionCall",
																				"src": "2735:23:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2725:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "2725:2:15"
																		},
																		"nativeSrc": "2725:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2725:34:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2718:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2718:6:15"
																},
																"nativeSrc": "2718:42:15",
																"nodeType": "YulFunctionCall",
																"src": "2718:42:15"
															},
															"nativeSrc": "2715:62:15",
															"nodeType": "YulIf",
															"src": "2715:62:15"
														}
													]
												},
												"name": "validator_revert_t_uint32",
												"nativeSrc": "2663:120:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2698:5:15",
														"nodeType": "YulTypedName",
														"src": "2698:5:15",
														"type": ""
													}
												],
												"src": "2663:120:15"
											},
											{
												"body": {
													"nativeSrc": "2851:79:15",
													"nodeType": "YulBlock",
													"src": "2851:79:15",
													"statements": [
														{
															"nativeSrc": "2861:22:15",
															"nodeType": "YulAssignment",
															"src": "2861:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2876:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "2876:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2870:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2870:5:15"
																},
																"nativeSrc": "2870:13:15",
																"nodeType": "YulFunctionCall",
																"src": "2870:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2861:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "2861:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2918:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2918:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint32",
																	"nativeSrc": "2892:25:15",
																	"nodeType": "YulIdentifier",
																	"src": "2892:25:15"
																},
																"nativeSrc": "2892:32:15",
																"nodeType": "YulFunctionCall",
																"src": "2892:32:15"
															},
															"nativeSrc": "2892:32:15",
															"nodeType": "YulExpressionStatement",
															"src": "2892:32:15"
														}
													]
												},
												"name": "abi_decode_t_uint32_fromMemory",
												"nativeSrc": "2789:141:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2829:6:15",
														"nodeType": "YulTypedName",
														"src": "2829:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2837:3:15",
														"nodeType": "YulTypedName",
														"src": "2837:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2845:5:15",
														"nodeType": "YulTypedName",
														"src": "2845:5:15",
														"type": ""
													}
												],
												"src": "2789:141:15"
											},
											{
												"body": {
													"nativeSrc": "3071:1575:15",
													"nodeType": "YulBlock",
													"src": "3071:1575:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "3117:83:15",
																"nodeType": "YulBlock",
																"src": "3117:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "3119:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "3119:77:15"
																			},
																			"nativeSrc": "3119:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "3119:79:15"
																		},
																		"nativeSrc": "3119:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "3119:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "3092:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "3092:3:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3097:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "3097:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3088:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "3088:3:15"
																		},
																		"nativeSrc": "3088:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3088:19:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3109:6:15",
																		"nodeType": "YulLiteral",
																		"src": "3109:6:15",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3084:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3084:3:15"
																},
																"nativeSrc": "3084:32:15",
																"nodeType": "YulFunctionCall",
																"src": "3084:32:15"
															},
															"nativeSrc": "3081:119:15",
															"nodeType": "YulIf",
															"src": "3081:119:15"
														},
														{
															"nativeSrc": "3209:32:15",
															"nodeType": "YulAssignment",
															"src": "3209:32:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3234:6:15",
																		"nodeType": "YulLiteral",
																		"src": "3234:6:15",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3218:15:15",
																	"nodeType": "YulIdentifier",
																	"src": "3218:15:15"
																},
																"nativeSrc": "3218:23:15",
																"nodeType": "YulFunctionCall",
																"src": "3218:23:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3209:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "3209:5:15"
																}
															]
														},
														{
															"nativeSrc": "3251:169:15",
															"nodeType": "YulBlock",
															"src": "3251:169:15",
															"statements": [
																{
																	"nativeSrc": "3294:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3294:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3308:1:15",
																		"nodeType": "YulLiteral",
																		"src": "3308:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3298:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3298:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3334:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3334:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3341:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3341:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3330:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3330:3:15"
																				},
																				"nativeSrc": "3330:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3330:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3384:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "3384:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3395:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "3395:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3380:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3380:3:15"
																						},
																						"nativeSrc": "3380:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3380:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3404:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3404:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "3348:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "3348:31:15"
																				},
																				"nativeSrc": "3348:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3348:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3323:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3323:6:15"
																		},
																		"nativeSrc": "3323:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3323:86:15"
																	},
																	"nativeSrc": "3323:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3323:86:15"
																}
															]
														},
														{
															"nativeSrc": "3430:165:15",
															"nodeType": "YulBlock",
															"src": "3430:165:15",
															"statements": [
																{
																	"nativeSrc": "3468:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3468:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3482:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3482:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3472:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3472:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3509:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3509:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3516:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3516:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3505:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3505:3:15"
																				},
																				"nativeSrc": "3505:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3505:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3559:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "3559:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3570:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "3570:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3555:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3555:3:15"
																						},
																						"nativeSrc": "3555:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3555:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3579:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3579:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "3523:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "3523:31:15"
																				},
																				"nativeSrc": "3523:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3498:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3498:6:15"
																		},
																		"nativeSrc": "3498:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3498:86:15"
																	},
																	"nativeSrc": "3498:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3498:86:15"
																}
															]
														},
														{
															"nativeSrc": "3605:165:15",
															"nodeType": "YulBlock",
															"src": "3605:165:15",
															"statements": [
																{
																	"nativeSrc": "3643:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3643:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3657:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3657:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3647:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3647:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3684:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3684:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3691:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3691:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3680:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3680:3:15"
																				},
																				"nativeSrc": "3680:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3680:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3734:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "3734:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3745:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "3745:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3730:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3730:3:15"
																						},
																						"nativeSrc": "3730:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3730:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3754:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3754:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "3698:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "3698:31:15"
																				},
																				"nativeSrc": "3698:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3698:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3673:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3673:6:15"
																		},
																		"nativeSrc": "3673:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3673:86:15"
																	},
																	"nativeSrc": "3673:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3673:86:15"
																}
															]
														},
														{
															"nativeSrc": "3780:161:15",
															"nodeType": "YulBlock",
															"src": "3780:161:15",
															"statements": [
																{
																	"nativeSrc": "3814:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3814:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3828:2:15",
																		"nodeType": "YulLiteral",
																		"src": "3828:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3818:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3818:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3855:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3855:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3862:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3862:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3851:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:15"
																				},
																				"nativeSrc": "3851:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3851:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "3905:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "3905:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "3916:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "3916:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3901:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "3901:3:15"
																						},
																						"nativeSrc": "3901:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "3901:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "3925:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3925:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "3869:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "3869:31:15"
																				},
																				"nativeSrc": "3869:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3869:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "3844:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "3844:6:15"
																		},
																		"nativeSrc": "3844:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3844:86:15"
																	},
																	"nativeSrc": "3844:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3844:86:15"
																}
															]
														},
														{
															"nativeSrc": "3951:162:15",
															"nodeType": "YulBlock",
															"src": "3951:162:15",
															"statements": [
																{
																	"nativeSrc": "3985:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3985:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3999:3:15",
																		"nodeType": "YulLiteral",
																		"src": "3999:3:15",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3989:6:15",
																			"nodeType": "YulTypedName",
																			"src": "3989:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4027:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4027:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4034:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4034:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4023:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4023:3:15"
																				},
																				"nativeSrc": "4023:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4023:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4077:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "4077:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4088:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4088:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4073:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4073:3:15"
																						},
																						"nativeSrc": "4073:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4073:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4097:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4097:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256_fromMemory",
																					"nativeSrc": "4041:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "4041:31:15"
																				},
																				"nativeSrc": "4041:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4016:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4016:6:15"
																		},
																		"nativeSrc": "4016:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4016:86:15"
																	},
																	"nativeSrc": "4016:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4016:86:15"
																}
															]
														},
														{
															"nativeSrc": "4123:164:15",
															"nodeType": "YulBlock",
															"src": "4123:164:15",
															"statements": [
																{
																	"nativeSrc": "4159:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4159:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4173:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4173:3:15",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4163:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4163:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4201:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4201:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4208:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4208:4:15",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4197:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4197:3:15"
																				},
																				"nativeSrc": "4197:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4197:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4251:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "4251:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4262:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4262:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4247:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4247:3:15"
																						},
																						"nativeSrc": "4247:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4247:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4271:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4271:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint112_fromMemory",
																					"nativeSrc": "4215:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "4215:31:15"
																				},
																				"nativeSrc": "4215:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4215:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4190:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4190:6:15"
																		},
																		"nativeSrc": "4190:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4190:86:15"
																	},
																	"nativeSrc": "4190:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4190:86:15"
																}
															]
														},
														{
															"nativeSrc": "4297:162:15",
															"nodeType": "YulBlock",
															"src": "4297:162:15",
															"statements": [
																{
																	"nativeSrc": "4331:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4331:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4345:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4345:3:15",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4335:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4335:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4373:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4373:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4380:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4380:4:15",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4369:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4369:3:15"
																				},
																				"nativeSrc": "4369:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4369:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4423:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "4423:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4434:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4434:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4419:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4419:3:15"
																						},
																						"nativeSrc": "4419:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4419:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4443:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4443:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint112_fromMemory",
																					"nativeSrc": "4387:31:15",
																					"nodeType": "YulIdentifier",
																					"src": "4387:31:15"
																				},
																				"nativeSrc": "4387:60:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4387:60:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4362:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4362:6:15"
																		},
																		"nativeSrc": "4362:86:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4362:86:15"
																	},
																	"nativeSrc": "4362:86:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4362:86:15"
																}
															]
														},
														{
															"nativeSrc": "4469:170:15",
															"nodeType": "YulBlock",
															"src": "4469:170:15",
															"statements": [
																{
																	"nativeSrc": "4512:17:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4512:17:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4526:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4526:3:15",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4516:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4516:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4554:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4554:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4561:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4561:4:15",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4550:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4550:3:15"
																				},
																				"nativeSrc": "4550:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4550:16:15"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "4603:9:15",
																								"nodeType": "YulIdentifier",
																								"src": "4603:9:15"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "4614:6:15",
																								"nodeType": "YulIdentifier",
																								"src": "4614:6:15"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4599:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "4599:3:15"
																						},
																						"nativeSrc": "4599:22:15",
																						"nodeType": "YulFunctionCall",
																						"src": "4599:22:15"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "4623:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4623:3:15"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint32_fromMemory",
																					"nativeSrc": "4568:30:15",
																					"nodeType": "YulIdentifier",
																					"src": "4568:30:15"
																				},
																				"nativeSrc": "4568:59:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4568:59:15"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "4543:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4543:6:15"
																		},
																		"nativeSrc": "4543:85:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4543:85:15"
																	},
																	"nativeSrc": "4543:85:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4543:85:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_PresaleOptions_$1563_memory_ptr_fromMemory",
												"nativeSrc": "2973:1673:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3046:9:15",
														"nodeType": "YulTypedName",
														"src": "3046:9:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3057:3:15",
														"nodeType": "YulTypedName",
														"src": "3057:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3065:5:15",
														"nodeType": "YulTypedName",
														"src": "3065:5:15",
														"type": ""
													}
												],
												"src": "2973:1673:15"
											},
											{
												"body": {
													"nativeSrc": "4812:724:15",
													"nodeType": "YulBlock",
													"src": "4812:724:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "4859:83:15",
																"nodeType": "YulBlock",
																"src": "4859:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4861:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "4861:77:15"
																			},
																			"nativeSrc": "4861:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "4861:79:15"
																		},
																		"nativeSrc": "4861:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "4861:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:15"
																		},
																		"nativeSrc": "4829:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:3:15",
																		"nodeType": "YulLiteral",
																		"src": "4854:3:15",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:15"
																},
																"nativeSrc": "4825:33:15",
																"nodeType": "YulFunctionCall",
																"src": "4825:33:15"
															},
															"nativeSrc": "4822:120:15",
															"nodeType": "YulIf",
															"src": "4822:120:15"
														},
														{
															"nativeSrc": "4952:128:15",
															"nodeType": "YulBlock",
															"src": "4952:128:15",
															"statements": [
																{
																	"nativeSrc": "4967:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4967:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4981:1:15",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4971:6:15",
																			"nodeType": "YulTypedName",
																			"src": "4971:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4996:74:15",
																	"nodeType": "YulAssignment",
																	"src": "4996:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5042:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5042:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5053:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5053:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5038:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5038:3:15"
																				},
																				"nativeSrc": "5038:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5038:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5062:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5062:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5006:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "5006:31:15"
																		},
																		"nativeSrc": "5006:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4996:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "4996:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5090:129:15",
															"nodeType": "YulBlock",
															"src": "5090:129:15",
															"statements": [
																{
																	"nativeSrc": "5105:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5105:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5119:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5119:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5109:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5109:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5135:74:15",
																	"nodeType": "YulAssignment",
																	"src": "5135:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5181:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5181:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5192:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5192:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5177:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5177:3:15"
																				},
																				"nativeSrc": "5177:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5177:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5201:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5201:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5145:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "5145:31:15"
																		},
																		"nativeSrc": "5145:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5145:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5135:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5135:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5229:129:15",
															"nodeType": "YulBlock",
															"src": "5229:129:15",
															"statements": [
																{
																	"nativeSrc": "5244:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5244:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5258:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5258:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5248:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5248:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5274:74:15",
																	"nodeType": "YulAssignment",
																	"src": "5274:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5320:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5320:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5331:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5331:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5316:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5316:3:15"
																				},
																				"nativeSrc": "5316:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5316:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5340:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5340:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "5284:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "5284:31:15"
																		},
																		"nativeSrc": "5284:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5284:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5274:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5274:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5368:161:15",
															"nodeType": "YulBlock",
															"src": "5368:161:15",
															"statements": [
																{
																	"nativeSrc": "5383:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5383:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5397:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5397:2:15",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5387:6:15",
																			"nodeType": "YulTypedName",
																			"src": "5387:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5413:106:15",
																	"nodeType": "YulAssignment",
																	"src": "5413:106:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5491:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "5491:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5502:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "5502:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5487:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "5487:3:15"
																				},
																				"nativeSrc": "5487:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "5487:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5511:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "5511:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_PresaleOptions_$1563_memory_ptr_fromMemory",
																			"nativeSrc": "5423:63:15",
																			"nodeType": "YulIdentifier",
																			"src": "5423:63:15"
																		},
																		"nativeSrc": "5423:96:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5423:96:15"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "5413:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "5413:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_struct$_PresaleOptions_$1563_memory_ptr_fromMemory",
												"nativeSrc": "4652:884:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4758:9:15",
														"nodeType": "YulTypedName",
														"src": "4758:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4769:7:15",
														"nodeType": "YulTypedName",
														"src": "4769:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4781:6:15",
														"nodeType": "YulTypedName",
														"src": "4781:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4789:6:15",
														"nodeType": "YulTypedName",
														"src": "4789:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4797:6:15",
														"nodeType": "YulTypedName",
														"src": "4797:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4805:6:15",
														"nodeType": "YulTypedName",
														"src": "4805:6:15",
														"type": ""
													}
												],
												"src": "4652:884:15"
											},
											{
												"body": {
													"nativeSrc": "5607:53:15",
													"nodeType": "YulBlock",
													"src": "5607:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5624:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "5624:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5647:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "5647:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5629:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "5629:17:15"
																		},
																		"nativeSrc": "5629:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5617:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "5617:6:15"
																},
																"nativeSrc": "5617:37:15",
																"nodeType": "YulFunctionCall",
																"src": "5617:37:15"
															},
															"nativeSrc": "5617:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "5617:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5542:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5595:5:15",
														"nodeType": "YulTypedName",
														"src": "5595:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5602:3:15",
														"nodeType": "YulTypedName",
														"src": "5602:3:15",
														"type": ""
													}
												],
												"src": "5542:118:15"
											},
											{
												"body": {
													"nativeSrc": "5764:124:15",
													"nodeType": "YulBlock",
													"src": "5764:124:15",
													"statements": [
														{
															"nativeSrc": "5774:26:15",
															"nodeType": "YulAssignment",
															"src": "5774:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5786:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5797:2:15",
																		"nodeType": "YulLiteral",
																		"src": "5797:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5782:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5782:3:15"
																},
																"nativeSrc": "5782:18:15",
																"nodeType": "YulFunctionCall",
																"src": "5782:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5774:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5774:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5854:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5854:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5867:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5878:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5878:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5863:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:15"
																		},
																		"nativeSrc": "5863:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5810:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5810:43:15"
																},
																"nativeSrc": "5810:71:15",
																"nodeType": "YulFunctionCall",
																"src": "5810:71:15"
															},
															"nativeSrc": "5810:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "5810:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5666:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5736:9:15",
														"nodeType": "YulTypedName",
														"src": "5736:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5748:6:15",
														"nodeType": "YulTypedName",
														"src": "5748:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5759:4:15",
														"nodeType": "YulTypedName",
														"src": "5759:4:15",
														"type": ""
													}
												],
												"src": "5666:222:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint112(value) {\n        if iszero(eq(value, cleanup_t_uint112(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint112_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint112(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    // struct Presale.PresaleOptions\n    function abi_decode_t_struct$_PresaleOptions_$1563_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0100) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0100)\n\n        {\n            // tokenDeposit\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // hardCap\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // softCap\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // max\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // min\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint256_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // start\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint112_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // end\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint112_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // liquidityBps\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint32_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_struct$_PresaleOptions_$1563_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 352) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_struct$_PresaleOptions_$1563_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040525f60105f6101000a81548160ff021916908315150217905550348015610028575f5ffd5b50604051612b12380380612b12833981810160405281019061004a91906106b8565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100bb575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b2919061072c565b60405180910390fd5b6100ca816102a660201b60201c565b50600180819055506100e18161036760201b60201c565b8160036001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508260035f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360060160146101000a81548160ff021916908360ff1602179055508360036006015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060036007015f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015f6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555060c082015181600501600e6101000a8154816dffffffffffffffffffffffffffff02191690836dffffffffffffffffffffffffffff16021790555060e082015181600501601c6101000a81548163ffffffff021916908363ffffffff16021790555090505050505050610745565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8060200151816040015111156103a9576040517fa606ca7800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060600151816080015111156103eb576040517fb581346100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060c001516dffffffffffffffffffffffffffff168160a001516dffffffffffffffffffffffffffff161061044c576040517feff2c18200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b5f604051905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104858261045c565b9050919050565b6104958161047b565b811461049f575f5ffd5b50565b5f815190506104b08161048c565b92915050565b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610500826104ba565b810181811067ffffffffffffffff8211171561051f5761051e6104ca565b5b80604052505050565b5f61053161044f565b905061053d82826104f7565b919050565b5f819050919050565b61055481610542565b811461055e575f5ffd5b50565b5f8151905061056f8161054b565b92915050565b5f6dffffffffffffffffffffffffffff82169050919050565b61059781610575565b81146105a1575f5ffd5b50565b5f815190506105b28161058e565b92915050565b5f63ffffffff82169050919050565b6105d0816105b8565b81146105da575f5ffd5b50565b5f815190506105eb816105c7565b92915050565b5f6101008284031215610607576106066104b6565b5b610612610100610528565b90505f61062184828501610561565b5f83015250602061063484828501610561565b602083015250604061064884828501610561565b604083015250606061065c84828501610561565b606083015250608061067084828501610561565b60808301525060a0610684848285016105a4565b60a08301525060c0610698848285016105a4565b60c08301525060e06106ac848285016105dd565b60e08301525092915050565b5f5f5f5f61016085870312156106d1576106d0610458565b5b5f6106de878288016104a2565b94505060206106ef878288016104a2565b9350506040610700878288016104a2565b9250506060610711878288016105f1565b91505092959194509250565b6107268161047b565b82525050565b5f60208201905061073f5f83018461071d565b92915050565b6123c0806107525f395ff3fe6080604052600436106100f6575f3560e01c8063715018a611610089578063d0e30db011610058578063d0e30db014610315578063ea8a1af01461033f578063ed498fa814610369578063f2fde38b146103a557610107565b8063715018a6146102715780637f649783146102875780638da5cb5b146102af5780639b19251a146102d957610107565b80634bb278f3116100c55780634bb278f3146101cb5780634e71d92d146101f5578063548db1741461021f578063590e1ae31461024757610107565b8063052d9e7e1461010b57806316f0115b14610133578063184d69ab1461016557806342e94c901461018f57610107565b366101075761010533346103cd565b005b5f5ffd5b348015610116575f5ffd5b50610131600480360381019061012c9190611ba3565b6104a7565b005b34801561013e575f5ffd5b506101476104cb565b60405161015c99989796959493929190611db0565b60405180910390f35b348015610170575f5ffd5b50610179610659565b6040516101869190611e4a565b60405180910390f35b34801561019a575f5ffd5b506101b560048036038101906101b09190611e8d565b61066b565b6040516101c29190611eb8565b60405180910390f35b3480156101d6575f5ffd5b506101df610680565b6040516101ec9190611e4a565b60405180910390f35b348015610200575f5ffd5b50610209610886565b6040516102169190611eb8565b60405180910390f35b34801561022a575f5ffd5b5061024560048036038101906102409190611f32565b610a87565b005b348015610252575f5ffd5b5061025b610b2c565b6040516102689190611eb8565b60405180910390f35b34801561027c575f5ffd5b50610285610d5d565b005b348015610292575f5ffd5b506102ad60048036038101906102a89190611f32565b610d70565b005b3480156102ba575f5ffd5b506102c3610e16565b6040516102d09190611f7d565b60405180910390f35b3480156102e4575f5ffd5b506102ff60048036038101906102fa9190611e8d565b610e3d565b60405161030c9190611e4a565b60405180910390f35b348015610320575f5ffd5b50610329610e5a565b6040516103369190611eb8565b60405180910390f35b34801561034a575f5ffd5b50610353610fec565b6040516103609190611e4a565b60405180910390f35b348015610374575f5ffd5b5061038f600480360381019061038a9190611e8d565b611144565b60405161039c9190611eb8565b60405180910390f35b3480156103b0575f5ffd5b506103cb60048036038101906103c69190611e8d565b6111e4565b005b6103d5611268565b6103df82826112b7565b8060036005015f8282546103f39190611fc3565b925050819055508060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104469190611fc3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632826040516104939190611eb8565b60405180910390a26104a361158e565b5050565b6104af611597565b8060105f6101000a81548160ff02191690831515021790555050565b6003805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff169080600701604051806101000160405290815f820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200160058201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200160058201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905089565b60105f9054906101000a900460ff1681565b6002602052805f5260405f205f915090505481565b5f610689611597565b610691611268565b6002600360060160149054906101000a900460ff1660ff16146106fd57600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016106f49190611ff6565b60405180910390fd5b60036007016002015460036005015410801561074a57506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642105b15610781576040517f2bdc91ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600360060160146101000a81548160ff021916908360ff1602179055505f6107a961161e565b90506107ba81600360040154611660565b60036004015460036002015f8282546107d3919061200f565b925050819055505f816003600501546107ec919061200f565b90505f8111156108205761081f813373ffffffffffffffffffffffffffffffffffffffff1661179490919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f616c9469db50815ae0f1d0a020d9fc9060da7c57f03559afb0d4ebdaa0a3a05e6003600501544260405161086d929190612042565b60405180910390a260019250505061088361158e565b90565b5f61088f611268565b6004600360060160149054906101000a900460ff1660ff16146108fb57600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016108f29190611ff6565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610971576040517f6247a84e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61097b33611144565b90505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060036002015f8282546109d3919061200f565b92505081905550610a28338260035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f30c2341ba3f2142e78472f07dcf018a42044ae1c2c2e7ce867b327257f07ef2b8242604051610a70929190612042565b60405180910390a280915050610a8461158e565b90565b610a8f611597565b5f5f90505b82829050811015610b27575f60115f858585818110610ab657610ab5612069565b5b9050602002016020810190610acb9190611e8d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610a94565b505050565b5f5f60038060060160149054906101000a900460ff1660ff161480610b9a57506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642118015610b995750600360070160020154600360050154105b5b905080610bd3576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bdb611268565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610c51576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cfd813373ffffffffffffffffffffffffffffffffffffffff1661179490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb68242604051610d45929190612042565b60405180910390a280925050610d5961158e565b5090565b610d65611597565b610d6e5f6118d9565b565b610d78611597565b5f5f90505b82829050811015610e1157600160115f858585818110610da057610d9f612069565b5b9050602002016020810190610db59190611e8d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610d7d565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6011602052805f5260405f205f915054906101000a900460ff1681565b5f610e63611597565b6001600360060160149054906101000a900460ff1660ff1614610ecf57600360060160149054906101000a900460ff166040517fd07e8976000000000000000000000000000000000000000000000000000000008152600401610ec69190611ff6565b60405180910390fd5b6002600360060160146101000a81548160ff021916908360ff16021790555060036007015f015460036002015f828254610f099190611fc3565b92505081905550610f1861199a565b600360040181905550610f296119de565b6003800181905550610f88333060036007015f015460035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119fe909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560036007015f015442604051610fd7929190612042565b60405180910390a260036007015f0154905090565b5f610ff5611597565b60038060060160149054906101000a900460ff1660ff16111561106157600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016110589190611ff6565b60405180910390fd5b60038060060160146101000a81548160ff021916908360ff1602179055505f60036002015411156110ef575f60036002015490505f6003600201819055506110ed338260035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185a9092919063ffffffff16565b505b3373ffffffffffffffffffffffffffffffffffffffff167f27f83af92b39768b17fe0c8d6922452702717efb8626d97e7a754e0b27d4f6d2426040516111359190611eb8565b60405180910390a26001905090565b5f5f60036005015403611159575f90506111df565b670de0b6b3a76400006003800154600360050154670de0b6b3a764000060025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111be9190612096565b6111c89190612104565b6111d29190612096565b6111dc9190612104565b90505b919050565b6111ec611597565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361125c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112539190611f7d565b60405180910390fd5b611265816118d9565b50565b6002600154036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a49061218e565b60405180910390fd5b6002600181905550565b6002600360060160149054906101000a900460ff1660ff161461132357600360060160149054906101000a900460ff166040517fd07e897600000000000000000000000000000000000000000000000000000000815260040161131a9190611ff6565b60405180910390fd5b60036007016005015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642108061139357506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642115b156113ca576040517fe3840bc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360070160010154816003600501546113e49190611fc3565b111561141c576040517f283452da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036007016004015481101561145e576040517fbd70f35d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036007016003015460025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826114b09190611fc3565b11156114e8576040517f5a99681c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60105f9054906101000a900460ff16801561154a575060115f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561158a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611581906121f6565b60405180910390fd5b5050565b60018081905550565b61159f611a80565b73ffffffffffffffffffffffffffffffffffffffff166115bd610e16565b73ffffffffffffffffffffffffffffffffffffffff161461161c576115e0611a80565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116139190611f7d565b60405180910390fd5b565b5f6127106003600701600501601c9054906101000a900463ffffffff1663ffffffff166003600501546116519190612096565b61165b9190612104565b905090565b5f5f60036001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7198560035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168687896116d2610e16565b610258426116e09190611fc3565b6040518863ffffffff1660e01b815260040161170196959493929190612214565b60606040518083038185885af115801561171d573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611742919061229d565b50915091508282141580156117575750838114155b1561178e576040517feda12fe600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b804710156117db5747816040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016117d2929190612042565b60405180910390fd5b5f5f8373ffffffffffffffffffffffffffffffffffffffff16836040516118019061231a565b5f6040518083038185875af1925050503d805f811461183b576040519150601f19603f3d011682016040523d82523d5f602084013e611840565b606091505b5091509150816118545761185381611a87565b5b50505050565b6118d4838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161188d92919061232e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611acb565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6127106003600701600501601c9054906101000a900463ffffffff1663ffffffff1660036007015f01546119cf9190612096565b6119d99190612104565b905090565b5f6119e761199a565b60036007015f01546119f9919061200f565b905090565b611a7a848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611a3393929190612355565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611acb565b50505050565b5f33905090565b5f81511115611a995780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f60205f8451602086015f885af180611aea576040513d5f823e3d81fd5b3d92505f519150505f8214611b03576001811415611b1e565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611b6057836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611b579190611f7d565b60405180910390fd5b50505050565b5f5ffd5b5f5ffd5b5f8115159050919050565b611b8281611b6e565b8114611b8c575f5ffd5b50565b5f81359050611b9d81611b79565b92915050565b5f60208284031215611bb857611bb7611b66565b5b5f611bc584828501611b8f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f611c10611c0b611c0684611bce565b611bed565b611bce565b9050919050565b5f611c2182611bf6565b9050919050565b5f611c3282611c17565b9050919050565b611c4281611c28565b82525050565b5f611c5282611c17565b9050919050565b611c6281611c48565b82525050565b5f819050919050565b611c7a81611c68565b82525050565b5f611c8a82611bce565b9050919050565b611c9a81611c80565b82525050565b5f60ff82169050919050565b611cb581611ca0565b82525050565b611cc481611c68565b82525050565b5f6dffffffffffffffffffffffffffff82169050919050565b611cec81611cca565b82525050565b5f63ffffffff82169050919050565b611d0a81611cf2565b82525050565b61010082015f820151611d255f850182611cbb565b506020820151611d386020850182611cbb565b506040820151611d4b6040850182611cbb565b506060820151611d5e6060850182611cbb565b506080820151611d716080850182611cbb565b5060a0820151611d8460a0850182611ce3565b5060c0820151611d9760c0850182611ce3565b5060e0820151611daa60e0850182611d01565b50505050565b5f61020082019050611dc45f83018c611c39565b611dd1602083018b611c59565b611dde604083018a611c71565b611deb6060830189611c71565b611df86080830188611c71565b611e0560a0830187611c71565b611e1260c0830186611c91565b611e1f60e0830185611cac565b611e2d610100830184611d10565b9a9950505050505050505050565b611e4481611b6e565b82525050565b5f602082019050611e5d5f830184611e3b565b92915050565b611e6c81611c80565b8114611e76575f5ffd5b50565b5f81359050611e8781611e63565b92915050565b5f60208284031215611ea257611ea1611b66565b5b5f611eaf84828501611e79565b91505092915050565b5f602082019050611ecb5f830184611c71565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611ef257611ef1611ed1565b5b8235905067ffffffffffffffff811115611f0f57611f0e611ed5565b5b602083019150836020820283011115611f2b57611f2a611ed9565b5b9250929050565b5f5f60208385031215611f4857611f47611b66565b5b5f83013567ffffffffffffffff811115611f6557611f64611b6a565b5b611f7185828601611edd565b92509250509250929050565b5f602082019050611f905f830184611c91565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fcd82611c68565b9150611fd883611c68565b9250828201905080821115611ff057611fef611f96565b5b92915050565b5f6020820190506120095f830184611cac565b92915050565b5f61201982611c68565b915061202483611c68565b925082820390508181111561203c5761203b611f96565b5b92915050565b5f6040820190506120555f830185611c71565b6120626020830184611c71565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6120a082611c68565b91506120ab83611c68565b92508282026120b981611c68565b915082820484148315176120d0576120cf611f96565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61210e82611c68565b915061211983611c68565b925082612129576121286120d7565b5b828204905092915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612178601f83612134565b915061218382612144565b602082019050919050565b5f6020820190508181035f8301526121a58161216c565b9050919050565b7f4e6f7457686974656c69737465640000000000000000000000000000000000005f82015250565b5f6121e0600e83612134565b91506121eb826121ac565b602082019050919050565b5f6020820190508181035f83015261220d816121d4565b9050919050565b5f60c0820190506122275f830189611c91565b6122346020830188611c71565b6122416040830187611c71565b61224e6060830186611c71565b61225b6080830185611c91565b61226860a0830184611c71565b979650505050505050565b61227c81611c68565b8114612286575f5ffd5b50565b5f8151905061229781612273565b92915050565b5f5f5f606084860312156122b4576122b3611b66565b5b5f6122c186828701612289565b93505060206122d286828701612289565b92505060406122e386828701612289565b9150509250925092565b5f81905092915050565b50565b5f6123055f836122ed565b9150612310826122f7565b5f82019050919050565b5f612324826122fa565b9150819050919050565b5f6040820190506123415f830185611c91565b61234e6020830184611c71565b9392505050565b5f6060820190506123685f830186611c91565b6123756020830185611c91565b6123826040830184611c71565b94935050505056fea264697066735822122078ef971a7cea222bf3ed048b44a9612aa1142ba9d2b023511839a5410217c9ea64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH1 0x10 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2B12 CODESIZE SUB DUP1 PUSH2 0x2B12 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x4A SWAP2 SWAP1 PUSH2 0x6B8 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA DUP2 PUSH2 0x2A6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0xE1 DUP2 PUSH2 0x367 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x3 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH1 0x3 PUSH1 0x6 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x7 ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0xE PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x1C PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP POP POP POP POP PUSH2 0x745 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD DUP2 PUSH1 0x40 ADD MLOAD GT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA606CA7800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x80 ADD MLOAD GT ISZERO PUSH2 0x3EB JUMPI PUSH1 0x40 MLOAD PUSH32 0xB581346100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xC0 ADD MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xA0 ADD MLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH32 0xEFF2C18200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x485 DUP3 PUSH2 0x45C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x495 DUP2 PUSH2 0x47B JUMP JUMPDEST DUP2 EQ PUSH2 0x49F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4B0 DUP2 PUSH2 0x48C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x500 DUP3 PUSH2 0x4BA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x531 PUSH2 0x44F JUMP JUMPDEST SWAP1 POP PUSH2 0x53D DUP3 DUP3 PUSH2 0x4F7 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x554 DUP2 PUSH2 0x542 JUMP JUMPDEST DUP2 EQ PUSH2 0x55E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x56F DUP2 PUSH2 0x54B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x575 JUMP JUMPDEST DUP2 EQ PUSH2 0x5A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5B2 DUP2 PUSH2 0x58E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x5B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x5DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5EB DUP2 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x607 JUMPI PUSH2 0x606 PUSH2 0x4B6 JUMP JUMPDEST JUMPDEST PUSH2 0x612 PUSH2 0x100 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x621 DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x634 DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x648 DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x65C DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x670 DUP5 DUP3 DUP6 ADD PUSH2 0x561 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x684 DUP5 DUP3 DUP6 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x698 DUP5 DUP3 DUP6 ADD PUSH2 0x5A4 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x6AC DUP5 DUP3 DUP6 ADD PUSH2 0x5DD JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x160 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D1 JUMPI PUSH2 0x6D0 PUSH2 0x458 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x6DE DUP8 DUP3 DUP9 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x6EF DUP8 DUP3 DUP9 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x700 DUP8 DUP3 DUP9 ADD PUSH2 0x4A2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x711 DUP8 DUP3 DUP9 ADD PUSH2 0x5F1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x726 DUP2 PUSH2 0x47B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x73F PUSH0 DUP4 ADD DUP5 PUSH2 0x71D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23C0 DUP1 PUSH2 0x752 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xED498FA8 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x2D9 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x4BB278F3 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x247 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x52D9E7E EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x184D69AB EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x18F JUMPI PUSH2 0x107 JUMP JUMPDEST CALLDATASIZE PUSH2 0x107 JUMPI PUSH2 0x105 CALLER CALLVALUE PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xD5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x3DF DUP3 DUP3 PUSH2 0x12B7 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2499A5330AB0979CC612135E7883EBC3CD5C9F7A8508F042540C34723348F632 DUP3 PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4A3 PUSH2 0x158E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x1597 JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x689 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x6FD JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD LT DUP1 ISZERO PUSH2 0x74A JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2BDC91AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x7A9 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH2 0x7BA DUP2 PUSH1 0x3 PUSH1 0x4 ADD SLOAD PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x616C9469DB50815AE0F1D0A020D9FC9060DA7C57F03559AFB0D4EBDAA0A3A05E PUSH1 0x3 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x86D SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x883 PUSH2 0x158E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x88F PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x8FB JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6247A84E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x97B CALLER PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA28 CALLER DUP3 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30C2341BA3F2142E78472F07DCF018A42044AE1C2C2E7CE867B327257F07EF2B DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA70 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP PUSH2 0xA84 PUSH2 0x158E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA8F PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB27 JUMPI PUSH0 PUSH1 0x11 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0x2069 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0xB99 JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD LT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDB PUSH2 0x1268 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCFD DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73F04AF9DCC582A923EC15D3EEA990FE34ADABFFF2879E28D44572E01A54ABB6 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD45 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP PUSH2 0xD59 PUSH2 0x158E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0xD6E PUSH0 PUSH2 0x18D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x1 PUSH1 0x11 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0x2069 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE63 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0xECF JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF18 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF29 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x3 DUP1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF88 CALLER ADDRESS PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19FE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xFD7 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFF5 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x10EF JUMPI PUSH0 PUSH1 0x3 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10ED CALLER DUP3 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27F83AF92B39768B17FE0C8D6922452702717EFB8626D97E7A754E0B27D4F6D2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x5 ADD SLOAD SUB PUSH2 0x1159 JUMPI PUSH0 SWAP1 POP PUSH2 0x11DF JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 DUP1 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11BE SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EC PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1265 DUP2 PUSH2 0x18D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1323 JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x1393 JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x13CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3840BC400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST GT ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH32 0x283452DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD70F35D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST GT ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A99681C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x154A JUMPI POP PUSH1 0x11 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x159F PUSH2 0x1A80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15BD PUSH2 0xE16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161C JUMPI PUSH2 0x15E0 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x165B SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP6 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP8 DUP10 PUSH2 0x16D2 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x258 TIMESTAMP PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x171D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x229D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP3 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1757 JUMPI POP DUP4 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH32 0xEDA12FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x17DB JUMPI SELFBALANCE DUP2 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1801 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1854 JUMPI PUSH2 0x1853 DUP2 PUSH2 0x1A87 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18D4 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188D SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1ACB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH2 0x19CF SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x19D9 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x19E7 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A7A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1ACB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1A99 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AEA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1B03 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B1E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B60 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1B6E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C10 PUSH2 0x1C0B PUSH2 0x1C06 DUP5 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 DUP3 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C32 DUP3 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C42 DUP2 PUSH2 0x1C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C62 DUP2 PUSH2 0x1C48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7A DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9A DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB5 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0A DUP2 PUSH2 0x1CF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1D25 PUSH0 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1D38 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1D4B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1D5E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1D71 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1D84 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1D97 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1DAA PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP13 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1E05 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1E12 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x1E1F PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1E2D PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1D10 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E44 DUP2 PUSH2 0x1B6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5D PUSH0 DUP4 ADD DUP5 PUSH2 0x1E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E6C DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E76 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E87 DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EAF DUP5 DUP3 DUP6 ADD PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECB PUSH0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x1ED5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1ED9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x1B6A JUMP JUMPDEST JUMPDEST PUSH2 0x1F71 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FCD DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD8 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2009 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2024 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2055 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x2062 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20A0 DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20B9 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x210E DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2119 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2129 JUMPI PUSH2 0x2128 PUSH2 0x20D7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 PUSH1 0x1F DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP PUSH2 0x2183 DUP3 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A5 DUP2 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7457686974656C6973746564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E0 PUSH1 0xE DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x21AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x220D DUP2 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2227 PUSH0 DUP4 ADD DUP10 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2234 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x2241 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x224E PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x225B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2268 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x227C DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP2 EQ PUSH2 0x2286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2297 DUP2 PUSH2 0x2273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B4 JUMPI PUSH2 0x22B3 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D2 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E3 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2305 PUSH0 DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP3 PUSH2 0x22F7 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2324 DUP3 PUSH2 0x22FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2341 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x234E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2368 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2375 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2382 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xEF971A7CEA222BF3ED048B44A9612AA1142BA9D2B023511839 0xA5 COINBASE MUL OR 0xC9 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "695:15212:13:-:0;;;3696:5;3663:38;;;;;;;;;;;;;;;;;;;;4556:426;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4713:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;4739:26:13::1;4756:8;4739:16;;;:26;;:::i;:::-;4820:18;4776:4;:22;;;:63;;;;;;;;;;;;;;;;;;4869:6;4849:4;:10;;;:27;;;;;;;;;;;;;;;;;;4899:1;4886:4;:10;;;:14;;;;;;;;;;;;;;;;;;4937:5;4925:4;:9;;;:17;;;;;;;;;;;;;;;;;;4967:8;4952:4;:12;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4556:426:::0;;;;695:15212;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;13564:299:13:-;13669:8;:16;;;13650:8;:16;;;:35;13646:65;;;13694:17;;;;;;;;;;;;;;13646:65;13740:8;:12;;;13725:8;:12;;;:27;13721:59;;;13761:19;;;;;;;;;;;;;;13721:59;13812:8;:12;;;13794:30;;:8;:14;;;:30;;;13790:66;;13833:23;;;;;;;;;;;;;;13790:66;13564:299;:::o;7:75:15:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:102;1009:6;1060:2;1056:7;1051:2;1044:5;1040:14;1036:28;1026:38;;968:102;;;:::o;1076:180::-;1124:77;1121:1;1114:88;1221:4;1218:1;1211:15;1245:4;1242:1;1235:15;1262:281;1345:27;1367:4;1345:27;:::i;:::-;1337:6;1333:40;1475:6;1463:10;1460:22;1439:18;1427:10;1424:34;1421:62;1418:88;;;1486:18;;:::i;:::-;1418:88;1526:10;1522:2;1515:22;1305:238;1262:281;;:::o;1549:129::-;1583:6;1610:20;;:::i;:::-;1600:30;;1639:33;1667:4;1659:6;1639:33;:::i;:::-;1549:129;;;:::o;1807:77::-;1844:7;1873:5;1862:16;;1807:77;;;:::o;1890:122::-;1963:24;1981:5;1963:24;:::i;:::-;1956:5;1953:35;1943:63;;2002:1;1999;1992:12;1943:63;1890:122;:::o;2018:143::-;2075:5;2106:6;2100:13;2091:22;;2122:33;2149:5;2122:33;:::i;:::-;2018:143;;;;:::o;2167:114::-;2204:7;2244:30;2237:5;2233:42;2222:53;;2167:114;;;:::o;2287:122::-;2360:24;2378:5;2360:24;:::i;:::-;2353:5;2350:35;2340:63;;2399:1;2396;2389:12;2340:63;2287:122;:::o;2415:143::-;2472:5;2503:6;2497:13;2488:22;;2519:33;2546:5;2519:33;:::i;:::-;2415:143;;;;:::o;2564:93::-;2600:7;2640:10;2633:5;2629:22;2618:33;;2564:93;;;:::o;2663:120::-;2735:23;2752:5;2735:23;:::i;:::-;2728:5;2725:34;2715:62;;2773:1;2770;2763:12;2715:62;2663:120;:::o;2789:141::-;2845:5;2876:6;2870:13;2861:22;;2892:32;2918:5;2892:32;:::i;:::-;2789:141;;;;:::o;2973:1673::-;3065:5;3109:6;3097:9;3092:3;3088:19;3084:32;3081:119;;;3119:79;;:::i;:::-;3081:119;3218:23;3234:6;3218:23;:::i;:::-;3209:32;;3308:1;3348:60;3404:3;3395:6;3384:9;3380:22;3348:60;:::i;:::-;3341:4;3334:5;3330:16;3323:86;3251:169;3482:2;3523:60;3579:3;3570:6;3559:9;3555:22;3523:60;:::i;:::-;3516:4;3509:5;3505:16;3498:86;3430:165;3657:2;3698:60;3754:3;3745:6;3734:9;3730:22;3698:60;:::i;:::-;3691:4;3684:5;3680:16;3673:86;3605:165;3828:2;3869:60;3925:3;3916:6;3905:9;3901:22;3869:60;:::i;:::-;3862:4;3855:5;3851:16;3844:86;3780:161;3999:3;4041:60;4097:3;4088:6;4077:9;4073:22;4041:60;:::i;:::-;4034:4;4027:5;4023:16;4016:86;3951:162;4173:3;4215:60;4271:3;4262:6;4251:9;4247:22;4215:60;:::i;:::-;4208:4;4201:5;4197:16;4190:86;4123:164;4345:3;4387:60;4443:3;4434:6;4423:9;4419:22;4387:60;:::i;:::-;4380:4;4373:5;4369:16;4362:86;4297:162;4526:3;4568:59;4623:3;4614:6;4603:9;4599:22;4568:59;:::i;:::-;4561:4;4554:5;4550:16;4543:85;4469:170;2973:1673;;;;:::o;4652:884::-;4781:6;4789;4797;4805;4854:3;4842:9;4833:7;4829:23;4825:33;4822:120;;;4861:79;;:::i;:::-;4822:120;4981:1;5006:64;5062:7;5053:6;5042:9;5038:22;5006:64;:::i;:::-;4996:74;;4952:128;5119:2;5145:64;5201:7;5192:6;5181:9;5177:22;5145:64;:::i;:::-;5135:74;;5090:129;5258:2;5284:64;5340:7;5331:6;5320:9;5316:22;5284:64;:::i;:::-;5274:74;;5229:129;5397:2;5423:96;5511:7;5502:6;5491:9;5487:22;5423:96;:::i;:::-;5413:106;;5368:161;4652:884;;;;;;;:::o;5542:118::-;5629:24;5647:5;5629:24;:::i;:::-;5624:3;5617:37;5542:118;;:::o;5666:222::-;5759:4;5797:2;5786:9;5782:18;5774:26;;5810:71;5878:1;5867:9;5863:17;5854:6;5810:71;:::i;:::-;5666:222;;;;:::o;695:15212:13:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1705": {
									"entryPoint": null,
									"id": 1705,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_747": {
									"entryPoint": 6859,
									"id": 747,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5527,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_liquify_2415": {
									"entryPoint": 5728,
									"id": 2415,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1061": {
									"entryPoint": 6784,
									"id": 1061,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 5518,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 4712,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_prevalidatePurchase_2255": {
									"entryPoint": 4791,
									"id": 2255,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_purchase_1815": {
									"entryPoint": 973,
									"id": 1815,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1048": {
									"entryPoint": 6791,
									"id": 1048,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_tokensForLiquidity_2339": {
									"entryPoint": 6554,
									"id": 2339,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_tokensForPresale_2353": {
									"entryPoint": 6622,
									"id": 2353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 6361,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_weiForLiquidity_2369": {
									"entryPoint": 5662,
									"id": 2369,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@addToWhitelist_2138": {
									"entryPoint": 3440,
									"id": 2138,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@cancel_2094": {
									"entryPoint": 4076,
									"id": 2094,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@claim_1884": {
									"entryPoint": 2182,
									"id": 1884,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@contributions_1591": {
									"entryPoint": 1643,
									"id": 1591,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1782": {
									"entryPoint": 3674,
									"id": 1782,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@finalize_2033": {
									"entryPoint": 1664,
									"id": 2033,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isWhitelistEnabled_1599": {
									"entryPoint": 1625,
									"id": 1599,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3606,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pool_1595": {
									"entryPoint": 1227,
									"id": 1595,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refund_1938": {
									"entryPoint": 2860,
									"id": 1938,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhitelist_2169": {
									"entryPoint": 2695,
									"id": 2169,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 3421,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 6654,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 6234,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@sendValue_847": {
									"entryPoint": 6036,
									"id": 847,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setWhitelistEnabled_2107": {
									"entryPoint": 1191,
									"id": 2107,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 4580,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userTokens_2322": {
									"entryPoint": 4420,
									"id": 2322,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@whitelist_1603": {
									"entryPoint": 3645,
									"id": 1603,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 7986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 7075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 8861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IUniswapV2Router02_$1509_to_t_address_fromStack": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_PresaleOptions_$1563_memory_ptr_to_t_struct$_PresaleOptions_$1563_memory_ptr_fromStack": {
									"entryPoint": 7440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint112_to_t_uint112": {
									"entryPoint": 7395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint32_to_t_uint32": {
									"entryPoint": 7425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380_t_contract$_IUniswapV2Router02_$1509_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__fromStack_reversed": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 10,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7864,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8258,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint112": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint32": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IUniswapV2Router02_$1509_to_t_address": {
									"entryPoint": 7240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7191,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7889,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 8951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17075:15",
										"nodeType": "YulBlock",
										"src": "0:17075:15",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:15",
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nativeSrc": "57:19:15",
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:15",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nativeSrc": "67:9:15",
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:15",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:15",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nativeSrc": "177:28:15",
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:15",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:15",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nativeSrc": "187:12:15",
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nativeSrc": "187:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nativeSrc": "300:28:15",
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:15",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:15",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nativeSrc": "310:12:15",
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nativeSrc": "310:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nativeSrc": "376:48:15",
													"nodeType": "YulBlock",
													"src": "376:48:15",
													"statements": [
														{
															"nativeSrc": "386:32:15",
															"nodeType": "YulAssignment",
															"src": "386:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "411:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "411:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "404:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "404:6:15"
																		},
																		"nativeSrc": "404:13:15",
																		"nodeType": "YulFunctionCall",
																		"src": "404:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "397:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "397:6:15"
																},
																"nativeSrc": "397:21:15",
																"nodeType": "YulFunctionCall",
																"src": "397:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "386:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "386:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "334:90:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "358:5:15",
														"nodeType": "YulTypedName",
														"src": "358:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "368:7:15",
														"nodeType": "YulTypedName",
														"src": "368:7:15",
														"type": ""
													}
												],
												"src": "334:90:15"
											},
											{
												"body": {
													"nativeSrc": "470:76:15",
													"nodeType": "YulBlock",
													"src": "470:76:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "524:16:15",
																"nodeType": "YulBlock",
																"src": "524:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "533:1:15",
																					"nodeType": "YulLiteral",
																					"src": "533:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "536:1:15",
																					"nodeType": "YulLiteral",
																					"src": "536:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "526:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "526:6:15"
																			},
																			"nativeSrc": "526:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "526:12:15"
																		},
																		"nativeSrc": "526:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "526:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "493:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "493:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "515:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "515:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "500:14:15",
																					"nodeType": "YulIdentifier",
																					"src": "500:14:15"
																				},
																				"nativeSrc": "500:21:15",
																				"nodeType": "YulFunctionCall",
																				"src": "500:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "490:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "490:2:15"
																		},
																		"nativeSrc": "490:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "490:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "483:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "483:6:15"
																},
																"nativeSrc": "483:40:15",
																"nodeType": "YulFunctionCall",
																"src": "483:40:15"
															},
															"nativeSrc": "480:60:15",
															"nodeType": "YulIf",
															"src": "480:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "430:116:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:15",
														"nodeType": "YulTypedName",
														"src": "463:5:15",
														"type": ""
													}
												],
												"src": "430:116:15"
											},
											{
												"body": {
													"nativeSrc": "601:84:15",
													"nodeType": "YulBlock",
													"src": "601:84:15",
													"statements": [
														{
															"nativeSrc": "611:29:15",
															"nodeType": "YulAssignment",
															"src": "611:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "620:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "620:12:15"
																},
																"nativeSrc": "620:20:15",
																"nodeType": "YulFunctionCall",
																"src": "620:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "611:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "611:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "673:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "673:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "649:23:15",
																	"nodeType": "YulIdentifier",
																	"src": "649:23:15"
																},
																"nativeSrc": "649:30:15",
																"nodeType": "YulFunctionCall",
																"src": "649:30:15"
															},
															"nativeSrc": "649:30:15",
															"nodeType": "YulExpressionStatement",
															"src": "649:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "552:133:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "579:6:15",
														"nodeType": "YulTypedName",
														"src": "579:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "587:3:15",
														"nodeType": "YulTypedName",
														"src": "587:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "595:5:15",
														"nodeType": "YulTypedName",
														"src": "595:5:15",
														"type": ""
													}
												],
												"src": "552:133:15"
											},
											{
												"body": {
													"nativeSrc": "754:260:15",
													"nodeType": "YulBlock",
													"src": "754:260:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "800:83:15",
																"nodeType": "YulBlock",
																"src": "800:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "802:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "802:77:15"
																			},
																			"nativeSrc": "802:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "802:79:15"
																		},
																		"nativeSrc": "802:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "802:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "775:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "775:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "784:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "784:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "771:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "771:3:15"
																		},
																		"nativeSrc": "771:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "771:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "796:2:15",
																		"nodeType": "YulLiteral",
																		"src": "796:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "767:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:15"
																},
																"nativeSrc": "767:32:15",
																"nodeType": "YulFunctionCall",
																"src": "767:32:15"
															},
															"nativeSrc": "764:119:15",
															"nodeType": "YulIf",
															"src": "764:119:15"
														},
														{
															"nativeSrc": "893:114:15",
															"nodeType": "YulBlock",
															"src": "893:114:15",
															"statements": [
																{
																	"nativeSrc": "908:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "908:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "922:1:15",
																		"nodeType": "YulLiteral",
																		"src": "922:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "912:6:15",
																			"nodeType": "YulTypedName",
																			"src": "912:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "937:60:15",
																	"nodeType": "YulAssignment",
																	"src": "937:60:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "969:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "969:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "980:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "980:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "965:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "965:3:15"
																				},
																				"nativeSrc": "965:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "965:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "989:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "989:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "947:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "947:17:15"
																		},
																		"nativeSrc": "947:50:15",
																		"nodeType": "YulFunctionCall",
																		"src": "947:50:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "937:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "937:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nativeSrc": "691:323:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "724:9:15",
														"nodeType": "YulTypedName",
														"src": "724:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "735:7:15",
														"nodeType": "YulTypedName",
														"src": "735:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "747:6:15",
														"nodeType": "YulTypedName",
														"src": "747:6:15",
														"type": ""
													}
												],
												"src": "691:323:15"
											},
											{
												"body": {
													"nativeSrc": "1065:81:15",
													"nodeType": "YulBlock",
													"src": "1065:81:15",
													"statements": [
														{
															"nativeSrc": "1075:65:15",
															"nodeType": "YulAssignment",
															"src": "1075:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1090:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1090:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1097:42:15",
																		"nodeType": "YulLiteral",
																		"src": "1097:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1086:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1086:3:15"
																},
																"nativeSrc": "1086:54:15",
																"nodeType": "YulFunctionCall",
																"src": "1086:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1075:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "1075:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1020:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1047:5:15",
														"nodeType": "YulTypedName",
														"src": "1047:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1057:7:15",
														"nodeType": "YulTypedName",
														"src": "1057:7:15",
														"type": ""
													}
												],
												"src": "1020:126:15"
											},
											{
												"body": {
													"nativeSrc": "1184:28:15",
													"nodeType": "YulBlock",
													"src": "1184:28:15",
													"statements": [
														{
															"nativeSrc": "1194:12:15",
															"nodeType": "YulAssignment",
															"src": "1194:12:15",
															"value": {
																"name": "value",
																"nativeSrc": "1201:5:15",
																"nodeType": "YulIdentifier",
																"src": "1201:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1194:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "1194:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1152:60:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1170:5:15",
														"nodeType": "YulTypedName",
														"src": "1170:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1180:3:15",
														"nodeType": "YulTypedName",
														"src": "1180:3:15",
														"type": ""
													}
												],
												"src": "1152:60:15"
											},
											{
												"body": {
													"nativeSrc": "1278:82:15",
													"nodeType": "YulBlock",
													"src": "1278:82:15",
													"statements": [
														{
															"nativeSrc": "1288:66:15",
															"nodeType": "YulAssignment",
															"src": "1288:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1346:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "1346:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "1328:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "1328:17:15"
																				},
																				"nativeSrc": "1328:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "1328:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1319:8:15",
																			"nodeType": "YulIdentifier",
																			"src": "1319:8:15"
																		},
																		"nativeSrc": "1319:34:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1319:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1301:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "1301:17:15"
																},
																"nativeSrc": "1301:53:15",
																"nodeType": "YulFunctionCall",
																"src": "1301:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1288:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1288:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "1218:142:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1258:5:15",
														"nodeType": "YulTypedName",
														"src": "1258:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1268:9:15",
														"nodeType": "YulTypedName",
														"src": "1268:9:15",
														"type": ""
													}
												],
												"src": "1218:142:15"
											},
											{
												"body": {
													"nativeSrc": "1426:66:15",
													"nodeType": "YulBlock",
													"src": "1426:66:15",
													"statements": [
														{
															"nativeSrc": "1436:50:15",
															"nodeType": "YulAssignment",
															"src": "1436:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1480:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1480:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "1449:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "1449:30:15"
																},
																"nativeSrc": "1449:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1449:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1436:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1436:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "1366:126:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1406:5:15",
														"nodeType": "YulTypedName",
														"src": "1406:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1416:9:15",
														"nodeType": "YulTypedName",
														"src": "1416:9:15",
														"type": ""
													}
												],
												"src": "1366:126:15"
											},
											{
												"body": {
													"nativeSrc": "1572:66:15",
													"nodeType": "YulBlock",
													"src": "1572:66:15",
													"statements": [
														{
															"nativeSrc": "1582:50:15",
															"nodeType": "YulAssignment",
															"src": "1582:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1626:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1626:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1595:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "1595:30:15"
																},
																"nativeSrc": "1595:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1595:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1582:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1582:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "1498:140:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1552:5:15",
														"nodeType": "YulTypedName",
														"src": "1552:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1562:9:15",
														"nodeType": "YulTypedName",
														"src": "1562:9:15",
														"type": ""
													}
												],
												"src": "1498:140:15"
											},
											{
												"body": {
													"nativeSrc": "1723:80:15",
													"nodeType": "YulBlock",
													"src": "1723:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1740:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "1740:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1790:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "1790:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "1745:44:15",
																			"nodeType": "YulIdentifier",
																			"src": "1745:44:15"
																		},
																		"nativeSrc": "1745:51:15",
																		"nodeType": "YulFunctionCall",
																		"src": "1745:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1733:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:15"
																},
																"nativeSrc": "1733:64:15",
																"nodeType": "YulFunctionCall",
																"src": "1733:64:15"
															},
															"nativeSrc": "1733:64:15",
															"nodeType": "YulExpressionStatement",
															"src": "1733:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "1644:159:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1711:5:15",
														"nodeType": "YulTypedName",
														"src": "1711:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1718:3:15",
														"nodeType": "YulTypedName",
														"src": "1718:3:15",
														"type": ""
													}
												],
												"src": "1644:159:15"
											},
											{
												"body": {
													"nativeSrc": "1896:66:15",
													"nodeType": "YulBlock",
													"src": "1896:66:15",
													"statements": [
														{
															"nativeSrc": "1906:50:15",
															"nodeType": "YulAssignment",
															"src": "1906:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1950:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "1919:30:15",
																	"nodeType": "YulIdentifier",
																	"src": "1919:30:15"
																},
																"nativeSrc": "1919:37:15",
																"nodeType": "YulFunctionCall",
																"src": "1919:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1906:9:15",
																	"nodeType": "YulIdentifier",
																	"src": "1906:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IUniswapV2Router02_$1509_to_t_address",
												"nativeSrc": "1809:153:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1876:5:15",
														"nodeType": "YulTypedName",
														"src": "1876:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1886:9:15",
														"nodeType": "YulTypedName",
														"src": "1886:9:15",
														"type": ""
													}
												],
												"src": "1809:153:15"
											},
											{
												"body": {
													"nativeSrc": "2060:93:15",
													"nodeType": "YulBlock",
													"src": "2060:93:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2077:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2077:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2140:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2140:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IUniswapV2Router02_$1509_to_t_address",
																			"nativeSrc": "2082:57:15",
																			"nodeType": "YulIdentifier",
																			"src": "2082:57:15"
																		},
																		"nativeSrc": "2082:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2082:64:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2070:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2070:6:15"
																},
																"nativeSrc": "2070:77:15",
																"nodeType": "YulFunctionCall",
																"src": "2070:77:15"
															},
															"nativeSrc": "2070:77:15",
															"nodeType": "YulExpressionStatement",
															"src": "2070:77:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IUniswapV2Router02_$1509_to_t_address_fromStack",
												"nativeSrc": "1968:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2048:5:15",
														"nodeType": "YulTypedName",
														"src": "2048:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2055:3:15",
														"nodeType": "YulTypedName",
														"src": "2055:3:15",
														"type": ""
													}
												],
												"src": "1968:185:15"
											},
											{
												"body": {
													"nativeSrc": "2204:32:15",
													"nodeType": "YulBlock",
													"src": "2204:32:15",
													"statements": [
														{
															"nativeSrc": "2214:16:15",
															"nodeType": "YulAssignment",
															"src": "2214:16:15",
															"value": {
																"name": "value",
																"nativeSrc": "2225:5:15",
																"nodeType": "YulIdentifier",
																"src": "2225:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2214:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2214:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2159:77:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2186:5:15",
														"nodeType": "YulTypedName",
														"src": "2186:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2196:7:15",
														"nodeType": "YulTypedName",
														"src": "2196:7:15",
														"type": ""
													}
												],
												"src": "2159:77:15"
											},
											{
												"body": {
													"nativeSrc": "2307:53:15",
													"nodeType": "YulBlock",
													"src": "2307:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2324:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2324:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2347:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2347:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2329:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "2329:17:15"
																		},
																		"nativeSrc": "2329:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2317:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2317:6:15"
																},
																"nativeSrc": "2317:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2317:37:15"
															},
															"nativeSrc": "2317:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "2317:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2242:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2295:5:15",
														"nodeType": "YulTypedName",
														"src": "2295:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2302:3:15",
														"nodeType": "YulTypedName",
														"src": "2302:3:15",
														"type": ""
													}
												],
												"src": "2242:118:15"
											},
											{
												"body": {
													"nativeSrc": "2411:51:15",
													"nodeType": "YulBlock",
													"src": "2411:51:15",
													"statements": [
														{
															"nativeSrc": "2421:35:15",
															"nodeType": "YulAssignment",
															"src": "2421:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2450:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2450:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2432:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "2432:17:15"
																},
																"nativeSrc": "2432:24:15",
																"nodeType": "YulFunctionCall",
																"src": "2432:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2421:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2421:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2366:96:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2393:5:15",
														"nodeType": "YulTypedName",
														"src": "2393:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2403:7:15",
														"nodeType": "YulTypedName",
														"src": "2403:7:15",
														"type": ""
													}
												],
												"src": "2366:96:15"
											},
											{
												"body": {
													"nativeSrc": "2533:53:15",
													"nodeType": "YulBlock",
													"src": "2533:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2550:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2550:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2573:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2573:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2555:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "2555:17:15"
																		},
																		"nativeSrc": "2555:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2555:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2543:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:15"
																},
																"nativeSrc": "2543:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2543:37:15"
															},
															"nativeSrc": "2543:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "2543:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2468:118:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2521:5:15",
														"nodeType": "YulTypedName",
														"src": "2521:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2528:3:15",
														"nodeType": "YulTypedName",
														"src": "2528:3:15",
														"type": ""
													}
												],
												"src": "2468:118:15"
											},
											{
												"body": {
													"nativeSrc": "2635:43:15",
													"nodeType": "YulBlock",
													"src": "2635:43:15",
													"statements": [
														{
															"nativeSrc": "2645:27:15",
															"nodeType": "YulAssignment",
															"src": "2645:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2660:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2660:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2667:4:15",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:15",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2656:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:15"
																},
																"nativeSrc": "2656:16:15",
																"nodeType": "YulFunctionCall",
																"src": "2656:16:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2645:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2645:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2592:86:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2617:5:15",
														"nodeType": "YulTypedName",
														"src": "2617:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2627:7:15",
														"nodeType": "YulTypedName",
														"src": "2627:7:15",
														"type": ""
													}
												],
												"src": "2592:86:15"
											},
											{
												"body": {
													"nativeSrc": "2745:51:15",
													"nodeType": "YulBlock",
													"src": "2745:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2762:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2762:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2783:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2783:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "2767:15:15",
																			"nodeType": "YulIdentifier",
																			"src": "2767:15:15"
																		},
																		"nativeSrc": "2767:22:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2755:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2755:6:15"
																},
																"nativeSrc": "2755:35:15",
																"nodeType": "YulFunctionCall",
																"src": "2755:35:15"
															},
															"nativeSrc": "2755:35:15",
															"nodeType": "YulExpressionStatement",
															"src": "2755:35:15"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "2684:112:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2733:5:15",
														"nodeType": "YulTypedName",
														"src": "2733:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2740:3:15",
														"nodeType": "YulTypedName",
														"src": "2740:3:15",
														"type": ""
													}
												],
												"src": "2684:112:15"
											},
											{
												"body": {
													"nativeSrc": "2857:53:15",
													"nodeType": "YulBlock",
													"src": "2857:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2874:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "2874:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2897:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "2897:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2879:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "2879:17:15"
																		},
																		"nativeSrc": "2879:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "2879:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2867:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:15"
																},
																"nativeSrc": "2867:37:15",
																"nodeType": "YulFunctionCall",
																"src": "2867:37:15"
															},
															"nativeSrc": "2867:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "2867:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2802:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2845:5:15",
														"nodeType": "YulTypedName",
														"src": "2845:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2852:3:15",
														"nodeType": "YulTypedName",
														"src": "2852:3:15",
														"type": ""
													}
												],
												"src": "2802:108:15"
											},
											{
												"body": {
													"nativeSrc": "2961:69:15",
													"nodeType": "YulBlock",
													"src": "2961:69:15",
													"statements": [
														{
															"nativeSrc": "2971:53:15",
															"nodeType": "YulAssignment",
															"src": "2971:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2986:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "2986:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2993:30:15",
																		"nodeType": "YulLiteral",
																		"src": "2993:30:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2982:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "2982:3:15"
																},
																"nativeSrc": "2982:42:15",
																"nodeType": "YulFunctionCall",
																"src": "2982:42:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2971:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "2971:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint112",
												"nativeSrc": "2916:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2943:5:15",
														"nodeType": "YulTypedName",
														"src": "2943:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2953:7:15",
														"nodeType": "YulTypedName",
														"src": "2953:7:15",
														"type": ""
													}
												],
												"src": "2916:114:15"
											},
											{
												"body": {
													"nativeSrc": "3091:53:15",
													"nodeType": "YulBlock",
													"src": "3091:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3108:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3108:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3131:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3131:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint112",
																			"nativeSrc": "3113:17:15",
																			"nodeType": "YulIdentifier",
																			"src": "3113:17:15"
																		},
																		"nativeSrc": "3113:24:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3101:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:15"
																},
																"nativeSrc": "3101:37:15",
																"nodeType": "YulFunctionCall",
																"src": "3101:37:15"
															},
															"nativeSrc": "3101:37:15",
															"nodeType": "YulExpressionStatement",
															"src": "3101:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint112_to_t_uint112",
												"nativeSrc": "3036:108:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3079:5:15",
														"nodeType": "YulTypedName",
														"src": "3079:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3086:3:15",
														"nodeType": "YulTypedName",
														"src": "3086:3:15",
														"type": ""
													}
												],
												"src": "3036:108:15"
											},
											{
												"body": {
													"nativeSrc": "3194:49:15",
													"nodeType": "YulBlock",
													"src": "3194:49:15",
													"statements": [
														{
															"nativeSrc": "3204:33:15",
															"nodeType": "YulAssignment",
															"src": "3204:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3219:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "3219:5:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3226:10:15",
																		"nodeType": "YulLiteral",
																		"src": "3226:10:15",
																		"type": "",
																		"value": "0xffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3215:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:15"
																},
																"nativeSrc": "3215:22:15",
																"nodeType": "YulFunctionCall",
																"src": "3215:22:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3204:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "3204:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint32",
												"nativeSrc": "3150:93:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3176:5:15",
														"nodeType": "YulTypedName",
														"src": "3176:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3186:7:15",
														"nodeType": "YulTypedName",
														"src": "3186:7:15",
														"type": ""
													}
												],
												"src": "3150:93:15"
											},
											{
												"body": {
													"nativeSrc": "3302:52:15",
													"nodeType": "YulBlock",
													"src": "3302:52:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3319:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3319:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3341:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "3341:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint32",
																			"nativeSrc": "3324:16:15",
																			"nodeType": "YulIdentifier",
																			"src": "3324:16:15"
																		},
																		"nativeSrc": "3324:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3324:23:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3312:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:15"
																},
																"nativeSrc": "3312:36:15",
																"nodeType": "YulFunctionCall",
																"src": "3312:36:15"
															},
															"nativeSrc": "3312:36:15",
															"nodeType": "YulExpressionStatement",
															"src": "3312:36:15"
														}
													]
												},
												"name": "abi_encode_t_uint32_to_t_uint32",
												"nativeSrc": "3249:105:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3290:5:15",
														"nodeType": "YulTypedName",
														"src": "3290:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3297:3:15",
														"nodeType": "YulTypedName",
														"src": "3297:3:15",
														"type": ""
													}
												],
												"src": "3249:105:15"
											},
											{
												"body": {
													"nativeSrc": "3560:1455:15",
													"nodeType": "YulBlock",
													"src": "3560:1455:15",
													"statements": [
														{
															"nativeSrc": "3570:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "3570:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3586:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "3586:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3591:6:15",
																		"nodeType": "YulLiteral",
																		"src": "3591:6:15",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3582:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "3582:3:15"
																},
																"nativeSrc": "3582:16:15",
																"nodeType": "YulFunctionCall",
																"src": "3582:16:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3574:4:15",
																	"nodeType": "YulTypedName",
																	"src": "3574:4:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3608:172:15",
															"nodeType": "YulBlock",
															"src": "3608:172:15",
															"statements": [
																{
																	"nativeSrc": "3651:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3651:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3681:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3681:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3688:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3688:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3677:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3677:3:15"
																				},
																				"nativeSrc": "3677:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3677:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3671:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3671:5:15"
																		},
																		"nativeSrc": "3671:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3671:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3655:12:15",
																			"nodeType": "YulTypedName",
																			"src": "3655:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3741:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3741:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3759:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3759:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3764:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3764:4:15",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3755:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3755:3:15"
																				},
																				"nativeSrc": "3755:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3755:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3707:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "3707:33:15"
																		},
																		"nativeSrc": "3707:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3707:63:15"
																	},
																	"nativeSrc": "3707:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3707:63:15"
																}
															]
														},
														{
															"nativeSrc": "3790:167:15",
															"nodeType": "YulBlock",
															"src": "3790:167:15",
															"statements": [
																{
																	"nativeSrc": "3828:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3828:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3858:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "3858:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3865:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3865:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3854:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3854:3:15"
																				},
																				"nativeSrc": "3854:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3854:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3848:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "3848:5:15"
																		},
																		"nativeSrc": "3848:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3848:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3832:12:15",
																			"nodeType": "YulTypedName",
																			"src": "3832:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3918:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "3918:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3936:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "3936:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3941:4:15",
																						"nodeType": "YulLiteral",
																						"src": "3941:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3932:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "3932:3:15"
																				},
																				"nativeSrc": "3932:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "3932:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3884:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "3884:33:15"
																		},
																		"nativeSrc": "3884:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "3884:63:15"
																	},
																	"nativeSrc": "3884:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "3884:63:15"
																}
															]
														},
														{
															"nativeSrc": "3967:167:15",
															"nodeType": "YulBlock",
															"src": "3967:167:15",
															"statements": [
																{
																	"nativeSrc": "4005:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4005:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4035:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4035:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4042:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4042:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4031:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4031:3:15"
																				},
																				"nativeSrc": "4031:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4031:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4025:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4025:5:15"
																		},
																		"nativeSrc": "4025:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4025:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4009:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4009:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4095:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4095:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4113:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4113:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4118:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4118:4:15",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4109:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4109:3:15"
																				},
																				"nativeSrc": "4109:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4109:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4061:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "4061:33:15"
																		},
																		"nativeSrc": "4061:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4061:63:15"
																	},
																	"nativeSrc": "4061:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4061:63:15"
																}
															]
														},
														{
															"nativeSrc": "4144:163:15",
															"nodeType": "YulBlock",
															"src": "4144:163:15",
															"statements": [
																{
																	"nativeSrc": "4178:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4178:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4208:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4208:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4215:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4215:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:15"
																				},
																				"nativeSrc": "4204:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4198:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4198:5:15"
																		},
																		"nativeSrc": "4198:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4198:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4182:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4182:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4268:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4268:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4286:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4286:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4291:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4291:4:15",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4282:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4282:3:15"
																				},
																				"nativeSrc": "4282:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4282:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4234:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "4234:33:15"
																		},
																		"nativeSrc": "4234:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4234:63:15"
																	},
																	"nativeSrc": "4234:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4234:63:15"
																}
															]
														},
														{
															"nativeSrc": "4317:163:15",
															"nodeType": "YulBlock",
															"src": "4317:163:15",
															"statements": [
																{
																	"nativeSrc": "4351:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4351:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4381:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4381:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4388:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4388:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4377:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4377:3:15"
																				},
																				"nativeSrc": "4377:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4377:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4371:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4371:5:15"
																		},
																		"nativeSrc": "4371:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4371:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4355:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4355:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4441:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4441:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4459:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4459:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4464:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4464:4:15",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4455:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4455:3:15"
																				},
																				"nativeSrc": "4455:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4455:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4407:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "4407:33:15"
																		},
																		"nativeSrc": "4407:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4407:63:15"
																	},
																	"nativeSrc": "4407:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4407:63:15"
																}
															]
														},
														{
															"nativeSrc": "4490:165:15",
															"nodeType": "YulBlock",
															"src": "4490:165:15",
															"statements": [
																{
																	"nativeSrc": "4526:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4526:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4556:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4556:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4563:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4563:4:15",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4552:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4552:3:15"
																				},
																				"nativeSrc": "4552:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4552:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4546:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4546:5:15"
																		},
																		"nativeSrc": "4546:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4546:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4530:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4530:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4616:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4616:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4634:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4634:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4639:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4639:4:15",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4630:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4630:3:15"
																				},
																				"nativeSrc": "4630:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4630:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint112_to_t_uint112",
																			"nativeSrc": "4582:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "4582:33:15"
																		},
																		"nativeSrc": "4582:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4582:63:15"
																	},
																	"nativeSrc": "4582:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4582:63:15"
																}
															]
														},
														{
															"nativeSrc": "4665:163:15",
															"nodeType": "YulBlock",
															"src": "4665:163:15",
															"statements": [
																{
																	"nativeSrc": "4699:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4699:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4729:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4729:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4736:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4736:4:15",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4725:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4725:3:15"
																				},
																				"nativeSrc": "4725:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4725:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4719:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4719:5:15"
																		},
																		"nativeSrc": "4719:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4719:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4703:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4703:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4789:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4789:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4807:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4807:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4812:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4812:4:15",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4803:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4803:3:15"
																				},
																				"nativeSrc": "4803:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4803:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint112_to_t_uint112",
																			"nativeSrc": "4755:33:15",
																			"nodeType": "YulIdentifier",
																			"src": "4755:33:15"
																		},
																		"nativeSrc": "4755:63:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4755:63:15"
																	},
																	"nativeSrc": "4755:63:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4755:63:15"
																}
															]
														},
														{
															"nativeSrc": "4838:170:15",
															"nodeType": "YulBlock",
															"src": "4838:170:15",
															"statements": [
																{
																	"nativeSrc": "4881:43:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4881:43:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4911:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "4911:5:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4918:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4918:4:15",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4907:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4907:3:15"
																				},
																				"nativeSrc": "4907:16:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4907:16:15"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4901:5:15",
																			"nodeType": "YulIdentifier",
																			"src": "4901:5:15"
																		},
																		"nativeSrc": "4901:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4901:23:15"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4885:12:15",
																			"nodeType": "YulTypedName",
																			"src": "4885:12:15",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4969:12:15",
																				"nodeType": "YulIdentifier",
																				"src": "4969:12:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4987:3:15",
																						"nodeType": "YulIdentifier",
																						"src": "4987:3:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4992:4:15",
																						"nodeType": "YulLiteral",
																						"src": "4992:4:15",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4983:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "4983:3:15"
																				},
																				"nativeSrc": "4983:14:15",
																				"nodeType": "YulFunctionCall",
																				"src": "4983:14:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint32_to_t_uint32",
																			"nativeSrc": "4937:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "4937:31:15"
																		},
																		"nativeSrc": "4937:61:15",
																		"nodeType": "YulFunctionCall",
																		"src": "4937:61:15"
																	},
																	"nativeSrc": "4937:61:15",
																	"nodeType": "YulExpressionStatement",
																	"src": "4937:61:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_PresaleOptions_$1563_memory_ptr_to_t_struct$_PresaleOptions_$1563_memory_ptr_fromStack",
												"nativeSrc": "3430:1585:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3547:5:15",
														"nodeType": "YulTypedName",
														"src": "3547:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3554:3:15",
														"nodeType": "YulTypedName",
														"src": "3554:3:15",
														"type": ""
													}
												],
												"src": "3430:1585:15"
											},
											{
												"body": {
													"nativeSrc": "5444:887:15",
													"nodeType": "YulBlock",
													"src": "5444:887:15",
													"statements": [
														{
															"nativeSrc": "5454:27:15",
															"nodeType": "YulAssignment",
															"src": "5454:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5466:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "5466:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5477:3:15",
																		"nodeType": "YulLiteral",
																		"src": "5477:3:15",
																		"type": "",
																		"value": "512"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5462:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "5462:3:15"
																},
																"nativeSrc": "5462:19:15",
																"nodeType": "YulFunctionCall",
																"src": "5462:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5454:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "5454:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5549:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5549:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5562:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5562:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5573:1:15",
																				"nodeType": "YulLiteral",
																				"src": "5573:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5558:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5558:3:15"
																		},
																		"nativeSrc": "5558:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5558:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "5491:57:15",
																	"nodeType": "YulIdentifier",
																	"src": "5491:57:15"
																},
																"nativeSrc": "5491:85:15",
																"nodeType": "YulFunctionCall",
																"src": "5491:85:15"
															},
															"nativeSrc": "5491:85:15",
															"nodeType": "YulExpressionStatement",
															"src": "5491:85:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5657:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5657:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5670:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5670:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5681:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5681:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5666:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5666:3:15"
																		},
																		"nativeSrc": "5666:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5666:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IUniswapV2Router02_$1509_to_t_address_fromStack",
																	"nativeSrc": "5586:70:15",
																	"nodeType": "YulIdentifier",
																	"src": "5586:70:15"
																},
																"nativeSrc": "5586:99:15",
																"nodeType": "YulFunctionCall",
																"src": "5586:99:15"
															},
															"nativeSrc": "5586:99:15",
															"nodeType": "YulExpressionStatement",
															"src": "5586:99:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "5739:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5739:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5752:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5752:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5763:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5763:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5748:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5748:3:15"
																		},
																		"nativeSrc": "5748:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5748:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5695:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5695:43:15"
																},
																"nativeSrc": "5695:72:15",
																"nodeType": "YulFunctionCall",
																"src": "5695:72:15"
															},
															"nativeSrc": "5695:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "5695:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "5821:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5821:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5834:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5834:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5845:2:15",
																				"nodeType": "YulLiteral",
																				"src": "5845:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5830:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5830:3:15"
																		},
																		"nativeSrc": "5830:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5830:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5777:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5777:43:15"
																},
																"nativeSrc": "5777:72:15",
																"nodeType": "YulFunctionCall",
																"src": "5777:72:15"
															},
															"nativeSrc": "5777:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "5777:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "5903:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5903:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5916:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5916:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5927:3:15",
																				"nodeType": "YulLiteral",
																				"src": "5927:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5912:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5912:3:15"
																		},
																		"nativeSrc": "5912:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5912:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5859:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5859:43:15"
																},
																"nativeSrc": "5859:73:15",
																"nodeType": "YulFunctionCall",
																"src": "5859:73:15"
															},
															"nativeSrc": "5859:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "5859:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "5986:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "5986:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5999:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "5999:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6010:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6010:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5995:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:15"
																		},
																		"nativeSrc": "5995:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "5995:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5942:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "5942:43:15"
																},
																"nativeSrc": "5942:73:15",
																"nodeType": "YulFunctionCall",
																"src": "5942:73:15"
															},
															"nativeSrc": "5942:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "5942:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "6069:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6069:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6082:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6082:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6093:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6093:3:15",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6078:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6078:3:15"
																		},
																		"nativeSrc": "6078:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6078:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6025:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "6025:43:15"
																},
																"nativeSrc": "6025:73:15",
																"nodeType": "YulFunctionCall",
																"src": "6025:73:15"
															},
															"nativeSrc": "6025:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "6025:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nativeSrc": "6148:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6148:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6161:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6161:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6172:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6172:3:15",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6157:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:15"
																		},
																		"nativeSrc": "6157:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6108:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "6108:39:15"
																},
																"nativeSrc": "6108:69:15",
																"nodeType": "YulFunctionCall",
																"src": "6108:69:15"
															},
															"nativeSrc": "6108:69:15",
															"nodeType": "YulExpressionStatement",
															"src": "6108:69:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value8",
																		"nativeSrc": "6295:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6295:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6319:3:15",
																				"nodeType": "YulLiteral",
																				"src": "6319:3:15",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6304:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6304:3:15"
																		},
																		"nativeSrc": "6304:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6304:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_PresaleOptions_$1563_memory_ptr_to_t_struct$_PresaleOptions_$1563_memory_ptr_fromStack",
																	"nativeSrc": "6187:107:15",
																	"nodeType": "YulIdentifier",
																	"src": "6187:107:15"
																},
																"nativeSrc": "6187:137:15",
																"nodeType": "YulFunctionCall",
																"src": "6187:137:15"
															},
															"nativeSrc": "6187:137:15",
															"nodeType": "YulExpressionStatement",
															"src": "6187:137:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380_t_contract$_IUniswapV2Router02_$1509_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__fromStack_reversed",
												"nativeSrc": "5021:1310:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5352:9:15",
														"nodeType": "YulTypedName",
														"src": "5352:9:15",
														"type": ""
													},
													{
														"name": "value8",
														"nativeSrc": "5364:6:15",
														"nodeType": "YulTypedName",
														"src": "5364:6:15",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "5372:6:15",
														"nodeType": "YulTypedName",
														"src": "5372:6:15",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5380:6:15",
														"nodeType": "YulTypedName",
														"src": "5380:6:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5388:6:15",
														"nodeType": "YulTypedName",
														"src": "5388:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5396:6:15",
														"nodeType": "YulTypedName",
														"src": "5396:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5404:6:15",
														"nodeType": "YulTypedName",
														"src": "5404:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5412:6:15",
														"nodeType": "YulTypedName",
														"src": "5412:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5420:6:15",
														"nodeType": "YulTypedName",
														"src": "5420:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5428:6:15",
														"nodeType": "YulTypedName",
														"src": "5428:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5439:4:15",
														"nodeType": "YulTypedName",
														"src": "5439:4:15",
														"type": ""
													}
												],
												"src": "5021:1310:15"
											},
											{
												"body": {
													"nativeSrc": "6396:50:15",
													"nodeType": "YulBlock",
													"src": "6396:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6413:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "6413:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6433:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6433:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "6418:14:15",
																			"nodeType": "YulIdentifier",
																			"src": "6418:14:15"
																		},
																		"nativeSrc": "6418:21:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6418:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6406:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6406:6:15"
																},
																"nativeSrc": "6406:34:15",
																"nodeType": "YulFunctionCall",
																"src": "6406:34:15"
															},
															"nativeSrc": "6406:34:15",
															"nodeType": "YulExpressionStatement",
															"src": "6406:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "6337:109:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6384:5:15",
														"nodeType": "YulTypedName",
														"src": "6384:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6391:3:15",
														"nodeType": "YulTypedName",
														"src": "6391:3:15",
														"type": ""
													}
												],
												"src": "6337:109:15"
											},
											{
												"body": {
													"nativeSrc": "6544:118:15",
													"nodeType": "YulBlock",
													"src": "6544:118:15",
													"statements": [
														{
															"nativeSrc": "6554:26:15",
															"nodeType": "YulAssignment",
															"src": "6554:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6566:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "6566:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6577:2:15",
																		"nodeType": "YulLiteral",
																		"src": "6577:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6562:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "6562:3:15"
																},
																"nativeSrc": "6562:18:15",
																"nodeType": "YulFunctionCall",
																"src": "6562:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6554:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "6554:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6628:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6628:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6641:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "6641:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6652:1:15",
																				"nodeType": "YulLiteral",
																				"src": "6652:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6637:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "6637:3:15"
																		},
																		"nativeSrc": "6637:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6637:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6590:37:15",
																	"nodeType": "YulIdentifier",
																	"src": "6590:37:15"
																},
																"nativeSrc": "6590:65:15",
																"nodeType": "YulFunctionCall",
																"src": "6590:65:15"
															},
															"nativeSrc": "6590:65:15",
															"nodeType": "YulExpressionStatement",
															"src": "6590:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "6452:210:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6516:9:15",
														"nodeType": "YulTypedName",
														"src": "6516:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6528:6:15",
														"nodeType": "YulTypedName",
														"src": "6528:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6539:4:15",
														"nodeType": "YulTypedName",
														"src": "6539:4:15",
														"type": ""
													}
												],
												"src": "6452:210:15"
											},
											{
												"body": {
													"nativeSrc": "6711:79:15",
													"nodeType": "YulBlock",
													"src": "6711:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "6768:16:15",
																"nodeType": "YulBlock",
																"src": "6768:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6777:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6777:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6780:1:15",
																					"nodeType": "YulLiteral",
																					"src": "6780:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6770:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "6770:6:15"
																			},
																			"nativeSrc": "6770:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "6770:12:15"
																		},
																		"nativeSrc": "6770:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "6770:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6734:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "6734:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6759:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "6759:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6741:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "6741:17:15"
																				},
																				"nativeSrc": "6741:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "6741:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6731:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "6731:2:15"
																		},
																		"nativeSrc": "6731:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "6731:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6724:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "6724:6:15"
																},
																"nativeSrc": "6724:43:15",
																"nodeType": "YulFunctionCall",
																"src": "6724:43:15"
															},
															"nativeSrc": "6721:63:15",
															"nodeType": "YulIf",
															"src": "6721:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6668:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6704:5:15",
														"nodeType": "YulTypedName",
														"src": "6704:5:15",
														"type": ""
													}
												],
												"src": "6668:122:15"
											},
											{
												"body": {
													"nativeSrc": "6848:87:15",
													"nodeType": "YulBlock",
													"src": "6848:87:15",
													"statements": [
														{
															"nativeSrc": "6858:29:15",
															"nodeType": "YulAssignment",
															"src": "6858:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6880:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "6880:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6867:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "6867:12:15"
																},
																"nativeSrc": "6867:20:15",
																"nodeType": "YulFunctionCall",
																"src": "6867:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6858:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "6858:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6923:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "6923:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "6896:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "6896:26:15"
																},
																"nativeSrc": "6896:33:15",
																"nodeType": "YulFunctionCall",
																"src": "6896:33:15"
															},
															"nativeSrc": "6896:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "6896:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "6796:139:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6826:6:15",
														"nodeType": "YulTypedName",
														"src": "6826:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6834:3:15",
														"nodeType": "YulTypedName",
														"src": "6834:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6842:5:15",
														"nodeType": "YulTypedName",
														"src": "6842:5:15",
														"type": ""
													}
												],
												"src": "6796:139:15"
											},
											{
												"body": {
													"nativeSrc": "7007:263:15",
													"nodeType": "YulBlock",
													"src": "7007:263:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "7053:83:15",
																"nodeType": "YulBlock",
																"src": "7053:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7055:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "7055:77:15"
																			},
																			"nativeSrc": "7055:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "7055:79:15"
																		},
																		"nativeSrc": "7055:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "7055:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7028:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7028:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7037:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7037:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7024:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7024:3:15"
																		},
																		"nativeSrc": "7024:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7024:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7049:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7049:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7020:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:15"
																},
																"nativeSrc": "7020:32:15",
																"nodeType": "YulFunctionCall",
																"src": "7020:32:15"
															},
															"nativeSrc": "7017:119:15",
															"nodeType": "YulIf",
															"src": "7017:119:15"
														},
														{
															"nativeSrc": "7146:117:15",
															"nodeType": "YulBlock",
															"src": "7146:117:15",
															"statements": [
																{
																	"nativeSrc": "7161:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7161:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7175:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7175:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7165:6:15",
																			"nodeType": "YulTypedName",
																			"src": "7165:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7190:63:15",
																	"nodeType": "YulAssignment",
																	"src": "7190:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7225:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "7225:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7236:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "7236:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7221:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "7221:3:15"
																				},
																				"nativeSrc": "7221:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "7221:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7245:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "7245:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7200:20:15",
																			"nodeType": "YulIdentifier",
																			"src": "7200:20:15"
																		},
																		"nativeSrc": "7200:53:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7200:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7190:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "7190:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6941:329:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6977:9:15",
														"nodeType": "YulTypedName",
														"src": "6977:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6988:7:15",
														"nodeType": "YulTypedName",
														"src": "6988:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7000:6:15",
														"nodeType": "YulTypedName",
														"src": "7000:6:15",
														"type": ""
													}
												],
												"src": "6941:329:15"
											},
											{
												"body": {
													"nativeSrc": "7374:124:15",
													"nodeType": "YulBlock",
													"src": "7374:124:15",
													"statements": [
														{
															"nativeSrc": "7384:26:15",
															"nodeType": "YulAssignment",
															"src": "7384:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7396:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "7396:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7407:2:15",
																		"nodeType": "YulLiteral",
																		"src": "7407:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7392:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "7392:3:15"
																},
																"nativeSrc": "7392:18:15",
																"nodeType": "YulFunctionCall",
																"src": "7392:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7384:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "7384:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7464:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "7464:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7477:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7488:1:15",
																				"nodeType": "YulLiteral",
																				"src": "7488:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7473:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "7473:3:15"
																		},
																		"nativeSrc": "7473:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "7473:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7420:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "7420:43:15"
																},
																"nativeSrc": "7420:71:15",
																"nodeType": "YulFunctionCall",
																"src": "7420:71:15"
															},
															"nativeSrc": "7420:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "7420:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7276:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7346:9:15",
														"nodeType": "YulTypedName",
														"src": "7346:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7358:6:15",
														"nodeType": "YulTypedName",
														"src": "7358:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7369:4:15",
														"nodeType": "YulTypedName",
														"src": "7369:4:15",
														"type": ""
													}
												],
												"src": "7276:222:15"
											},
											{
												"body": {
													"nativeSrc": "7593:28:15",
													"nodeType": "YulBlock",
													"src": "7593:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7610:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7610:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7613:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7613:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7603:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7603:6:15"
																},
																"nativeSrc": "7603:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7603:12:15"
															},
															"nativeSrc": "7603:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7603:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "7504:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7504:117:15"
											},
											{
												"body": {
													"nativeSrc": "7716:28:15",
													"nodeType": "YulBlock",
													"src": "7716:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7733:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7733:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7736:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7736:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7726:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7726:6:15"
																},
																"nativeSrc": "7726:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7726:12:15"
															},
															"nativeSrc": "7726:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7726:12:15"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "7627:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7627:117:15"
											},
											{
												"body": {
													"nativeSrc": "7839:28:15",
													"nodeType": "YulBlock",
													"src": "7839:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7856:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7856:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7859:1:15",
																		"nodeType": "YulLiteral",
																		"src": "7859:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7849:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:15"
																},
																"nativeSrc": "7849:12:15",
																"nodeType": "YulFunctionCall",
																"src": "7849:12:15"
															},
															"nativeSrc": "7849:12:15",
															"nodeType": "YulExpressionStatement",
															"src": "7849:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7750:117:15",
												"nodeType": "YulFunctionDefinition",
												"src": "7750:117:15"
											},
											{
												"body": {
													"nativeSrc": "7980:478:15",
													"nodeType": "YulBlock",
													"src": "7980:478:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8029:83:15",
																"nodeType": "YulBlock",
																"src": "8029:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8031:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8031:77:15"
																			},
																			"nativeSrc": "8031:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8031:79:15"
																		},
																		"nativeSrc": "8031:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8031:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8008:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8008:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8016:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8016:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8004:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8004:3:15"
																				},
																				"nativeSrc": "8004:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8004:17:15"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8023:3:15",
																				"nodeType": "YulIdentifier",
																				"src": "8023:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8000:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8000:3:15"
																		},
																		"nativeSrc": "8000:27:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8000:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7993:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "7993:6:15"
																},
																"nativeSrc": "7993:35:15",
																"nodeType": "YulFunctionCall",
																"src": "7993:35:15"
															},
															"nativeSrc": "7990:122:15",
															"nodeType": "YulIf",
															"src": "7990:122:15"
														},
														{
															"nativeSrc": "8121:30:15",
															"nodeType": "YulAssignment",
															"src": "8121:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8144:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8144:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8131:12:15",
																	"nodeType": "YulIdentifier",
																	"src": "8131:12:15"
																},
																"nativeSrc": "8131:20:15",
																"nodeType": "YulFunctionCall",
																"src": "8131:20:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8121:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "8121:6:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8194:83:15",
																"nodeType": "YulBlock",
																"src": "8194:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "8196:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8196:77:15"
																			},
																			"nativeSrc": "8196:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8196:79:15"
																		},
																		"nativeSrc": "8196:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8196:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8166:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8166:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8174:18:15",
																		"nodeType": "YulLiteral",
																		"src": "8174:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8163:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8163:2:15"
																},
																"nativeSrc": "8163:30:15",
																"nodeType": "YulFunctionCall",
																"src": "8163:30:15"
															},
															"nativeSrc": "8160:117:15",
															"nodeType": "YulIf",
															"src": "8160:117:15"
														},
														{
															"nativeSrc": "8286:29:15",
															"nodeType": "YulAssignment",
															"src": "8286:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8302:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "8302:6:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8310:4:15",
																		"nodeType": "YulLiteral",
																		"src": "8310:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8298:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8298:3:15"
																},
																"nativeSrc": "8298:17:15",
																"nodeType": "YulFunctionCall",
																"src": "8298:17:15"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "8286:8:15",
																	"nodeType": "YulIdentifier",
																	"src": "8286:8:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8369:83:15",
																"nodeType": "YulBlock",
																"src": "8369:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8371:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8371:77:15"
																			},
																			"nativeSrc": "8371:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8371:79:15"
																		},
																		"nativeSrc": "8371:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8371:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "8334:8:15",
																				"nodeType": "YulIdentifier",
																				"src": "8334:8:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "8348:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8348:6:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8356:4:15",
																						"nodeType": "YulLiteral",
																						"src": "8356:4:15",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8344:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8344:3:15"
																				},
																				"nativeSrc": "8344:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8344:17:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8330:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8330:3:15"
																		},
																		"nativeSrc": "8330:32:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8330:32:15"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8364:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "8364:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8327:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "8327:2:15"
																},
																"nativeSrc": "8327:41:15",
																"nodeType": "YulFunctionCall",
																"src": "8327:41:15"
															},
															"nativeSrc": "8324:128:15",
															"nodeType": "YulIf",
															"src": "8324:128:15"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "7890:568:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7947:6:15",
														"nodeType": "YulTypedName",
														"src": "7947:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7955:3:15",
														"nodeType": "YulTypedName",
														"src": "7955:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "7963:8:15",
														"nodeType": "YulTypedName",
														"src": "7963:8:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7973:6:15",
														"nodeType": "YulTypedName",
														"src": "7973:6:15",
														"type": ""
													}
												],
												"src": "7890:568:15"
											},
											{
												"body": {
													"nativeSrc": "8565:458:15",
													"nodeType": "YulBlock",
													"src": "8565:458:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "8611:83:15",
																"nodeType": "YulBlock",
																"src": "8611:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8613:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "8613:77:15"
																			},
																			"nativeSrc": "8613:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "8613:79:15"
																		},
																		"nativeSrc": "8613:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "8613:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8586:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8586:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8595:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "8595:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8582:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "8582:3:15"
																		},
																		"nativeSrc": "8582:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8582:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8607:2:15",
																		"nodeType": "YulLiteral",
																		"src": "8607:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8578:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:15"
																},
																"nativeSrc": "8578:32:15",
																"nodeType": "YulFunctionCall",
																"src": "8578:32:15"
															},
															"nativeSrc": "8575:119:15",
															"nodeType": "YulIf",
															"src": "8575:119:15"
														},
														{
															"nativeSrc": "8704:312:15",
															"nodeType": "YulBlock",
															"src": "8704:312:15",
															"statements": [
																{
																	"nativeSrc": "8719:45:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8719:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8750:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8750:9:15"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8761:1:15",
																						"nodeType": "YulLiteral",
																						"src": "8761:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8746:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8746:3:15"
																				},
																				"nativeSrc": "8746:17:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8746:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "8733:12:15",
																			"nodeType": "YulIdentifier",
																			"src": "8733:12:15"
																		},
																		"nativeSrc": "8733:31:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8733:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8723:6:15",
																			"nodeType": "YulTypedName",
																			"src": "8723:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "8811:83:15",
																		"nodeType": "YulBlock",
																		"src": "8811:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "8813:77:15",
																						"nodeType": "YulIdentifier",
																						"src": "8813:77:15"
																					},
																					"nativeSrc": "8813:79:15",
																					"nodeType": "YulFunctionCall",
																					"src": "8813:79:15"
																				},
																				"nativeSrc": "8813:79:15",
																				"nodeType": "YulExpressionStatement",
																				"src": "8813:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8783:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "8783:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8791:18:15",
																				"nodeType": "YulLiteral",
																				"src": "8791:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8780:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "8780:2:15"
																		},
																		"nativeSrc": "8780:30:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8780:30:15"
																	},
																	"nativeSrc": "8777:117:15",
																	"nodeType": "YulIf",
																	"src": "8777:117:15"
																},
																{
																	"nativeSrc": "8908:98:15",
																	"nodeType": "YulAssignment",
																	"src": "8908:98:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8978:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "8978:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8989:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "8989:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8974:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "8974:3:15"
																				},
																				"nativeSrc": "8974:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "8974:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8998:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "8998:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "8926:47:15",
																			"nodeType": "YulIdentifier",
																			"src": "8926:47:15"
																		},
																		"nativeSrc": "8926:80:15",
																		"nodeType": "YulFunctionCall",
																		"src": "8926:80:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8908:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8908:6:15"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "8916:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "8916:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "8464:559:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8527:9:15",
														"nodeType": "YulTypedName",
														"src": "8527:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8538:7:15",
														"nodeType": "YulTypedName",
														"src": "8538:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8550:6:15",
														"nodeType": "YulTypedName",
														"src": "8550:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8558:6:15",
														"nodeType": "YulTypedName",
														"src": "8558:6:15",
														"type": ""
													}
												],
												"src": "8464:559:15"
											},
											{
												"body": {
													"nativeSrc": "9127:124:15",
													"nodeType": "YulBlock",
													"src": "9127:124:15",
													"statements": [
														{
															"nativeSrc": "9137:26:15",
															"nodeType": "YulAssignment",
															"src": "9137:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9149:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9149:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9160:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9160:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9145:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9145:3:15"
																},
																"nativeSrc": "9145:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9145:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9137:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9137:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9217:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9217:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9230:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9241:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9241:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9226:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:15"
																		},
																		"nativeSrc": "9226:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9226:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9173:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "9173:43:15"
																},
																"nativeSrc": "9173:71:15",
																"nodeType": "YulFunctionCall",
																"src": "9173:71:15"
															},
															"nativeSrc": "9173:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "9173:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9029:222:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9099:9:15",
														"nodeType": "YulTypedName",
														"src": "9099:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9111:6:15",
														"nodeType": "YulTypedName",
														"src": "9111:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9122:4:15",
														"nodeType": "YulTypedName",
														"src": "9122:4:15",
														"type": ""
													}
												],
												"src": "9029:222:15"
											},
											{
												"body": {
													"nativeSrc": "9285:152:15",
													"nodeType": "YulBlock",
													"src": "9285:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9302:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9302:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9305:77:15",
																		"nodeType": "YulLiteral",
																		"src": "9305:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:15"
																},
																"nativeSrc": "9295:88:15",
																"nodeType": "YulFunctionCall",
																"src": "9295:88:15"
															},
															"nativeSrc": "9295:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "9295:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9399:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9399:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9402:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:15"
																},
																"nativeSrc": "9392:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9392:15:15"
															},
															"nativeSrc": "9392:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9392:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9423:1:15",
																		"nodeType": "YulLiteral",
																		"src": "9423:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:4:15",
																		"nodeType": "YulLiteral",
																		"src": "9426:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9416:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "9416:6:15"
																},
																"nativeSrc": "9416:15:15",
																"nodeType": "YulFunctionCall",
																"src": "9416:15:15"
															},
															"nativeSrc": "9416:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "9416:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9257:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "9257:180:15"
											},
											{
												"body": {
													"nativeSrc": "9487:147:15",
													"nodeType": "YulBlock",
													"src": "9487:147:15",
													"statements": [
														{
															"nativeSrc": "9497:25:15",
															"nodeType": "YulAssignment",
															"src": "9497:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9520:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9520:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9502:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9502:17:15"
																},
																"nativeSrc": "9502:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9502:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9497:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9497:1:15"
																}
															]
														},
														{
															"nativeSrc": "9531:25:15",
															"nodeType": "YulAssignment",
															"src": "9531:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9554:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9554:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9536:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9536:17:15"
																},
																"nativeSrc": "9536:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9536:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9531:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9531:1:15"
																}
															]
														},
														{
															"nativeSrc": "9565:16:15",
															"nodeType": "YulAssignment",
															"src": "9565:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9576:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9576:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9579:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9579:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9572:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9572:3:15"
																},
																"nativeSrc": "9572:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9572:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9565:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9565:3:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9605:22:15",
																"nodeType": "YulBlock",
																"src": "9605:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9607:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "9607:16:15"
																			},
																			"nativeSrc": "9607:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "9607:18:15"
																		},
																		"nativeSrc": "9607:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "9607:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9597:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9597:1:15"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9600:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "9600:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9594:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "9594:2:15"
																},
																"nativeSrc": "9594:10:15",
																"nodeType": "YulFunctionCall",
																"src": "9594:10:15"
															},
															"nativeSrc": "9591:36:15",
															"nodeType": "YulIf",
															"src": "9591:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9443:191:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9474:1:15",
														"nodeType": "YulTypedName",
														"src": "9474:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9477:1:15",
														"nodeType": "YulTypedName",
														"src": "9477:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9483:3:15",
														"nodeType": "YulTypedName",
														"src": "9483:3:15",
														"type": ""
													}
												],
												"src": "9443:191:15"
											},
											{
												"body": {
													"nativeSrc": "9734:120:15",
													"nodeType": "YulBlock",
													"src": "9734:120:15",
													"statements": [
														{
															"nativeSrc": "9744:26:15",
															"nodeType": "YulAssignment",
															"src": "9744:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9756:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "9756:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9767:2:15",
																		"nodeType": "YulLiteral",
																		"src": "9767:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9752:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9752:3:15"
																},
																"nativeSrc": "9752:18:15",
																"nodeType": "YulFunctionCall",
																"src": "9752:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9744:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9744:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9820:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "9820:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9833:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "9833:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9844:1:15",
																				"nodeType": "YulLiteral",
																				"src": "9844:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9829:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "9829:3:15"
																		},
																		"nativeSrc": "9829:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "9829:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "9780:39:15",
																	"nodeType": "YulIdentifier",
																	"src": "9780:39:15"
																},
																"nativeSrc": "9780:67:15",
																"nodeType": "YulFunctionCall",
																"src": "9780:67:15"
															},
															"nativeSrc": "9780:67:15",
															"nodeType": "YulExpressionStatement",
															"src": "9780:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "9640:214:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9706:9:15",
														"nodeType": "YulTypedName",
														"src": "9706:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9718:6:15",
														"nodeType": "YulTypedName",
														"src": "9718:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9729:4:15",
														"nodeType": "YulTypedName",
														"src": "9729:4:15",
														"type": ""
													}
												],
												"src": "9640:214:15"
											},
											{
												"body": {
													"nativeSrc": "9905:149:15",
													"nodeType": "YulBlock",
													"src": "9905:149:15",
													"statements": [
														{
															"nativeSrc": "9915:25:15",
															"nodeType": "YulAssignment",
															"src": "9915:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9938:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9938:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9920:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9920:17:15"
																},
																"nativeSrc": "9920:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9920:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9915:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9915:1:15"
																}
															]
														},
														{
															"nativeSrc": "9949:25:15",
															"nodeType": "YulAssignment",
															"src": "9949:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9972:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9972:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9954:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "9954:17:15"
																},
																"nativeSrc": "9954:20:15",
																"nodeType": "YulFunctionCall",
																"src": "9954:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9949:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "9949:1:15"
																}
															]
														},
														{
															"nativeSrc": "9983:17:15",
															"nodeType": "YulAssignment",
															"src": "9983:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9995:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9995:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9998:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "9998:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9991:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "9991:3:15"
																},
																"nativeSrc": "9991:9:15",
																"nodeType": "YulFunctionCall",
																"src": "9991:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9983:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "9983:4:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10025:22:15",
																"nodeType": "YulBlock",
																"src": "10025:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10027:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10027:16:15"
																			},
																			"nativeSrc": "10027:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10027:18:15"
																		},
																		"nativeSrc": "10027:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10027:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10016:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "10016:4:15"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10022:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10022:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10013:2:15",
																	"nodeType": "YulIdentifier",
																	"src": "10013:2:15"
																},
																"nativeSrc": "10013:11:15",
																"nodeType": "YulFunctionCall",
																"src": "10013:11:15"
															},
															"nativeSrc": "10010:37:15",
															"nodeType": "YulIf",
															"src": "10010:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9860:194:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9891:1:15",
														"nodeType": "YulTypedName",
														"src": "9891:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9894:1:15",
														"nodeType": "YulTypedName",
														"src": "9894:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9900:4:15",
														"nodeType": "YulTypedName",
														"src": "9900:4:15",
														"type": ""
													}
												],
												"src": "9860:194:15"
											},
											{
												"body": {
													"nativeSrc": "10186:206:15",
													"nodeType": "YulBlock",
													"src": "10186:206:15",
													"statements": [
														{
															"nativeSrc": "10196:26:15",
															"nodeType": "YulAssignment",
															"src": "10196:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10208:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "10208:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10219:2:15",
																		"nodeType": "YulLiteral",
																		"src": "10219:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10204:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10204:3:15"
																},
																"nativeSrc": "10204:18:15",
																"nodeType": "YulFunctionCall",
																"src": "10204:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10196:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "10196:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10276:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10276:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10289:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10289:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10300:1:15",
																				"nodeType": "YulLiteral",
																				"src": "10300:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10285:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10285:3:15"
																		},
																		"nativeSrc": "10285:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10285:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10232:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10232:43:15"
																},
																"nativeSrc": "10232:71:15",
																"nodeType": "YulFunctionCall",
																"src": "10232:71:15"
															},
															"nativeSrc": "10232:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "10232:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10357:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "10357:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10370:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10381:2:15",
																				"nodeType": "YulLiteral",
																				"src": "10381:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10366:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "10366:3:15"
																		},
																		"nativeSrc": "10366:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10366:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10313:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "10313:43:15"
																},
																"nativeSrc": "10313:72:15",
																"nodeType": "YulFunctionCall",
																"src": "10313:72:15"
															},
															"nativeSrc": "10313:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "10313:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10060:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10150:9:15",
														"nodeType": "YulTypedName",
														"src": "10150:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10162:6:15",
														"nodeType": "YulTypedName",
														"src": "10162:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10170:6:15",
														"nodeType": "YulTypedName",
														"src": "10170:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10181:4:15",
														"nodeType": "YulTypedName",
														"src": "10181:4:15",
														"type": ""
													}
												],
												"src": "10060:332:15"
											},
											{
												"body": {
													"nativeSrc": "10426:152:15",
													"nodeType": "YulBlock",
													"src": "10426:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10443:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10443:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10446:77:15",
																		"nodeType": "YulLiteral",
																		"src": "10446:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10436:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10436:6:15"
																},
																"nativeSrc": "10436:88:15",
																"nodeType": "YulFunctionCall",
																"src": "10436:88:15"
															},
															"nativeSrc": "10436:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "10436:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10540:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10540:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10543:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10543:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10533:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10533:6:15"
																},
																"nativeSrc": "10533:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10533:15:15"
															},
															"nativeSrc": "10533:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10533:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10564:1:15",
																		"nodeType": "YulLiteral",
																		"src": "10564:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10567:4:15",
																		"nodeType": "YulLiteral",
																		"src": "10567:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10557:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10557:6:15"
																},
																"nativeSrc": "10557:15:15",
																"nodeType": "YulFunctionCall",
																"src": "10557:15:15"
															},
															"nativeSrc": "10557:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "10557:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10398:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "10398:180:15"
											},
											{
												"body": {
													"nativeSrc": "10632:362:15",
													"nodeType": "YulBlock",
													"src": "10632:362:15",
													"statements": [
														{
															"nativeSrc": "10642:25:15",
															"nodeType": "YulAssignment",
															"src": "10642:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10665:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10665:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10647:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10647:17:15"
																},
																"nativeSrc": "10647:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10647:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10642:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10642:1:15"
																}
															]
														},
														{
															"nativeSrc": "10676:25:15",
															"nodeType": "YulAssignment",
															"src": "10676:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10699:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10699:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10681:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10681:17:15"
																},
																"nativeSrc": "10681:20:15",
																"nodeType": "YulFunctionCall",
																"src": "10681:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10676:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "10676:1:15"
																}
															]
														},
														{
															"nativeSrc": "10710:28:15",
															"nodeType": "YulVariableDeclaration",
															"src": "10710:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10733:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10733:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10736:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "10736:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10729:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "10729:3:15"
																},
																"nativeSrc": "10729:9:15",
																"nodeType": "YulFunctionCall",
																"src": "10729:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10714:11:15",
																	"nodeType": "YulTypedName",
																	"src": "10714:11:15",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10747:41:15",
															"nodeType": "YulAssignment",
															"src": "10747:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10776:11:15",
																		"nodeType": "YulIdentifier",
																		"src": "10776:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10758:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "10758:17:15"
																},
																"nativeSrc": "10758:30:15",
																"nodeType": "YulFunctionCall",
																"src": "10758:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10747:7:15",
																	"nodeType": "YulIdentifier",
																	"src": "10747:7:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10965:22:15",
																"nodeType": "YulBlock",
																"src": "10965:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10967:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "10967:16:15"
																			},
																			"nativeSrc": "10967:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "10967:18:15"
																		},
																		"nativeSrc": "10967:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "10967:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10898:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10898:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10891:6:15",
																					"nodeType": "YulIdentifier",
																					"src": "10891:6:15"
																				},
																				"nativeSrc": "10891:9:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10891:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10921:1:15",
																						"nodeType": "YulIdentifier",
																						"src": "10921:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10928:7:15",
																								"nodeType": "YulIdentifier",
																								"src": "10928:7:15"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10937:1:15",
																								"nodeType": "YulIdentifier",
																								"src": "10937:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10924:3:15",
																							"nodeType": "YulIdentifier",
																							"src": "10924:3:15"
																						},
																						"nativeSrc": "10924:15:15",
																						"nodeType": "YulFunctionCall",
																						"src": "10924:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10918:2:15",
																					"nodeType": "YulIdentifier",
																					"src": "10918:2:15"
																				},
																				"nativeSrc": "10918:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "10918:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10871:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "10871:2:15"
																		},
																		"nativeSrc": "10871:83:15",
																		"nodeType": "YulFunctionCall",
																		"src": "10871:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10851:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "10851:6:15"
																},
																"nativeSrc": "10851:113:15",
																"nodeType": "YulFunctionCall",
																"src": "10851:113:15"
															},
															"nativeSrc": "10848:139:15",
															"nodeType": "YulIf",
															"src": "10848:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10584:410:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10615:1:15",
														"nodeType": "YulTypedName",
														"src": "10615:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10618:1:15",
														"nodeType": "YulTypedName",
														"src": "10618:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10624:7:15",
														"nodeType": "YulTypedName",
														"src": "10624:7:15",
														"type": ""
													}
												],
												"src": "10584:410:15"
											},
											{
												"body": {
													"nativeSrc": "11028:152:15",
													"nodeType": "YulBlock",
													"src": "11028:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11045:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11045:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11048:77:15",
																		"nodeType": "YulLiteral",
																		"src": "11048:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11038:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11038:6:15"
																},
																"nativeSrc": "11038:88:15",
																"nodeType": "YulFunctionCall",
																"src": "11038:88:15"
															},
															"nativeSrc": "11038:88:15",
															"nodeType": "YulExpressionStatement",
															"src": "11038:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11142:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11142:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11145:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11145:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11135:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11135:6:15"
																},
																"nativeSrc": "11135:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11135:15:15"
															},
															"nativeSrc": "11135:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11135:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11166:1:15",
																		"nodeType": "YulLiteral",
																		"src": "11166:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11169:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11169:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11159:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11159:6:15"
																},
																"nativeSrc": "11159:15:15",
																"nodeType": "YulFunctionCall",
																"src": "11159:15:15"
															},
															"nativeSrc": "11159:15:15",
															"nodeType": "YulExpressionStatement",
															"src": "11159:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11000:180:15",
												"nodeType": "YulFunctionDefinition",
												"src": "11000:180:15"
											},
											{
												"body": {
													"nativeSrc": "11228:143:15",
													"nodeType": "YulBlock",
													"src": "11228:143:15",
													"statements": [
														{
															"nativeSrc": "11238:25:15",
															"nodeType": "YulAssignment",
															"src": "11238:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11261:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11261:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11243:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11243:17:15"
																},
																"nativeSrc": "11243:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11243:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11238:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11238:1:15"
																}
															]
														},
														{
															"nativeSrc": "11272:25:15",
															"nodeType": "YulAssignment",
															"src": "11272:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11295:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11295:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11277:17:15",
																	"nodeType": "YulIdentifier",
																	"src": "11277:17:15"
																},
																"nativeSrc": "11277:20:15",
																"nodeType": "YulFunctionCall",
																"src": "11277:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11272:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11272:1:15"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11319:22:15",
																"nodeType": "YulBlock",
																"src": "11319:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11321:16:15",
																				"nodeType": "YulIdentifier",
																				"src": "11321:16:15"
																			},
																			"nativeSrc": "11321:18:15",
																			"nodeType": "YulFunctionCall",
																			"src": "11321:18:15"
																		},
																		"nativeSrc": "11321:18:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "11321:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11316:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11316:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11309:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:15"
																},
																"nativeSrc": "11309:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11309:9:15"
															},
															"nativeSrc": "11306:35:15",
															"nodeType": "YulIf",
															"src": "11306:35:15"
														},
														{
															"nativeSrc": "11351:14:15",
															"nodeType": "YulAssignment",
															"src": "11351:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11360:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11360:1:15"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11363:1:15",
																		"nodeType": "YulIdentifier",
																		"src": "11363:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11356:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11356:3:15"
																},
																"nativeSrc": "11356:9:15",
																"nodeType": "YulFunctionCall",
																"src": "11356:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11351:1:15",
																	"nodeType": "YulIdentifier",
																	"src": "11351:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11186:185:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11217:1:15",
														"nodeType": "YulTypedName",
														"src": "11217:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11220:1:15",
														"nodeType": "YulTypedName",
														"src": "11220:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11226:1:15",
														"nodeType": "YulTypedName",
														"src": "11226:1:15",
														"type": ""
													}
												],
												"src": "11186:185:15"
											},
											{
												"body": {
													"nativeSrc": "11473:73:15",
													"nodeType": "YulBlock",
													"src": "11473:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11490:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11490:3:15"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11495:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "11495:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11483:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11483:6:15"
																},
																"nativeSrc": "11483:19:15",
																"nodeType": "YulFunctionCall",
																"src": "11483:19:15"
															},
															"nativeSrc": "11483:19:15",
															"nodeType": "YulExpressionStatement",
															"src": "11483:19:15"
														},
														{
															"nativeSrc": "11511:29:15",
															"nodeType": "YulAssignment",
															"src": "11511:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11530:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11530:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11535:4:15",
																		"nodeType": "YulLiteral",
																		"src": "11535:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11526:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11526:3:15"
																},
																"nativeSrc": "11526:14:15",
																"nodeType": "YulFunctionCall",
																"src": "11526:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11511:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "11511:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11377:169:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11445:3:15",
														"nodeType": "YulTypedName",
														"src": "11445:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11450:6:15",
														"nodeType": "YulTypedName",
														"src": "11450:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11461:11:15",
														"nodeType": "YulTypedName",
														"src": "11461:11:15",
														"type": ""
													}
												],
												"src": "11377:169:15"
											},
											{
												"body": {
													"nativeSrc": "11658:75:15",
													"nodeType": "YulBlock",
													"src": "11658:75:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11680:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "11680:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11688:1:15",
																				"nodeType": "YulLiteral",
																				"src": "11688:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11676:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "11676:3:15"
																		},
																		"nativeSrc": "11676:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "11676:14:15"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11692:33:15",
																		"nodeType": "YulLiteral",
																		"src": "11692:33:15",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11669:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "11669:6:15"
																},
																"nativeSrc": "11669:57:15",
																"nodeType": "YulFunctionCall",
																"src": "11669:57:15"
															},
															"nativeSrc": "11669:57:15",
															"nodeType": "YulExpressionStatement",
															"src": "11669:57:15"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "11552:181:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11650:6:15",
														"nodeType": "YulTypedName",
														"src": "11650:6:15",
														"type": ""
													}
												],
												"src": "11552:181:15"
											},
											{
												"body": {
													"nativeSrc": "11885:220:15",
													"nodeType": "YulBlock",
													"src": "11885:220:15",
													"statements": [
														{
															"nativeSrc": "11895:74:15",
															"nodeType": "YulAssignment",
															"src": "11895:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11961:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "11961:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11966:2:15",
																		"nodeType": "YulLiteral",
																		"src": "11966:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11902:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "11902:58:15"
																},
																"nativeSrc": "11902:67:15",
																"nodeType": "YulFunctionCall",
																"src": "11902:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11895:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "11895:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12067:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12067:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "11978:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "11978:88:15"
																},
																"nativeSrc": "11978:93:15",
																"nodeType": "YulFunctionCall",
																"src": "11978:93:15"
															},
															"nativeSrc": "11978:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "11978:93:15"
														},
														{
															"nativeSrc": "12080:19:15",
															"nodeType": "YulAssignment",
															"src": "12080:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12091:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12091:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12096:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12096:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12087:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12087:3:15"
																},
																"nativeSrc": "12087:12:15",
																"nodeType": "YulFunctionCall",
																"src": "12087:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12080:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12080:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11739:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11873:3:15",
														"nodeType": "YulTypedName",
														"src": "11873:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11881:3:15",
														"nodeType": "YulTypedName",
														"src": "11881:3:15",
														"type": ""
													}
												],
												"src": "11739:366:15"
											},
											{
												"body": {
													"nativeSrc": "12282:248:15",
													"nodeType": "YulBlock",
													"src": "12282:248:15",
													"statements": [
														{
															"nativeSrc": "12292:26:15",
															"nodeType": "YulAssignment",
															"src": "12292:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12304:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "12304:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12315:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12315:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12300:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12300:3:15"
																},
																"nativeSrc": "12300:18:15",
																"nodeType": "YulFunctionCall",
																"src": "12300:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12292:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12292:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12339:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12339:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12350:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12350:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12335:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12335:3:15"
																		},
																		"nativeSrc": "12335:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12335:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12358:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "12358:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12364:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "12364:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12354:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:15"
																		},
																		"nativeSrc": "12354:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12354:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12328:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12328:6:15"
																},
																"nativeSrc": "12328:47:15",
																"nodeType": "YulFunctionCall",
																"src": "12328:47:15"
															},
															"nativeSrc": "12328:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "12328:47:15"
														},
														{
															"nativeSrc": "12384:139:15",
															"nodeType": "YulAssignment",
															"src": "12384:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12518:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "12518:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12392:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "12392:124:15"
																},
																"nativeSrc": "12392:131:15",
																"nodeType": "YulFunctionCall",
																"src": "12392:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12384:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "12384:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12111:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12262:9:15",
														"nodeType": "YulTypedName",
														"src": "12262:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12277:4:15",
														"nodeType": "YulTypedName",
														"src": "12277:4:15",
														"type": ""
													}
												],
												"src": "12111:419:15"
											},
											{
												"body": {
													"nativeSrc": "12642:58:15",
													"nodeType": "YulBlock",
													"src": "12642:58:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12664:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "12664:6:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12672:1:15",
																				"nodeType": "YulLiteral",
																				"src": "12672:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12660:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "12660:3:15"
																		},
																		"nativeSrc": "12660:14:15",
																		"nodeType": "YulFunctionCall",
																		"src": "12660:14:15"
																	},
																	{
																		"hexValue": "4e6f7457686974656c6973746564",
																		"kind": "string",
																		"nativeSrc": "12676:16:15",
																		"nodeType": "YulLiteral",
																		"src": "12676:16:15",
																		"type": "",
																		"value": "NotWhitelisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12653:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "12653:6:15"
																},
																"nativeSrc": "12653:40:15",
																"nodeType": "YulFunctionCall",
																"src": "12653:40:15"
															},
															"nativeSrc": "12653:40:15",
															"nodeType": "YulExpressionStatement",
															"src": "12653:40:15"
														}
													]
												},
												"name": "store_literal_in_memory_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e",
												"nativeSrc": "12536:164:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12634:6:15",
														"nodeType": "YulTypedName",
														"src": "12634:6:15",
														"type": ""
													}
												],
												"src": "12536:164:15"
											},
											{
												"body": {
													"nativeSrc": "12852:220:15",
													"nodeType": "YulBlock",
													"src": "12852:220:15",
													"statements": [
														{
															"nativeSrc": "12862:74:15",
															"nodeType": "YulAssignment",
															"src": "12862:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12928:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "12928:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12933:2:15",
																		"nodeType": "YulLiteral",
																		"src": "12933:2:15",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12869:58:15",
																	"nodeType": "YulIdentifier",
																	"src": "12869:58:15"
																},
																"nativeSrc": "12869:67:15",
																"nodeType": "YulFunctionCall",
																"src": "12869:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12862:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "12862:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13034:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13034:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e",
																	"nativeSrc": "12945:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "12945:88:15"
																},
																"nativeSrc": "12945:93:15",
																"nodeType": "YulFunctionCall",
																"src": "12945:93:15"
															},
															"nativeSrc": "12945:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "12945:93:15"
														},
														{
															"nativeSrc": "13047:19:15",
															"nodeType": "YulAssignment",
															"src": "13047:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13058:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "13058:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13063:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13063:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13054:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13054:3:15"
																},
																"nativeSrc": "13054:12:15",
																"nodeType": "YulFunctionCall",
																"src": "13054:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13047:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13047:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12706:366:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12840:3:15",
														"nodeType": "YulTypedName",
														"src": "12840:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12848:3:15",
														"nodeType": "YulTypedName",
														"src": "12848:3:15",
														"type": ""
													}
												],
												"src": "12706:366:15"
											},
											{
												"body": {
													"nativeSrc": "13249:248:15",
													"nodeType": "YulBlock",
													"src": "13249:248:15",
													"statements": [
														{
															"nativeSrc": "13259:26:15",
															"nodeType": "YulAssignment",
															"src": "13259:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13271:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13271:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13282:2:15",
																		"nodeType": "YulLiteral",
																		"src": "13282:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13267:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13267:3:15"
																},
																"nativeSrc": "13267:18:15",
																"nodeType": "YulFunctionCall",
																"src": "13267:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13259:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13259:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13306:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13306:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13317:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13317:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13302:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13302:3:15"
																		},
																		"nativeSrc": "13302:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13302:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13325:4:15",
																				"nodeType": "YulIdentifier",
																				"src": "13325:4:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13331:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13331:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13321:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13321:3:15"
																		},
																		"nativeSrc": "13321:20:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13321:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13295:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "13295:6:15"
																},
																"nativeSrc": "13295:47:15",
																"nodeType": "YulFunctionCall",
																"src": "13295:47:15"
															},
															"nativeSrc": "13295:47:15",
															"nodeType": "YulExpressionStatement",
															"src": "13295:47:15"
														},
														{
															"nativeSrc": "13351:139:15",
															"nodeType": "YulAssignment",
															"src": "13351:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13485:4:15",
																		"nodeType": "YulIdentifier",
																		"src": "13485:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13359:124:15",
																	"nodeType": "YulIdentifier",
																	"src": "13359:124:15"
																},
																"nativeSrc": "13359:131:15",
																"nodeType": "YulFunctionCall",
																"src": "13359:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13351:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13351:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13078:419:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13229:9:15",
														"nodeType": "YulTypedName",
														"src": "13229:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13244:4:15",
														"nodeType": "YulTypedName",
														"src": "13244:4:15",
														"type": ""
													}
												],
												"src": "13078:419:15"
											},
											{
												"body": {
													"nativeSrc": "13741:537:15",
													"nodeType": "YulBlock",
													"src": "13741:537:15",
													"statements": [
														{
															"nativeSrc": "13751:27:15",
															"nodeType": "YulAssignment",
															"src": "13751:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13763:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "13763:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13774:3:15",
																		"nodeType": "YulLiteral",
																		"src": "13774:3:15",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13759:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "13759:3:15"
																},
																"nativeSrc": "13759:19:15",
																"nodeType": "YulFunctionCall",
																"src": "13759:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13751:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "13751:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13832:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13832:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13845:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13845:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13856:1:15",
																				"nodeType": "YulLiteral",
																				"src": "13856:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13841:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13841:3:15"
																		},
																		"nativeSrc": "13841:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13841:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13788:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13788:43:15"
																},
																"nativeSrc": "13788:71:15",
																"nodeType": "YulFunctionCall",
																"src": "13788:71:15"
															},
															"nativeSrc": "13788:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "13788:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13913:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13913:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13926:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "13926:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13937:2:15",
																				"nodeType": "YulLiteral",
																				"src": "13937:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13922:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "13922:3:15"
																		},
																		"nativeSrc": "13922:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "13922:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13869:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13869:43:15"
																},
																"nativeSrc": "13869:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13869:72:15"
															},
															"nativeSrc": "13869:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13869:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13995:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "13995:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14008:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14008:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14019:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14019:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14004:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14004:3:15"
																		},
																		"nativeSrc": "14004:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14004:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13951:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "13951:43:15"
																},
																"nativeSrc": "13951:72:15",
																"nodeType": "YulFunctionCall",
																"src": "13951:72:15"
															},
															"nativeSrc": "13951:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "13951:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14077:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14077:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14090:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14090:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14101:2:15",
																				"nodeType": "YulLiteral",
																				"src": "14101:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14086:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14086:3:15"
																		},
																		"nativeSrc": "14086:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14086:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14033:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14033:43:15"
																},
																"nativeSrc": "14033:72:15",
																"nodeType": "YulFunctionCall",
																"src": "14033:72:15"
															},
															"nativeSrc": "14033:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "14033:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "14159:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14159:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14172:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14172:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14183:3:15",
																				"nodeType": "YulLiteral",
																				"src": "14183:3:15",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14168:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14168:3:15"
																		},
																		"nativeSrc": "14168:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14168:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14115:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14115:43:15"
																},
																"nativeSrc": "14115:73:15",
																"nodeType": "YulFunctionCall",
																"src": "14115:73:15"
															},
															"nativeSrc": "14115:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "14115:73:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "14242:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14242:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14255:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14255:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14266:3:15",
																				"nodeType": "YulLiteral",
																				"src": "14266:3:15",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14251:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14251:3:15"
																		},
																		"nativeSrc": "14251:19:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14251:19:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14198:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "14198:43:15"
																},
																"nativeSrc": "14198:73:15",
																"nodeType": "YulFunctionCall",
																"src": "14198:73:15"
															},
															"nativeSrc": "14198:73:15",
															"nodeType": "YulExpressionStatement",
															"src": "14198:73:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13503:775:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13673:9:15",
														"nodeType": "YulTypedName",
														"src": "13673:9:15",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "13685:6:15",
														"nodeType": "YulTypedName",
														"src": "13685:6:15",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "13693:6:15",
														"nodeType": "YulTypedName",
														"src": "13693:6:15",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13701:6:15",
														"nodeType": "YulTypedName",
														"src": "13701:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13709:6:15",
														"nodeType": "YulTypedName",
														"src": "13709:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13717:6:15",
														"nodeType": "YulTypedName",
														"src": "13717:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13725:6:15",
														"nodeType": "YulTypedName",
														"src": "13725:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13736:4:15",
														"nodeType": "YulTypedName",
														"src": "13736:4:15",
														"type": ""
													}
												],
												"src": "13503:775:15"
											},
											{
												"body": {
													"nativeSrc": "14327:79:15",
													"nodeType": "YulBlock",
													"src": "14327:79:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14384:16:15",
																"nodeType": "YulBlock",
																"src": "14384:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14393:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14393:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14396:1:15",
																					"nodeType": "YulLiteral",
																					"src": "14396:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14386:6:15",
																				"nodeType": "YulIdentifier",
																				"src": "14386:6:15"
																			},
																			"nativeSrc": "14386:12:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14386:12:15"
																		},
																		"nativeSrc": "14386:12:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14386:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14350:5:15",
																				"nodeType": "YulIdentifier",
																				"src": "14350:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14375:5:15",
																						"nodeType": "YulIdentifier",
																						"src": "14375:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "14357:17:15",
																					"nodeType": "YulIdentifier",
																					"src": "14357:17:15"
																				},
																				"nativeSrc": "14357:24:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14357:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14347:2:15",
																			"nodeType": "YulIdentifier",
																			"src": "14347:2:15"
																		},
																		"nativeSrc": "14347:35:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14347:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14340:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "14340:6:15"
																},
																"nativeSrc": "14340:43:15",
																"nodeType": "YulFunctionCall",
																"src": "14340:43:15"
															},
															"nativeSrc": "14337:63:15",
															"nodeType": "YulIf",
															"src": "14337:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "14284:122:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14320:5:15",
														"nodeType": "YulTypedName",
														"src": "14320:5:15",
														"type": ""
													}
												],
												"src": "14284:122:15"
											},
											{
												"body": {
													"nativeSrc": "14475:80:15",
													"nodeType": "YulBlock",
													"src": "14475:80:15",
													"statements": [
														{
															"nativeSrc": "14485:22:15",
															"nodeType": "YulAssignment",
															"src": "14485:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14500:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "14500:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14494:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14494:5:15"
																},
																"nativeSrc": "14494:13:15",
																"nodeType": "YulFunctionCall",
																"src": "14494:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14485:5:15",
																	"nodeType": "YulIdentifier",
																	"src": "14485:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14543:5:15",
																		"nodeType": "YulIdentifier",
																		"src": "14543:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "14516:26:15",
																	"nodeType": "YulIdentifier",
																	"src": "14516:26:15"
																},
																"nativeSrc": "14516:33:15",
																"nodeType": "YulFunctionCall",
																"src": "14516:33:15"
															},
															"nativeSrc": "14516:33:15",
															"nodeType": "YulExpressionStatement",
															"src": "14516:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "14412:143:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14453:6:15",
														"nodeType": "YulTypedName",
														"src": "14453:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14461:3:15",
														"nodeType": "YulTypedName",
														"src": "14461:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14469:5:15",
														"nodeType": "YulTypedName",
														"src": "14469:5:15",
														"type": ""
													}
												],
												"src": "14412:143:15"
											},
											{
												"body": {
													"nativeSrc": "14672:552:15",
													"nodeType": "YulBlock",
													"src": "14672:552:15",
													"statements": [
														{
															"body": {
																"nativeSrc": "14718:83:15",
																"nodeType": "YulBlock",
																"src": "14718:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14720:77:15",
																				"nodeType": "YulIdentifier",
																				"src": "14720:77:15"
																			},
																			"nativeSrc": "14720:79:15",
																			"nodeType": "YulFunctionCall",
																			"src": "14720:79:15"
																		},
																		"nativeSrc": "14720:79:15",
																		"nodeType": "YulExpressionStatement",
																		"src": "14720:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14693:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14693:7:15"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14702:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "14702:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14689:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:15"
																		},
																		"nativeSrc": "14689:23:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14689:23:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14714:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14714:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14685:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "14685:3:15"
																},
																"nativeSrc": "14685:32:15",
																"nodeType": "YulFunctionCall",
																"src": "14685:32:15"
															},
															"nativeSrc": "14682:119:15",
															"nodeType": "YulIf",
															"src": "14682:119:15"
														},
														{
															"nativeSrc": "14811:128:15",
															"nodeType": "YulBlock",
															"src": "14811:128:15",
															"statements": [
																{
																	"nativeSrc": "14826:15:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14826:15:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14840:1:15",
																		"nodeType": "YulLiteral",
																		"src": "14840:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14830:6:15",
																			"nodeType": "YulTypedName",
																			"src": "14830:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14855:74:15",
																	"nodeType": "YulAssignment",
																	"src": "14855:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14901:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "14901:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14912:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "14912:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14897:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "14897:3:15"
																				},
																				"nativeSrc": "14897:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "14897:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14921:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "14921:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "14865:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "14865:31:15"
																		},
																		"nativeSrc": "14865:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "14865:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14855:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14855:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "14949:129:15",
															"nodeType": "YulBlock",
															"src": "14949:129:15",
															"statements": [
																{
																	"nativeSrc": "14964:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14964:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14978:2:15",
																		"nodeType": "YulLiteral",
																		"src": "14978:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14968:6:15",
																			"nodeType": "YulTypedName",
																			"src": "14968:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14994:74:15",
																	"nodeType": "YulAssignment",
																	"src": "14994:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15040:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15040:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15051:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15051:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15036:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15036:3:15"
																				},
																				"nativeSrc": "15036:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15036:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15060:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15060:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15004:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "15004:31:15"
																		},
																		"nativeSrc": "15004:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15004:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "14994:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "14994:6:15"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "15088:129:15",
															"nodeType": "YulBlock",
															"src": "15088:129:15",
															"statements": [
																{
																	"nativeSrc": "15103:16:15",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15103:16:15",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15117:2:15",
																		"nodeType": "YulLiteral",
																		"src": "15117:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15107:6:15",
																			"nodeType": "YulTypedName",
																			"src": "15107:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15133:74:15",
																	"nodeType": "YulAssignment",
																	"src": "15133:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15179:9:15",
																						"nodeType": "YulIdentifier",
																						"src": "15179:9:15"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15190:6:15",
																						"nodeType": "YulIdentifier",
																						"src": "15190:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15175:3:15",
																					"nodeType": "YulIdentifier",
																					"src": "15175:3:15"
																				},
																				"nativeSrc": "15175:22:15",
																				"nodeType": "YulFunctionCall",
																				"src": "15175:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15199:7:15",
																				"nodeType": "YulIdentifier",
																				"src": "15199:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "15143:31:15",
																			"nodeType": "YulIdentifier",
																			"src": "15143:31:15"
																		},
																		"nativeSrc": "15143:64:15",
																		"nodeType": "YulFunctionCall",
																		"src": "15143:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "15133:6:15",
																			"nodeType": "YulIdentifier",
																			"src": "15133:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "14561:663:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14626:9:15",
														"nodeType": "YulTypedName",
														"src": "14626:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14637:7:15",
														"nodeType": "YulTypedName",
														"src": "14637:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14649:6:15",
														"nodeType": "YulTypedName",
														"src": "14649:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14657:6:15",
														"nodeType": "YulTypedName",
														"src": "14657:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14665:6:15",
														"nodeType": "YulTypedName",
														"src": "14665:6:15",
														"type": ""
													}
												],
												"src": "14561:663:15"
											},
											{
												"body": {
													"nativeSrc": "15343:34:15",
													"nodeType": "YulBlock",
													"src": "15343:34:15",
													"statements": [
														{
															"nativeSrc": "15353:18:15",
															"nodeType": "YulAssignment",
															"src": "15353:18:15",
															"value": {
																"name": "pos",
																"nativeSrc": "15368:3:15",
																"nodeType": "YulIdentifier",
																"src": "15368:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "15353:11:15",
																	"nodeType": "YulIdentifier",
																	"src": "15353:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15230:147:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15315:3:15",
														"nodeType": "YulTypedName",
														"src": "15315:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "15320:6:15",
														"nodeType": "YulTypedName",
														"src": "15320:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "15331:11:15",
														"nodeType": "YulTypedName",
														"src": "15331:11:15",
														"type": ""
													}
												],
												"src": "15230:147:15"
											},
											{
												"body": {
													"nativeSrc": "15489:8:15",
													"nodeType": "YulBlock",
													"src": "15489:8:15",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "15383:114:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15481:6:15",
														"nodeType": "YulTypedName",
														"src": "15481:6:15",
														"type": ""
													}
												],
												"src": "15383:114:15"
											},
											{
												"body": {
													"nativeSrc": "15666:235:15",
													"nodeType": "YulBlock",
													"src": "15666:235:15",
													"statements": [
														{
															"nativeSrc": "15676:90:15",
															"nodeType": "YulAssignment",
															"src": "15676:90:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15759:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15759:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15764:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15764:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15683:75:15",
																	"nodeType": "YulIdentifier",
																	"src": "15683:75:15"
																},
																"nativeSrc": "15683:83:15",
																"nodeType": "YulFunctionCall",
																"src": "15683:83:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15676:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15676:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15864:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15864:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "15775:88:15",
																	"nodeType": "YulIdentifier",
																	"src": "15775:88:15"
																},
																"nativeSrc": "15775:93:15",
																"nodeType": "YulFunctionCall",
																"src": "15775:93:15"
															},
															"nativeSrc": "15775:93:15",
															"nodeType": "YulExpressionStatement",
															"src": "15775:93:15"
														},
														{
															"nativeSrc": "15877:18:15",
															"nodeType": "YulAssignment",
															"src": "15877:18:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15888:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "15888:3:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15893:1:15",
																		"nodeType": "YulLiteral",
																		"src": "15893:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15884:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15884:3:15"
																},
																"nativeSrc": "15884:11:15",
																"nodeType": "YulFunctionCall",
																"src": "15884:11:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15877:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "15877:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "15503:398:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15654:3:15",
														"nodeType": "YulTypedName",
														"src": "15654:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15662:3:15",
														"nodeType": "YulTypedName",
														"src": "15662:3:15",
														"type": ""
													}
												],
												"src": "15503:398:15"
											},
											{
												"body": {
													"nativeSrc": "16095:191:15",
													"nodeType": "YulBlock",
													"src": "16095:191:15",
													"statements": [
														{
															"nativeSrc": "16106:154:15",
															"nodeType": "YulAssignment",
															"src": "16106:154:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16256:3:15",
																		"nodeType": "YulIdentifier",
																		"src": "16256:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16113:141:15",
																	"nodeType": "YulIdentifier",
																	"src": "16113:141:15"
																},
																"nativeSrc": "16113:147:15",
																"nodeType": "YulFunctionCall",
																"src": "16113:147:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16106:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16106:3:15"
																}
															]
														},
														{
															"nativeSrc": "16270:10:15",
															"nodeType": "YulAssignment",
															"src": "16270:10:15",
															"value": {
																"name": "pos",
																"nativeSrc": "16277:3:15",
																"nodeType": "YulIdentifier",
																"src": "16277:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16270:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16270:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15907:379:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16082:3:15",
														"nodeType": "YulTypedName",
														"src": "16082:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16091:3:15",
														"nodeType": "YulTypedName",
														"src": "16091:3:15",
														"type": ""
													}
												],
												"src": "15907:379:15"
											},
											{
												"body": {
													"nativeSrc": "16418:206:15",
													"nodeType": "YulBlock",
													"src": "16418:206:15",
													"statements": [
														{
															"nativeSrc": "16428:26:15",
															"nodeType": "YulAssignment",
															"src": "16428:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16440:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16440:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16451:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16451:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16436:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16436:3:15"
																},
																"nativeSrc": "16436:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16436:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16428:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16428:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16508:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16508:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16521:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16521:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16532:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16532:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16517:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16517:3:15"
																		},
																		"nativeSrc": "16517:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16517:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16464:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16464:43:15"
																},
																"nativeSrc": "16464:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16464:71:15"
															},
															"nativeSrc": "16464:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16464:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16589:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16589:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16602:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16602:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16613:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16613:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16598:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16598:3:15"
																		},
																		"nativeSrc": "16598:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16598:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16545:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16545:43:15"
																},
																"nativeSrc": "16545:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16545:72:15"
															},
															"nativeSrc": "16545:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16545:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16292:332:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16382:9:15",
														"nodeType": "YulTypedName",
														"src": "16382:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16394:6:15",
														"nodeType": "YulTypedName",
														"src": "16394:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16402:6:15",
														"nodeType": "YulTypedName",
														"src": "16402:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16413:4:15",
														"nodeType": "YulTypedName",
														"src": "16413:4:15",
														"type": ""
													}
												],
												"src": "16292:332:15"
											},
											{
												"body": {
													"nativeSrc": "16784:288:15",
													"nodeType": "YulBlock",
													"src": "16784:288:15",
													"statements": [
														{
															"nativeSrc": "16794:26:15",
															"nodeType": "YulAssignment",
															"src": "16794:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16806:9:15",
																		"nodeType": "YulIdentifier",
																		"src": "16806:9:15"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16817:2:15",
																		"nodeType": "YulLiteral",
																		"src": "16817:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16802:3:15",
																	"nodeType": "YulIdentifier",
																	"src": "16802:3:15"
																},
																"nativeSrc": "16802:18:15",
																"nodeType": "YulFunctionCall",
																"src": "16802:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16794:4:15",
																	"nodeType": "YulIdentifier",
																	"src": "16794:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16874:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16874:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16887:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16887:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16898:1:15",
																				"nodeType": "YulLiteral",
																				"src": "16898:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16883:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16883:3:15"
																		},
																		"nativeSrc": "16883:17:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16883:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16830:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16830:43:15"
																},
																"nativeSrc": "16830:71:15",
																"nodeType": "YulFunctionCall",
																"src": "16830:71:15"
															},
															"nativeSrc": "16830:71:15",
															"nodeType": "YulExpressionStatement",
															"src": "16830:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16955:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "16955:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16968:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "16968:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16979:2:15",
																				"nodeType": "YulLiteral",
																				"src": "16979:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16964:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "16964:3:15"
																		},
																		"nativeSrc": "16964:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "16964:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16911:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16911:43:15"
																},
																"nativeSrc": "16911:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16911:72:15"
															},
															"nativeSrc": "16911:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16911:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17037:6:15",
																		"nodeType": "YulIdentifier",
																		"src": "17037:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17050:9:15",
																				"nodeType": "YulIdentifier",
																				"src": "17050:9:15"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17061:2:15",
																				"nodeType": "YulLiteral",
																				"src": "17061:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17046:3:15",
																			"nodeType": "YulIdentifier",
																			"src": "17046:3:15"
																		},
																		"nativeSrc": "17046:18:15",
																		"nodeType": "YulFunctionCall",
																		"src": "17046:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16993:43:15",
																	"nodeType": "YulIdentifier",
																	"src": "16993:43:15"
																},
																"nativeSrc": "16993:72:15",
																"nodeType": "YulFunctionCall",
																"src": "16993:72:15"
															},
															"nativeSrc": "16993:72:15",
															"nodeType": "YulExpressionStatement",
															"src": "16993:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16630:442:15",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16740:9:15",
														"nodeType": "YulTypedName",
														"src": "16740:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16752:6:15",
														"nodeType": "YulTypedName",
														"src": "16752:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16760:6:15",
														"nodeType": "YulTypedName",
														"src": "16760:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16768:6:15",
														"nodeType": "YulTypedName",
														"src": "16768:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16779:4:15",
														"nodeType": "YulTypedName",
														"src": "16779:4:15",
														"type": ""
													}
												],
												"src": "16630:442:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function convert_t_contract$_IUniswapV2Router02_$1509_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Router02_$1509_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Router02_$1509_to_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint112(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint112_to_t_uint112(value, pos) {\n        mstore(pos, cleanup_t_uint112(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    // struct Presale.PresaleOptions -> struct Presale.PresaleOptions\n    function abi_encode_t_struct$_PresaleOptions_$1563_memory_ptr_to_t_struct$_PresaleOptions_$1563_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenDeposit\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // hardCap\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // softCap\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // max\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // min\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // start\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint112_to_t_uint112(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // end\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint112_to_t_uint112(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // liquidityBps\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380_t_contract$_IUniswapV2Router02_$1509_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_address_t_uint8_t_struct$_PresaleOptions_$1563_memory_ptr__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 512)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IUniswapV2Router02_$1509_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_struct$_PresaleOptions_$1563_memory_ptr_to_t_struct$_PresaleOptions_$1563_memory_ptr_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e(memPtr) {\n\n        mstore(add(memPtr, 0), \"NotWhitelisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f6575f3560e01c8063715018a611610089578063d0e30db011610058578063d0e30db014610315578063ea8a1af01461033f578063ed498fa814610369578063f2fde38b146103a557610107565b8063715018a6146102715780637f649783146102875780638da5cb5b146102af5780639b19251a146102d957610107565b80634bb278f3116100c55780634bb278f3146101cb5780634e71d92d146101f5578063548db1741461021f578063590e1ae31461024757610107565b8063052d9e7e1461010b57806316f0115b14610133578063184d69ab1461016557806342e94c901461018f57610107565b366101075761010533346103cd565b005b5f5ffd5b348015610116575f5ffd5b50610131600480360381019061012c9190611ba3565b6104a7565b005b34801561013e575f5ffd5b506101476104cb565b60405161015c99989796959493929190611db0565b60405180910390f35b348015610170575f5ffd5b50610179610659565b6040516101869190611e4a565b60405180910390f35b34801561019a575f5ffd5b506101b560048036038101906101b09190611e8d565b61066b565b6040516101c29190611eb8565b60405180910390f35b3480156101d6575f5ffd5b506101df610680565b6040516101ec9190611e4a565b60405180910390f35b348015610200575f5ffd5b50610209610886565b6040516102169190611eb8565b60405180910390f35b34801561022a575f5ffd5b5061024560048036038101906102409190611f32565b610a87565b005b348015610252575f5ffd5b5061025b610b2c565b6040516102689190611eb8565b60405180910390f35b34801561027c575f5ffd5b50610285610d5d565b005b348015610292575f5ffd5b506102ad60048036038101906102a89190611f32565b610d70565b005b3480156102ba575f5ffd5b506102c3610e16565b6040516102d09190611f7d565b60405180910390f35b3480156102e4575f5ffd5b506102ff60048036038101906102fa9190611e8d565b610e3d565b60405161030c9190611e4a565b60405180910390f35b348015610320575f5ffd5b50610329610e5a565b6040516103369190611eb8565b60405180910390f35b34801561034a575f5ffd5b50610353610fec565b6040516103609190611e4a565b60405180910390f35b348015610374575f5ffd5b5061038f600480360381019061038a9190611e8d565b611144565b60405161039c9190611eb8565b60405180910390f35b3480156103b0575f5ffd5b506103cb60048036038101906103c69190611e8d565b6111e4565b005b6103d5611268565b6103df82826112b7565b8060036005015f8282546103f39190611fc3565b925050819055508060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546104469190611fc3565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632826040516104939190611eb8565b60405180910390a26104a361158e565b5050565b6104af611597565b8060105f6101000a81548160ff02191690831515021790555050565b6003805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060160149054906101000a900460ff169080600701604051806101000160405290815f820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200160058201600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff16815260200160058201601c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905089565b60105f9054906101000a900460ff1681565b6002602052805f5260405f205f915090505481565b5f610689611597565b610691611268565b6002600360060160149054906101000a900460ff1660ff16146106fd57600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016106f49190611ff6565b60405180910390fd5b60036007016002015460036005015410801561074a57506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642105b15610781576040517f2bdc91ad00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6004600360060160146101000a81548160ff021916908360ff1602179055505f6107a961161e565b90506107ba81600360040154611660565b60036004015460036002015f8282546107d3919061200f565b925050819055505f816003600501546107ec919061200f565b90505f8111156108205761081f813373ffffffffffffffffffffffffffffffffffffffff1661179490919063ffffffff16565b5b3373ffffffffffffffffffffffffffffffffffffffff167f616c9469db50815ae0f1d0a020d9fc9060da7c57f03559afb0d4ebdaa0a3a05e6003600501544260405161086d929190612042565b60405180910390a260019250505061088361158e565b90565b5f61088f611268565b6004600360060160149054906101000a900460ff1660ff16146108fb57600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016108f29190611ff6565b60405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610971576040517f6247a84e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f61097b33611144565b90505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508060036002015f8282546109d3919061200f565b92505081905550610a28338260035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185a9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f30c2341ba3f2142e78472f07dcf018a42044ae1c2c2e7ce867b327257f07ef2b8242604051610a70929190612042565b60405180910390a280915050610a8461158e565b90565b610a8f611597565b5f5f90505b82829050811015610b27575f60115f858585818110610ab657610ab5612069565b5b9050602002016020810190610acb9190611e8d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610a94565b505050565b5f5f60038060060160149054906101000a900460ff1660ff161480610b9a57506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642118015610b995750600360070160020154600360050154105b5b905080610bd3576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bdb611268565b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205403610c51576040517f3742d1f600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610cfd813373ffffffffffffffffffffffffffffffffffffffff1661179490919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb68242604051610d45929190612042565b60405180910390a280925050610d5961158e565b5090565b610d65611597565b610d6e5f6118d9565b565b610d78611597565b5f5f90505b82829050811015610e1157600160115f858585818110610da057610d9f612069565b5b9050602002016020810190610db59190611e8d565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508080600101915050610d7d565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6011602052805f5260405f205f915054906101000a900460ff1681565b5f610e63611597565b6001600360060160149054906101000a900460ff1660ff1614610ecf57600360060160149054906101000a900460ff166040517fd07e8976000000000000000000000000000000000000000000000000000000008152600401610ec69190611ff6565b60405180910390fd5b6002600360060160146101000a81548160ff021916908360ff16021790555060036007015f015460036002015f828254610f099190611fc3565b92505081905550610f1861199a565b600360040181905550610f296119de565b6003800181905550610f88333060036007015f015460035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119fe909392919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560036007015f015442604051610fd7929190612042565b60405180910390a260036007015f0154905090565b5f610ff5611597565b60038060060160149054906101000a900460ff1660ff16111561106157600360060160149054906101000a900460ff166040517fd07e89760000000000000000000000000000000000000000000000000000000081526004016110589190611ff6565b60405180910390fd5b60038060060160146101000a81548160ff021916908360ff1602179055505f60036002015411156110ef575f60036002015490505f6003600201819055506110ed338260035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661185a9092919063ffffffff16565b505b3373ffffffffffffffffffffffffffffffffffffffff167f27f83af92b39768b17fe0c8d6922452702717efb8626d97e7a754e0b27d4f6d2426040516111359190611eb8565b60405180910390a26001905090565b5f5f60036005015403611159575f90506111df565b670de0b6b3a76400006003800154600360050154670de0b6b3a764000060025f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111be9190612096565b6111c89190612104565b6111d29190612096565b6111dc9190612104565b90505b919050565b6111ec611597565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361125c575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016112539190611f7d565b60405180910390fd5b611265816118d9565b50565b6002600154036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a49061218e565b60405180910390fd5b6002600181905550565b6002600360060160149054906101000a900460ff1660ff161461132357600360060160149054906101000a900460ff166040517fd07e897600000000000000000000000000000000000000000000000000000000815260040161131a9190611ff6565b60405180910390fd5b60036007016005015f9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642108061139357506003600701600501600e9054906101000a90046dffffffffffffffffffffffffffff166dffffffffffffffffffffffffffff1642115b156113ca576040517fe3840bc400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360070160010154816003600501546113e49190611fc3565b111561141c576040517f283452da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036007016004015481101561145e576040517fbd70f35d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60036007016003015460025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054826114b09190611fc3565b11156114e8576040517f5a99681c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60105f9054906101000a900460ff16801561154a575060115f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16155b1561158a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611581906121f6565b60405180910390fd5b5050565b60018081905550565b61159f611a80565b73ffffffffffffffffffffffffffffffffffffffff166115bd610e16565b73ffffffffffffffffffffffffffffffffffffffff161461161c576115e0611a80565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116139190611f7d565b60405180910390fd5b565b5f6127106003600701600501601c9054906101000a900463ffffffff1663ffffffff166003600501546116519190612096565b61165b9190612104565b905090565b5f5f60036001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f305d7198560035f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff168687896116d2610e16565b610258426116e09190611fc3565b6040518863ffffffff1660e01b815260040161170196959493929190612214565b60606040518083038185885af115801561171d573d5f5f3e3d5ffd5b50505050506040513d601f19601f82011682018060405250810190611742919061229d565b50915091508282141580156117575750838114155b1561178e576040517feda12fe600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050565b804710156117db5747816040517fcf4791810000000000000000000000000000000000000000000000000000000081526004016117d2929190612042565b60405180910390fd5b5f5f8373ffffffffffffffffffffffffffffffffffffffff16836040516118019061231a565b5f6040518083038185875af1925050503d805f811461183b576040519150601f19603f3d011682016040523d82523d5f602084013e611840565b606091505b5091509150816118545761185381611a87565b5b50505050565b6118d4838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161188d92919061232e565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611acb565b505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6127106003600701600501601c9054906101000a900463ffffffff1663ffffffff1660036007015f01546119cf9190612096565b6119d99190612104565b905090565b5f6119e761199a565b60036007015f01546119f9919061200f565b905090565b611a7a848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611a3393929190612355565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611acb565b50505050565b5f33905090565b5f81511115611a995780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f60205f8451602086015f885af180611aea576040513d5f823e3d81fd5b3d92505f519150505f8214611b03576001811415611b1e565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611b6057836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611b579190611f7d565b60405180910390fd5b50505050565b5f5ffd5b5f5ffd5b5f8115159050919050565b611b8281611b6e565b8114611b8c575f5ffd5b50565b5f81359050611b9d81611b79565b92915050565b5f60208284031215611bb857611bb7611b66565b5b5f611bc584828501611b8f565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f611c10611c0b611c0684611bce565b611bed565b611bce565b9050919050565b5f611c2182611bf6565b9050919050565b5f611c3282611c17565b9050919050565b611c4281611c28565b82525050565b5f611c5282611c17565b9050919050565b611c6281611c48565b82525050565b5f819050919050565b611c7a81611c68565b82525050565b5f611c8a82611bce565b9050919050565b611c9a81611c80565b82525050565b5f60ff82169050919050565b611cb581611ca0565b82525050565b611cc481611c68565b82525050565b5f6dffffffffffffffffffffffffffff82169050919050565b611cec81611cca565b82525050565b5f63ffffffff82169050919050565b611d0a81611cf2565b82525050565b61010082015f820151611d255f850182611cbb565b506020820151611d386020850182611cbb565b506040820151611d4b6040850182611cbb565b506060820151611d5e6060850182611cbb565b506080820151611d716080850182611cbb565b5060a0820151611d8460a0850182611ce3565b5060c0820151611d9760c0850182611ce3565b5060e0820151611daa60e0850182611d01565b50505050565b5f61020082019050611dc45f83018c611c39565b611dd1602083018b611c59565b611dde604083018a611c71565b611deb6060830189611c71565b611df86080830188611c71565b611e0560a0830187611c71565b611e1260c0830186611c91565b611e1f60e0830185611cac565b611e2d610100830184611d10565b9a9950505050505050505050565b611e4481611b6e565b82525050565b5f602082019050611e5d5f830184611e3b565b92915050565b611e6c81611c80565b8114611e76575f5ffd5b50565b5f81359050611e8781611e63565b92915050565b5f60208284031215611ea257611ea1611b66565b5b5f611eaf84828501611e79565b91505092915050565b5f602082019050611ecb5f830184611c71565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112611ef257611ef1611ed1565b5b8235905067ffffffffffffffff811115611f0f57611f0e611ed5565b5b602083019150836020820283011115611f2b57611f2a611ed9565b5b9250929050565b5f5f60208385031215611f4857611f47611b66565b5b5f83013567ffffffffffffffff811115611f6557611f64611b6a565b5b611f7185828601611edd565b92509250509250929050565b5f602082019050611f905f830184611c91565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611fcd82611c68565b9150611fd883611c68565b9250828201905080821115611ff057611fef611f96565b5b92915050565b5f6020820190506120095f830184611cac565b92915050565b5f61201982611c68565b915061202483611c68565b925082820390508181111561203c5761203b611f96565b5b92915050565b5f6040820190506120555f830185611c71565b6120626020830184611c71565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6120a082611c68565b91506120ab83611c68565b92508282026120b981611c68565b915082820484148315176120d0576120cf611f96565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61210e82611c68565b915061211983611c68565b925082612129576121286120d7565b5b828204905092915050565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612178601f83612134565b915061218382612144565b602082019050919050565b5f6020820190508181035f8301526121a58161216c565b9050919050565b7f4e6f7457686974656c69737465640000000000000000000000000000000000005f82015250565b5f6121e0600e83612134565b91506121eb826121ac565b602082019050919050565b5f6020820190508181035f83015261220d816121d4565b9050919050565b5f60c0820190506122275f830189611c91565b6122346020830188611c71565b6122416040830187611c71565b61224e6060830186611c71565b61225b6080830185611c91565b61226860a0830184611c71565b979650505050505050565b61227c81611c68565b8114612286575f5ffd5b50565b5f8151905061229781612273565b92915050565b5f5f5f606084860312156122b4576122b3611b66565b5b5f6122c186828701612289565b93505060206122d286828701612289565b92505060406122e386828701612289565b9150509250925092565b5f81905092915050565b50565b5f6123055f836122ed565b9150612310826122f7565b5f82019050919050565b5f612324826122fa565b9150819050919050565b5f6040820190506123415f830185611c91565b61234e6020830184611c71565b9392505050565b5f6060820190506123685f830186611c91565b6123756020830185611c91565b6123826040830184611c71565b94935050505056fea264697066735822122078ef971a7cea222bf3ed048b44a9612aa1142ba9d2b023511839a5410217c9ea64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xEA8A1AF0 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xED498FA8 EQ PUSH2 0x369 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A5 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x7F649783 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x2D9 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x4BB278F3 GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x4BB278F3 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x548DB174 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x590E1AE3 EQ PUSH2 0x247 JUMPI PUSH2 0x107 JUMP JUMPDEST DUP1 PUSH4 0x52D9E7E EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x184D69AB EQ PUSH2 0x165 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x18F JUMPI PUSH2 0x107 JUMP JUMPDEST CALLDATASIZE PUSH2 0x107 JUMPI PUSH2 0x105 CALLER CALLVALUE PUSH2 0x3CD JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1BA3 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x147 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15C SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x170 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1DF PUSH2 0x680 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x200 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x209 PUSH2 0x886 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x25B PUSH2 0xB2C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x285 PUSH2 0xD5D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1F32 JUMP JUMPDEST PUSH2 0xD70 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C3 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x329 PUSH2 0xE5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x353 PUSH2 0xFEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x38F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH2 0x11E4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x3DF DUP3 DUP3 PUSH2 0x12B7 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2499A5330AB0979CC612135E7883EBC3CD5C9F7A8508F042540C34723348F632 DUP3 PUSH1 0x40 MLOAD PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x4A3 PUSH2 0x158E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4AF PUSH2 0x1597 JUMP JUMPDEST DUP1 PUSH1 0x10 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x689 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x6FD JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F4 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD LT DUP1 ISZERO PUSH2 0x74A JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT JUMPDEST ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x2BDC91AD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x7A9 PUSH2 0x161E JUMP JUMPDEST SWAP1 POP PUSH2 0x7BA DUP2 PUSH1 0x3 PUSH1 0x4 ADD SLOAD PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 ADD SLOAD PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7D3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x7EC SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x820 JUMPI PUSH2 0x81F DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x616C9469DB50815AE0F1D0A020D9FC9060DA7C57F03559AFB0D4EBDAA0A3A05E PUSH1 0x3 PUSH1 0x5 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x86D SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x883 PUSH2 0x158E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x88F PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x8FB JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x971 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6247A84E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x97B CALLER PUSH2 0x1144 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9D3 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xA28 CALLER DUP3 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x30C2341BA3F2142E78472F07DCF018A42044AE1C2C2E7CE867B327257F07EF2B DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xA70 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP2 POP POP PUSH2 0xA84 PUSH2 0x158E JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xA8F PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xB27 JUMPI PUSH0 PUSH1 0x11 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0x2069 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xACB SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA94 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ DUP1 PUSH2 0xB9A JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP GT DUP1 ISZERO PUSH2 0xB99 JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x2 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD LT JUMPDEST JUMPDEST SWAP1 POP DUP1 PUSH2 0xBD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBDB PUSH2 0x1268 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3742D1F600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xCFD DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1794 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x73F04AF9DCC582A923EC15D3EEA990FE34ADABFFF2879E28D44572E01A54ABB6 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xD45 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP PUSH2 0xD59 PUSH2 0x158E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xD65 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0xD6E PUSH0 PUSH2 0x18D9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xD78 PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP JUMPDEST DUP3 DUP3 SWAP1 POP DUP2 LT ISZERO PUSH2 0xE11 JUMPI PUSH1 0x1 PUSH1 0x11 PUSH0 DUP6 DUP6 DUP6 DUP2 DUP2 LT PUSH2 0xDA0 JUMPI PUSH2 0xD9F PUSH2 0x2069 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xDB5 SWAP2 SWAP1 PUSH2 0x1E8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xD7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE63 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0xECF JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC6 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH1 0x3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF09 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF18 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF29 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x3 DUP1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xF88 CALLER ADDRESS PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19FE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xFD7 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xFF5 PUSH2 0x1597 JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND GT ISZERO PUSH2 0x1061 JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x6 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x10EF JUMPI PUSH0 PUSH1 0x3 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x10ED CALLER DUP3 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x185A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27F83AF92B39768B17FE0C8D6922452702717EFB8626D97E7A754E0B27D4F6D2 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1135 SWAP2 SWAP1 PUSH2 0x1EB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x5 ADD SLOAD SUB PUSH2 0x1159 JUMPI PUSH0 SWAP1 POP PUSH2 0x11DF JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x3 DUP1 ADD SLOAD PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11BE SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST PUSH2 0x11D2 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x11DC SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EC PUSH2 0x1597 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x125C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1265 DUP2 PUSH2 0x18D9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ PUSH2 0x1323 JUMPI PUSH1 0x3 PUSH1 0x6 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH32 0xD07E897600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP2 SWAP1 PUSH2 0x1FF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP LT DUP1 PUSH2 0x1393 JUMPI POP PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0xE SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x13CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE3840BC400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x1 ADD SLOAD DUP2 PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x13E4 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST GT ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH32 0x283452DA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x4 ADD SLOAD DUP2 LT ISZERO PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD70F35D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x3 ADD SLOAD PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP3 PUSH2 0x14B0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST GT ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A99681C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x10 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x154A JUMPI POP PUSH1 0x11 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1581 SWAP1 PUSH2 0x21F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x159F PUSH2 0x1A80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15BD PUSH2 0xE16 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x161C JUMPI PUSH2 0x15E0 PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x5 ADD SLOAD PUSH2 0x1651 SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x165B SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF305D719 DUP6 PUSH1 0x3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP8 DUP10 PUSH2 0x16D2 PUSH2 0xE16 JUMP JUMPDEST PUSH2 0x258 TIMESTAMP PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x1FC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1701 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x171D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x229D JUMP JUMPDEST POP SWAP2 POP SWAP2 POP DUP3 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1757 JUMPI POP DUP4 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x178E JUMPI PUSH1 0x40 MLOAD PUSH32 0xEDA12FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x17DB JUMPI SELFBALANCE DUP2 PUSH1 0x40 MLOAD PUSH32 0xCF47918100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D2 SWAP3 SWAP2 SWAP1 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1801 SWAP1 PUSH2 0x231A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x183B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1840 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1854 JUMPI PUSH2 0x1853 DUP2 PUSH2 0x1A87 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x18D4 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x188D SWAP3 SWAP2 SWAP1 PUSH2 0x232E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1ACB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH1 0x3 PUSH1 0x7 ADD PUSH1 0x5 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH2 0x19CF SWAP2 SWAP1 PUSH2 0x2096 JUMP JUMPDEST PUSH2 0x19D9 SWAP2 SWAP1 PUSH2 0x2104 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x19E7 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x7 ADD PUSH0 ADD SLOAD PUSH2 0x19F9 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A7A DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1A33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1ACB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1A99 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1AEA JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1B03 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1B1E JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1B60 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B57 SWAP2 SWAP1 PUSH2 0x1F7D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B82 DUP2 PUSH2 0x1B6E JUMP JUMPDEST DUP2 EQ PUSH2 0x1B8C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9D DUP2 PUSH2 0x1B79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB8 JUMPI PUSH2 0x1BB7 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C10 PUSH2 0x1C0B PUSH2 0x1C06 DUP5 PUSH2 0x1BCE JUMP JUMPDEST PUSH2 0x1BED JUMP JUMPDEST PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C21 DUP3 PUSH2 0x1BF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C32 DUP3 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C42 DUP2 PUSH2 0x1C28 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C52 DUP3 PUSH2 0x1C17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C62 DUP2 PUSH2 0x1C48 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C7A DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C8A DUP3 PUSH2 0x1BCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C9A DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CB5 DUP2 PUSH2 0x1CA0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CEC DUP2 PUSH2 0x1CCA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D0A DUP2 PUSH2 0x1CF2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1D25 PUSH0 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1D38 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1D4B PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1D5E PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1D71 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1CBB JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x1D84 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x1D97 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1CE3 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x1DAA PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1D01 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200 DUP3 ADD SWAP1 POP PUSH2 0x1DC4 PUSH0 DUP4 ADD DUP13 PUSH2 0x1C39 JUMP JUMPDEST PUSH2 0x1DD1 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x1DDE PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1DEB PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1DF8 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1E05 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x1E12 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x1E1F PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x1E2D PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x1D10 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1E44 DUP2 PUSH2 0x1B6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E5D PUSH0 DUP4 ADD DUP5 PUSH2 0x1E3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E6C DUP2 PUSH2 0x1C80 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E76 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E87 DUP2 PUSH2 0x1E63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH2 0x1EA1 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EAF DUP5 DUP3 DUP6 ADD PUSH2 0x1E79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECB PUSH0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1EF2 JUMPI PUSH2 0x1EF1 PUSH2 0x1ED1 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0E PUSH2 0x1ED5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1F2B JUMPI PUSH2 0x1F2A PUSH2 0x1ED9 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F48 JUMPI PUSH2 0x1F47 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F65 JUMPI PUSH2 0x1F64 PUSH2 0x1B6A JUMP JUMPDEST JUMPDEST PUSH2 0x1F71 DUP6 DUP3 DUP7 ADD PUSH2 0x1EDD JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F90 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1FCD DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD8 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1FF0 JUMPI PUSH2 0x1FEF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2009 PUSH0 DUP4 ADD DUP5 PUSH2 0x1CAC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2019 DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2024 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x203C JUMPI PUSH2 0x203B PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2055 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x2062 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20A0 DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x20AB DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x20B9 DUP2 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20D0 JUMPI PUSH2 0x20CF PUSH2 0x1F96 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x210E DUP3 PUSH2 0x1C68 JUMP JUMPDEST SWAP2 POP PUSH2 0x2119 DUP4 PUSH2 0x1C68 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2129 JUMPI PUSH2 0x2128 PUSH2 0x20D7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2178 PUSH1 0x1F DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP PUSH2 0x2183 DUP3 PUSH2 0x2144 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21A5 DUP2 PUSH2 0x216C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7457686974656C6973746564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E0 PUSH1 0xE DUP4 PUSH2 0x2134 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EB DUP3 PUSH2 0x21AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x220D DUP2 PUSH2 0x21D4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x2227 PUSH0 DUP4 ADD DUP10 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2234 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x2241 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x224E PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1C71 JUMP JUMPDEST PUSH2 0x225B PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2268 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x227C DUP2 PUSH2 0x1C68 JUMP JUMPDEST DUP2 EQ PUSH2 0x2286 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2297 DUP2 PUSH2 0x2273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22B4 JUMPI PUSH2 0x22B3 PUSH2 0x1B66 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22C1 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22D2 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x22E3 DUP7 DUP3 DUP8 ADD PUSH2 0x2289 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2305 PUSH0 DUP4 PUSH2 0x22ED JUMP JUMPDEST SWAP2 POP PUSH2 0x2310 DUP3 PUSH2 0x22F7 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2324 DUP3 PUSH2 0x22FA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2341 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x234E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2368 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2375 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x2382 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C71 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0xEF971A7CEA222BF3ED048B44A9612AA1142BA9D2B023511839 0xA5 COINBASE MUL OR 0xC9 0xEA PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "695:15212:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5120:32;5130:10;5142:9;5120;:32::i;:::-;695:15212;;;;;11467:109;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3536:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;3663:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3403:48;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9297:1114;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7536:701;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11928:194;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8399:406;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;11659:188:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3707:41:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5722:946;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10659:513;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14056:337;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7082:269:13;2261:21:4;:19;:21::i;:::-;7169:41:13::1;7190:11;7203:6;7169:20;:41::i;:::-;7239:6;7221:4;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;7285:6;7255:13;:26;7269:11;7255:26;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;7324:11;7315:29;;;7337:6;7315:29;;;;;;:::i;:::-;;;;;;;;2303:20:4::0;:18;:20::i;:::-;7082:269:13;;:::o;11467:109::-;1531:13:0;:11;:13::i;:::-;11561:8:13::1;11540:18;;:29;;;;;;;;;;;;;;;;;;11467:109:::0;:::o;3536:16::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3663:38::-;;;;;;;;;;;;;:::o;3403:48::-;;;;;;;;;;;;;;;;;:::o;9297:1114::-;9358:4;1531:13:0;:11;:13::i;:::-;2261:21:4::1;:19;:21::i;:::-;9392:1:13::2;9378:4;:10;;;;;;;;;;;;:15;;;9374:52;;9415:4;:10;;;;;;;;;;;;9402:24;;;;;;;;;;;:::i;:::-;;;;;;;;9374:52;9598:4;:12;;:20;;;9581:4;:14;;;:37;:75;;;;;9640:4;:12;;:16;;;;;;;;;;;;9622:34;;:15;:34;9581:75;9577:132;;;9679:19;;;;;;;;;;;;;;9577:132;9796:1;9783:4;:10;;;:14;;;;;;;;;;;;;;;;;;9905:20;9928:18;:16;:18::i;:::-;9905:41;;9956:44;9965:12;9979:4;:20;;;9956:8;:44::i;:::-;10031:4;:20;;;10010:4;:17;;;:41;;;;;;;:::i;:::-;;;;;;;;10162:20;10202:12;10185:4;:14;;;:29;;;;:::i;:::-;10162:52;;10243:1;10228:12;:16;10224:90;;;10260:43;10290:12;10268:10;10260:29;;;;:43;;;;:::i;:::-;10224:90;10339:10;10329:54;;;10351:4;:14;;;10367:15;10329:54;;;;;;;:::i;:::-;;;;;;;;10400:4;10393:11;;;;2303:20:4::1;:18;:20::i;:::-;9297:1114:13::0;:::o;7536:701::-;7584:7;2261:21:4;:19;:21::i;:::-;7704:1:13::1;7690:4;:10;;;;;;;;;;;;:15;;;7686:52;;7727:4;:10;;;;;;;;;;;;7714:24;;;;;;;;;;;:::i;:::-;;;;;;;;7686:52;7839:1;7810:13;:25;7824:10;7810:25;;;;;;;;;;;;;;;;:30:::0;7806:57:::1;;7849:14;;;;;;;;;;;;;;7806:57;7874:14;7891:22;7902:10;7891;:22::i;:::-;7874:39;;7951:1;7923:13;:25;7937:10;7923:25;;;;;;;;;;;;;;;:29;;;;8076:6;8055:4;:17;;;:27;;;;;;;:::i;:::-;;;;;;;;8101:43;8125:10;8137:6;8101:4;:10;;;;;;;;;;;;:23;;;;:43;;;;;:::i;:::-;8171:10;8160:47;;;8183:6;8191:15;8160:47;;;;;;;:::i;:::-;;;;;;;;8224:6;8217:13;;;2303:20:4::0;:18;:20::i;:::-;7536:701:13;:::o;11928:194::-;1531:13:0;:11;:13::i;:::-;12020:9:13::1;12032:1;12020:13;;12015:101;12039:8;;:15;;12035:1;:19;12015:101;;;12100:5;12075:9;:22;12085:8;;12094:1;12085:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;12075:22;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;12056:3;;;;;;;12015:101;;;;11928:194:::0;;:::o;8399:406::-;8463:7;3973:14;4018:1;4004:4;:10;;;;;;;;;;;;:15;;;:108;;;;4054:4;:12;;:16;;;;;;;;;;;;4036:34;;:15;:34;:75;;;;;4091:4;:12;;:20;;;4074:4;:14;;;:37;4036:75;4004:108;3973:149;;4137:9;4132:38;;4155:15;;;;;;;;;;;;;;4132:38;2261:21:4::1;:19;:21::i;:::-;8515:1:13::2;8486:13;:25;8500:10;8486:25;;;;;;;;;;;;;;;;:30:::0;8482:58:::2;;8525:15;;;;;;;;;;;;;;8482:58;8551:14;8568:13;:25;8582:10;8568:25;;;;;;;;;;;;;;;;8551:42;;8631:1;8603:13;:25;8617:10;8603:25;;;;;;;;;;;;;;;:29;;;;8679:37;8709:6;8687:10;8679:29;;;;:37;;;;:::i;:::-;8739:10;8732:43;;;8751:6;8759:15;8732:43;;;;;;;:::i;:::-;;;;;;;;8792:6;8785:13;;;2303:20:4::1;:18;:20::i;:::-;3963:225:13::0;8399:406;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;11659:188:13:-;1531:13:0;:11;:13::i;:::-;11746:9:13::1;11758:1;11746:13;;11741:100;11765:8;;:15;;11761:1;:19;11741:100;;;11826:4;11801:9;:22;11811:8;;11820:1;11811:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;11801:22;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;11782:3;;;;;;;11741:100;;;;11659:188:::0;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3707:41:13:-;;;;;;;;;;;;;;;;;;;;;;:::o;5722:946::-;5769:7;1531:13:0;:11;:13::i;:::-;5907:1:13::1;5893:4;:10;;;;;;;;;;;;:15;;;5889:52;;5930:4;:10;;;;;;;;;;;;5917:24;;;;;;;;;;;:::i;:::-;;;;;;;;5889:52;6026:1;6013:4;:10;;;:14;;;;;;;;;;;;;;;;;;6198:4;:12;;:25;;;6177:4;:17;;;:46;;;;;;;:::i;:::-;;;;;;;;6256:21;:19;:21::i;:::-;6233:4;:20;;:44;;;;6310:19;:17;:19::i;:::-;6287:4;:20:::0;::::1;:42;;;;6459:81;6487:10;6507:4;6514;:12;;:25;;;6459:4;:10;;;;;;;;;;;;:27;;;;:81;;;;;;:::i;:::-;6564:10;6556:63;;;6576:4;:12;;:25;;;6603:15;6556:63;;;;;;;:::i;:::-;;;;;;;;6636:4;:12;;:25;;;6629:32;;5722:946:::0;:::o;10659:513::-;10704:4;1531:13:0;:11;:13::i;:::-;10737:1:13::1;10724:4:::0;:10:::1;;;;;;;;;;;;:14;;;10720:51;;;10760:4;:10;;;;;;;;;;;;10747:24;;;;;;;;;;;:::i;:::-;;;;;;;;10720:51;10795:1;10782:4:::0;:10:::1;;;:14;;;;;;;;;;;;;;;;;;10940:1;10920:4;:17;;;:21;10916:178;;;10957:14;10974:4;:17;;;10957:34;;11025:1;11005:4;:17;;:21;;;;11040:43;11064:10;11076:6;11040:4;:10;;;;;;;;;;;;:23;;;;:43;;;;;:::i;:::-;10943:151;10916:178;11116:10;11109:35;;;11128:15;11109:35;;;;;;:::i;:::-;;;;;;;;11161:4;11154:11;;10659:513:::0;:::o;14056:337::-;14118:7;14248:1;14230:4;:14;;;:19;14226:33;;14258:1;14251:8;;;;14226:33;947:6;14346:4;:20;;;14316:4;:14;;;947:6;14278:13;:26;14292:11;14278:26;;;;;;;;;;;;;;;;:34;;;;:::i;:::-;14277:53;;;;:::i;:::-;14276:90;;;;:::i;:::-;:110;;;;:::i;:::-;14269:117;;14056:337;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;12414:949:13:-;12525:1;12511:4;:10;;;;;;;;;;;;:15;;;12507:52;;12548:4;:10;;;;;;;;;;;;12535:24;;;;;;;;;;;:::i;:::-;;;;;;;;12507:52;12634:4;:12;;:18;;;;;;;;;;;;12616:36;;:15;:36;:74;;;;12674:4;:12;;:16;;;;;;;;;;;;12656:34;;:15;:34;12616:74;12612:133;;;12713:21;;;;;;;;;;;;;;12612:133;12823:4;:12;;:20;;;12813:7;12796:4;:14;;;:24;;;;:::i;:::-;:47;12792:100;;;12866:15;;;;;;;;;;;;;;12792:100;12949:4;:12;;:16;;;12939:7;:26;12935:86;;;12988:22;;;;;;;;;;;;;;12935:86;13108:4;:12;;:16;;;13078:13;:27;13092:12;13078:27;;;;;;;;;;;;;;;;13068:7;:37;;;;:::i;:::-;:56;13064:115;;;13147:21;;;;;;;;;;;;;;13064:115;13260:18;;;;;;;;;;;:46;;;;;13283:9;:23;13293:12;13283:23;;;;;;;;;;;;;;;;;;;;;;;;;13282:24;13260:46;13256:101;;;13322:24;;;;;;;;;;:::i;:::-;;;;;;;;13256:101;12414:949;;:::o;2629:209:4:-;1716:1;2809:7;:22;;;;2629:209::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;14998:134:13:-;15049:7;15120:5;15092:4;:12;;:25;;;;;;;;;;;;15075:42;;:4;:14;;;:42;;;;:::i;:::-;:50;;;;:::i;:::-;15068:57;;14998:134;:::o;15262:643::-;15341:16;15359:14;15391:4;:22;;;;;;;;;;;;:38;;;15438:10;15475:4;:10;;;;;;;;;;;;15504:12;15534;15653:10;15707:7;:5;:7::i;:::-;15750:3;15732:15;:21;;;;:::i;:::-;15391:376;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15340:427;;;;;15805:12;15790:11;:27;;:54;;;;;15834:10;15821:9;:23;;15790:54;15786:113;;;15867:21;;;;;;;;;;;;;;15786:113;15330:575;;15262:643;;:::o;1290:365:7:-;1399:6;1375:21;:30;1371:125;;;1455:21;1478:6;1428:57;;;;;;;;;;;;:::i;:::-;;;;;;;;1371:125;1507:12;1521:23;1548:9;:14;;1570:6;1548:33;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1506:75;;;;1596:7;1591:58;;1619:19;1627:10;1619:7;:19::i;:::-;1591:58;1361:294;;1290:365;;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;14494:148:13:-;14548:7;14630:5;14602:4;:12;;:25;;;;;;;;;;;;14574:53;;:4;:12;;:25;;;:53;;;;:::i;:::-;:61;;;;:::i;:::-;14567:68;;14494:148;:::o;14765:134::-;14817:7;14871:21;:19;:21::i;:::-;14843:4;:12;;:25;;;:49;;;;:::i;:::-;14836:56;;14765:134;:::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;5559:487:7:-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7686:720:6;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;88:117:15:-;197:1;194;187:12;211:117;320:1;317;310:12;334:90;368:7;411:5;404:13;397:21;386:32;;334:90;;;:::o;430:116::-;500:21;515:5;500:21;:::i;:::-;493:5;490:32;480:60;;536:1;533;526:12;480:60;430:116;:::o;552:133::-;595:5;633:6;620:20;611:29;;649:30;673:5;649:30;:::i;:::-;552:133;;;;:::o;691:323::-;747:6;796:2;784:9;775:7;771:23;767:32;764:119;;;802:79;;:::i;:::-;764:119;922:1;947:50;989:7;980:6;969:9;965:22;947:50;:::i;:::-;937:60;;893:114;691:323;;;;:::o;1020:126::-;1057:7;1097:42;1090:5;1086:54;1075:65;;1020:126;;;:::o;1152:60::-;1180:3;1201:5;1194:12;;1152:60;;;:::o;1218:142::-;1268:9;1301:53;1319:34;1328:24;1346:5;1328:24;:::i;:::-;1319:34;:::i;:::-;1301:53;:::i;:::-;1288:66;;1218:142;;;:::o;1366:126::-;1416:9;1449:37;1480:5;1449:37;:::i;:::-;1436:50;;1366:126;;;:::o;1498:140::-;1562:9;1595:37;1626:5;1595:37;:::i;:::-;1582:50;;1498:140;;;:::o;1644:159::-;1745:51;1790:5;1745:51;:::i;:::-;1740:3;1733:64;1644:159;;:::o;1809:153::-;1886:9;1919:37;1950:5;1919:37;:::i;:::-;1906:50;;1809:153;;;:::o;1968:185::-;2082:64;2140:5;2082:64;:::i;:::-;2077:3;2070:77;1968:185;;:::o;2159:77::-;2196:7;2225:5;2214:16;;2159:77;;;:::o;2242:118::-;2329:24;2347:5;2329:24;:::i;:::-;2324:3;2317:37;2242:118;;:::o;2366:96::-;2403:7;2432:24;2450:5;2432:24;:::i;:::-;2421:35;;2366:96;;;:::o;2468:118::-;2555:24;2573:5;2555:24;:::i;:::-;2550:3;2543:37;2468:118;;:::o;2592:86::-;2627:7;2667:4;2660:5;2656:16;2645:27;;2592:86;;;:::o;2684:112::-;2767:22;2783:5;2767:22;:::i;:::-;2762:3;2755:35;2684:112;;:::o;2802:108::-;2879:24;2897:5;2879:24;:::i;:::-;2874:3;2867:37;2802:108;;:::o;2916:114::-;2953:7;2993:30;2986:5;2982:42;2971:53;;2916:114;;;:::o;3036:108::-;3113:24;3131:5;3113:24;:::i;:::-;3108:3;3101:37;3036:108;;:::o;3150:93::-;3186:7;3226:10;3219:5;3215:22;3204:33;;3150:93;;;:::o;3249:105::-;3324:23;3341:5;3324:23;:::i;:::-;3319:3;3312:36;3249:105;;:::o;3430:1585::-;3591:6;3586:3;3582:16;3688:4;3681:5;3677:16;3671:23;3707:63;3764:4;3759:3;3755:14;3741:12;3707:63;:::i;:::-;3608:172;3865:4;3858:5;3854:16;3848:23;3884:63;3941:4;3936:3;3932:14;3918:12;3884:63;:::i;:::-;3790:167;4042:4;4035:5;4031:16;4025:23;4061:63;4118:4;4113:3;4109:14;4095:12;4061:63;:::i;:::-;3967:167;4215:4;4208:5;4204:16;4198:23;4234:63;4291:4;4286:3;4282:14;4268:12;4234:63;:::i;:::-;4144:163;4388:4;4381:5;4377:16;4371:23;4407:63;4464:4;4459:3;4455:14;4441:12;4407:63;:::i;:::-;4317:163;4563:4;4556:5;4552:16;4546:23;4582:63;4639:4;4634:3;4630:14;4616:12;4582:63;:::i;:::-;4490:165;4736:4;4729:5;4725:16;4719:23;4755:63;4812:4;4807:3;4803:14;4789:12;4755:63;:::i;:::-;4665:163;4918:4;4911:5;4907:16;4901:23;4937:61;4992:4;4987:3;4983:14;4969:12;4937:61;:::i;:::-;4838:170;3560:1455;3430:1585;;:::o;5021:1310::-;5439:4;5477:3;5466:9;5462:19;5454:27;;5491:85;5573:1;5562:9;5558:17;5549:6;5491:85;:::i;:::-;5586:99;5681:2;5670:9;5666:18;5657:6;5586:99;:::i;:::-;5695:72;5763:2;5752:9;5748:18;5739:6;5695:72;:::i;:::-;5777;5845:2;5834:9;5830:18;5821:6;5777:72;:::i;:::-;5859:73;5927:3;5916:9;5912:19;5903:6;5859:73;:::i;:::-;5942;6010:3;5999:9;5995:19;5986:6;5942:73;:::i;:::-;6025;6093:3;6082:9;6078:19;6069:6;6025:73;:::i;:::-;6108:69;6172:3;6161:9;6157:19;6148:6;6108:69;:::i;:::-;6187:137;6319:3;6308:9;6304:19;6295:6;6187:137;:::i;:::-;5021:1310;;;;;;;;;;;;:::o;6337:109::-;6418:21;6433:5;6418:21;:::i;:::-;6413:3;6406:34;6337:109;;:::o;6452:210::-;6539:4;6577:2;6566:9;6562:18;6554:26;;6590:65;6652:1;6641:9;6637:17;6628:6;6590:65;:::i;:::-;6452:210;;;;:::o;6668:122::-;6741:24;6759:5;6741:24;:::i;:::-;6734:5;6731:35;6721:63;;6780:1;6777;6770:12;6721:63;6668:122;:::o;6796:139::-;6842:5;6880:6;6867:20;6858:29;;6896:33;6923:5;6896:33;:::i;:::-;6796:139;;;;:::o;6941:329::-;7000:6;7049:2;7037:9;7028:7;7024:23;7020:32;7017:119;;;7055:79;;:::i;:::-;7017:119;7175:1;7200:53;7245:7;7236:6;7225:9;7221:22;7200:53;:::i;:::-;7190:63;;7146:117;6941:329;;;;:::o;7276:222::-;7369:4;7407:2;7396:9;7392:18;7384:26;;7420:71;7488:1;7477:9;7473:17;7464:6;7420:71;:::i;:::-;7276:222;;;;:::o;7504:117::-;7613:1;7610;7603:12;7627:117;7736:1;7733;7726:12;7750:117;7859:1;7856;7849:12;7890:568;7963:8;7973:6;8023:3;8016:4;8008:6;8004:17;8000:27;7990:122;;8031:79;;:::i;:::-;7990:122;8144:6;8131:20;8121:30;;8174:18;8166:6;8163:30;8160:117;;;8196:79;;:::i;:::-;8160:117;8310:4;8302:6;8298:17;8286:29;;8364:3;8356:4;8348:6;8344:17;8334:8;8330:32;8327:41;8324:128;;;8371:79;;:::i;:::-;8324:128;7890:568;;;;;:::o;8464:559::-;8550:6;8558;8607:2;8595:9;8586:7;8582:23;8578:32;8575:119;;;8613:79;;:::i;:::-;8575:119;8761:1;8750:9;8746:17;8733:31;8791:18;8783:6;8780:30;8777:117;;;8813:79;;:::i;:::-;8777:117;8926:80;8998:7;8989:6;8978:9;8974:22;8926:80;:::i;:::-;8908:98;;;;8704:312;8464:559;;;;;:::o;9029:222::-;9122:4;9160:2;9149:9;9145:18;9137:26;;9173:71;9241:1;9230:9;9226:17;9217:6;9173:71;:::i;:::-;9029:222;;;;:::o;9257:180::-;9305:77;9302:1;9295:88;9402:4;9399:1;9392:15;9426:4;9423:1;9416:15;9443:191;9483:3;9502:20;9520:1;9502:20;:::i;:::-;9497:25;;9536:20;9554:1;9536:20;:::i;:::-;9531:25;;9579:1;9576;9572:9;9565:16;;9600:3;9597:1;9594:10;9591:36;;;9607:18;;:::i;:::-;9591:36;9443:191;;;;:::o;9640:214::-;9729:4;9767:2;9756:9;9752:18;9744:26;;9780:67;9844:1;9833:9;9829:17;9820:6;9780:67;:::i;:::-;9640:214;;;;:::o;9860:194::-;9900:4;9920:20;9938:1;9920:20;:::i;:::-;9915:25;;9954:20;9972:1;9954:20;:::i;:::-;9949:25;;9998:1;9995;9991:9;9983:17;;10022:1;10016:4;10013:11;10010:37;;;10027:18;;:::i;:::-;10010:37;9860:194;;;;:::o;10060:332::-;10181:4;10219:2;10208:9;10204:18;10196:26;;10232:71;10300:1;10289:9;10285:17;10276:6;10232:71;:::i;:::-;10313:72;10381:2;10370:9;10366:18;10357:6;10313:72;:::i;:::-;10060:332;;;;;:::o;10398:180::-;10446:77;10443:1;10436:88;10543:4;10540:1;10533:15;10567:4;10564:1;10557:15;10584:410;10624:7;10647:20;10665:1;10647:20;:::i;:::-;10642:25;;10681:20;10699:1;10681:20;:::i;:::-;10676:25;;10736:1;10733;10729:9;10758:30;10776:11;10758:30;:::i;:::-;10747:41;;10937:1;10928:7;10924:15;10921:1;10918:22;10898:1;10891:9;10871:83;10848:139;;10967:18;;:::i;:::-;10848:139;10632:362;10584:410;;;;:::o;11000:180::-;11048:77;11045:1;11038:88;11145:4;11142:1;11135:15;11169:4;11166:1;11159:15;11186:185;11226:1;11243:20;11261:1;11243:20;:::i;:::-;11238:25;;11277:20;11295:1;11277:20;:::i;:::-;11272:25;;11316:1;11306:35;;11321:18;;:::i;:::-;11306:35;11363:1;11360;11356:9;11351:14;;11186:185;;;;:::o;11377:169::-;11461:11;11495:6;11490:3;11483:19;11535:4;11530:3;11526:14;11511:29;;11377:169;;;;:::o;11552:181::-;11692:33;11688:1;11680:6;11676:14;11669:57;11552:181;:::o;11739:366::-;11881:3;11902:67;11966:2;11961:3;11902:67;:::i;:::-;11895:74;;11978:93;12067:3;11978:93;:::i;:::-;12096:2;12091:3;12087:12;12080:19;;11739:366;;;:::o;12111:419::-;12277:4;12315:2;12304:9;12300:18;12292:26;;12364:9;12358:4;12354:20;12350:1;12339:9;12335:17;12328:47;12392:131;12518:4;12392:131;:::i;:::-;12384:139;;12111:419;;;:::o;12536:164::-;12676:16;12672:1;12664:6;12660:14;12653:40;12536:164;:::o;12706:366::-;12848:3;12869:67;12933:2;12928:3;12869:67;:::i;:::-;12862:74;;12945:93;13034:3;12945:93;:::i;:::-;13063:2;13058:3;13054:12;13047:19;;12706:366;;;:::o;13078:419::-;13244:4;13282:2;13271:9;13267:18;13259:26;;13331:9;13325:4;13321:20;13317:1;13306:9;13302:17;13295:47;13359:131;13485:4;13359:131;:::i;:::-;13351:139;;13078:419;;;:::o;13503:775::-;13736:4;13774:3;13763:9;13759:19;13751:27;;13788:71;13856:1;13845:9;13841:17;13832:6;13788:71;:::i;:::-;13869:72;13937:2;13926:9;13922:18;13913:6;13869:72;:::i;:::-;13951;14019:2;14008:9;14004:18;13995:6;13951:72;:::i;:::-;14033;14101:2;14090:9;14086:18;14077:6;14033:72;:::i;:::-;14115:73;14183:3;14172:9;14168:19;14159:6;14115:73;:::i;:::-;14198;14266:3;14255:9;14251:19;14242:6;14198:73;:::i;:::-;13503:775;;;;;;;;;:::o;14284:122::-;14357:24;14375:5;14357:24;:::i;:::-;14350:5;14347:35;14337:63;;14396:1;14393;14386:12;14337:63;14284:122;:::o;14412:143::-;14469:5;14500:6;14494:13;14485:22;;14516:33;14543:5;14516:33;:::i;:::-;14412:143;;;;:::o;14561:663::-;14649:6;14657;14665;14714:2;14702:9;14693:7;14689:23;14685:32;14682:119;;;14720:79;;:::i;:::-;14682:119;14840:1;14865:64;14921:7;14912:6;14901:9;14897:22;14865:64;:::i;:::-;14855:74;;14811:128;14978:2;15004:64;15060:7;15051:6;15040:9;15036:22;15004:64;:::i;:::-;14994:74;;14949:129;15117:2;15143:64;15199:7;15190:6;15179:9;15175:22;15143:64;:::i;:::-;15133:74;;15088:129;14561:663;;;;;:::o;15230:147::-;15331:11;15368:3;15353:18;;15230:147;;;;:::o;15383:114::-;;:::o;15503:398::-;15662:3;15683:83;15764:1;15759:3;15683:83;:::i;:::-;15676:90;;15775:93;15864:3;15775:93;:::i;:::-;15893:1;15888:3;15884:11;15877:18;;15503:398;;;:::o;15907:379::-;16091:3;16113:147;16256:3;16113:147;:::i;:::-;16106:154;;16277:3;16270:10;;15907:379;;;:::o;16292:332::-;16413:4;16451:2;16440:9;16436:18;16428:26;;16464:71;16532:1;16521:9;16517:17;16508:6;16464:71;:::i;:::-;16545:72;16613:2;16602:9;16598:18;16589:6;16545:72;:::i;:::-;16292:332;;;;;:::o;16630:442::-;16779:4;16817:2;16806:9;16802:18;16794:26;;16830:71;16898:1;16887:9;16883:17;16874:6;16830:71;:::i;:::-;16911:72;16979:2;16968:9;16964:18;16955:6;16911:72;:::i;:::-;16993;17061:2;17050:9;17046:18;17037:6;16993:72;:::i;:::-;16630:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1830400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addToWhitelist(address[])": "infinite",
								"cancel()": "infinite",
								"claim()": "infinite",
								"contributions(address)": "2892",
								"deposit()": "infinite",
								"finalize()": "infinite",
								"isWhitelistEnabled()": "2534",
								"owner()": "2581",
								"pool()": "infinite",
								"refund()": "infinite",
								"removeFromWhitelist(address[])": "infinite",
								"renounceOwnership()": "infinite",
								"setWhitelistEnabled(bool)": "infinite",
								"transferOwnership(address)": "infinite",
								"userTokens(address)": "infinite",
								"whitelist(address)": "2922"
							},
							"internal": {
								"_liquify(uint256,uint256)": "infinite",
								"_prevalidatePool(struct Presale.PresaleOptions memory)": "infinite",
								"_prevalidatePurchase(address,uint256)": "infinite",
								"_purchase(address,uint256)": "infinite",
								"_tokensForLiquidity()": "infinite",
								"_tokensForPresale()": "infinite",
								"_weiForLiquidity()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3696,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3663,
									"end": 3701,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "CODESIZE",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSHSIZE",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4556,
									"end": 4982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4713,
									"end": 4723,
									"name": "CALLER",
									"source": 13
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4739,
									"end": 4765,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 4756,
									"end": 4764,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4739,
									"end": 4755,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 4739,
									"end": 4755,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4739,
									"end": 4755,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4739,
									"end": 4765,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4739,
									"end": 4765,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4739,
									"end": 4765,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4739,
									"end": 4765,
									"modifierDepth": 1,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 4739,
									"end": 4765,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4820,
									"end": 4838,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4780,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4776,
									"end": 4798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4776,
									"end": 4798,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4776,
									"end": 4839,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4869,
									"end": 4875,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4853,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4849,
									"end": 4859,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4849,
									"end": 4859,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4859,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4849,
									"end": 4876,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4899,
									"end": 4900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4886,
									"end": 4890,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4886,
									"end": 4896,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 4886,
									"end": 4896,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4896,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "14"
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4886,
									"end": 4900,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4942,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4929,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4925,
									"end": 4934,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 4925,
									"end": 4934,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4934,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4925,
									"end": 4942,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4967,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4956,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4952,
									"end": 4964,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "7"
								},
								{
									"begin": 4952,
									"end": 4964,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "E"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "1C"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFF"
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4952,
									"end": 4975,
									"modifierDepth": 1,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4556,
									"end": 4982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13564,
									"end": 13863,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 13564,
									"end": 13863,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13669,
									"end": 13677,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13669,
									"end": 13685,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13669,
									"end": 13685,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13669,
									"end": 13685,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13650,
									"end": 13658,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13650,
									"end": 13666,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13650,
									"end": 13666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13650,
									"end": 13666,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13650,
									"end": 13685,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 13646,
									"end": 13711,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 13646,
									"end": 13711,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13646,
									"end": 13711,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "PUSH",
									"source": 13,
									"value": "A606CA7800000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13694,
									"end": 13711,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 13646,
									"end": 13711,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13646,
									"end": 13711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13740,
									"end": 13748,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13740,
									"end": 13752,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 13740,
									"end": 13752,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13740,
									"end": 13752,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13725,
									"end": 13733,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13725,
									"end": 13737,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 13725,
									"end": 13737,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13725,
									"end": 13737,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13725,
									"end": 13752,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 13721,
									"end": 13780,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 13721,
									"end": 13780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 13721,
									"end": 13780,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "PUSH",
									"source": 13,
									"value": "B581346100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13761,
									"end": 13780,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 13721,
									"end": 13780,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 13721,
									"end": 13780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13812,
									"end": 13820,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13812,
									"end": 13824,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 13812,
									"end": 13824,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13812,
									"end": 13824,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13824,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13794,
									"end": 13824,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13802,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13808,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 13794,
									"end": 13808,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13808,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13824,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 13794,
									"end": 13824,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 13794,
									"end": 13824,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 13790,
									"end": 13856,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 13790,
									"end": 13856,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "PUSH",
									"source": 13,
									"value": "EFF2C18200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13833,
									"end": 13856,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 13790,
									"end": 13856,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 13790,
									"end": 13856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13564,
									"end": 13863,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13564,
									"end": 13863,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "26"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "28"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 962,
									"name": "tag",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 845,
									"end": 962,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 951,
									"end": 952,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 944,
									"end": 956,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "tag",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1009,
									"end": 1015,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1060,
									"end": 1062,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1049,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1040,
									"end": 1054,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1036,
									"end": 1064,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1026,
									"end": 1064,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1070,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 968,
									"end": 1070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "tag",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1076,
									"end": 1256,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1124,
									"end": 1201,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1121,
									"end": 1122,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1114,
									"end": 1202,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1221,
									"end": 1225,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1218,
									"end": 1219,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1211,
									"end": 1226,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 1249,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1242,
									"end": 1243,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1235,
									"end": 1250,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1367,
									"end": 1371,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "31"
								},
								{
									"begin": 1345,
									"end": 1372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 1345,
									"end": 1372,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1337,
									"end": 1343,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1333,
									"end": 1373,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1475,
									"end": 1481,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1463,
									"end": 1473,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1460,
									"end": 1482,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 1439,
									"end": 1457,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1427,
									"end": 1437,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1424,
									"end": 1458,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 1421,
									"end": 1483,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "32"
								},
								{
									"begin": 1486,
									"end": 1504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 1486,
									"end": 1504,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 1418,
									"end": 1506,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1526,
									"end": 1536,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1522,
									"end": 1524,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1515,
									"end": 1537,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1305,
									"end": 1543,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1262,
									"end": 1543,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1262,
									"end": 1543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "tag",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1583,
									"end": 1589,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 1610,
									"end": 1630,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1600,
									"end": 1630,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 1667,
									"end": 1671,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1659,
									"end": 1665,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 1639,
									"end": 1672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "tag",
									"source": 15,
									"value": "68"
								},
								{
									"begin": 1639,
									"end": 1672,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1678,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1549,
									"end": 1678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "tag",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1844,
									"end": 1851,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1873,
									"end": 1878,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1862,
									"end": 1878,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1862,
									"end": 1878,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1884,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1807,
									"end": 1884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "tag",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 1981,
									"end": 1986,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "36"
								},
								{
									"begin": 1963,
									"end": 1987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "tag",
									"source": 15,
									"value": "72"
								},
								{
									"begin": 1963,
									"end": 1987,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1956,
									"end": 1961,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1953,
									"end": 1988,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2002,
									"end": 2003,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1999,
									"end": 2000,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1992,
									"end": 2004,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "tag",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1943,
									"end": 2006,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1890,
									"end": 2012,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1890,
									"end": 2012,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "tag",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2075,
									"end": 2080,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2106,
									"end": 2112,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2091,
									"end": 2113,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2091,
									"end": 2113,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2149,
									"end": 2154,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "37"
								},
								{
									"begin": 2122,
									"end": 2155,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "tag",
									"source": 15,
									"value": "75"
								},
								{
									"begin": 2122,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2018,
									"end": 2161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2167,
									"end": 2281,
									"name": "tag",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 2167,
									"end": 2281,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2204,
									"end": 2211,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2244,
									"end": 2274,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2237,
									"end": 2242,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2233,
									"end": 2275,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2222,
									"end": 2275,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2222,
									"end": 2275,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2167,
									"end": 2281,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2167,
									"end": 2281,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2167,
									"end": 2281,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2167,
									"end": 2281,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2409,
									"name": "tag",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2287,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2360,
									"end": 2384,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2378,
									"end": 2383,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2360,
									"end": 2384,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "39"
								},
								{
									"begin": 2360,
									"end": 2384,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2360,
									"end": 2384,
									"name": "tag",
									"source": 15,
									"value": "78"
								},
								{
									"begin": 2360,
									"end": 2384,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2353,
									"end": 2358,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2350,
									"end": 2385,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2340,
									"end": 2403,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 2340,
									"end": 2403,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2399,
									"end": 2400,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2396,
									"end": 2397,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2389,
									"end": 2401,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2340,
									"end": 2403,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 2340,
									"end": 2403,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2409,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2287,
									"end": 2409,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2472,
									"end": 2477,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2503,
									"end": 2509,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2497,
									"end": 2510,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2488,
									"end": 2510,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2488,
									"end": 2510,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2519,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2546,
									"end": 2551,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2519,
									"end": 2552,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 2519,
									"end": 2552,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2519,
									"end": 2552,
									"name": "tag",
									"source": 15,
									"value": "81"
								},
								{
									"begin": 2519,
									"end": 2552,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2415,
									"end": 2558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2564,
									"end": 2657,
									"name": "tag",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 2564,
									"end": 2657,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2600,
									"end": 2607,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2640,
									"end": 2650,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2633,
									"end": 2638,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2629,
									"end": 2651,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2618,
									"end": 2651,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2618,
									"end": 2651,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2564,
									"end": 2657,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2564,
									"end": 2657,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2564,
									"end": 2657,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2564,
									"end": 2657,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2663,
									"end": 2783,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2663,
									"end": 2783,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2735,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 2752,
									"end": 2757,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2735,
									"end": 2758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "42"
								},
								{
									"begin": 2735,
									"end": 2758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2735,
									"end": 2758,
									"name": "tag",
									"source": 15,
									"value": "84"
								},
								{
									"begin": 2735,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2728,
									"end": 2733,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2725,
									"end": 2759,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 2715,
									"end": 2777,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 2715,
									"end": 2777,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2773,
									"end": 2774,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2770,
									"end": 2771,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2763,
									"end": 2775,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2715,
									"end": 2777,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 2715,
									"end": 2777,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2663,
									"end": 2783,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2663,
									"end": 2783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2845,
									"end": 2850,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2876,
									"end": 2882,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2870,
									"end": 2883,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 2861,
									"end": 2883,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2861,
									"end": 2883,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 2918,
									"end": 2923,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2924,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 2892,
									"end": 2924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2892,
									"end": 2924,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 2892,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2789,
									"end": 2930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3065,
									"end": 3070,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3109,
									"end": 3115,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 3097,
									"end": 3106,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3092,
									"end": 3095,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3088,
									"end": 3107,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 3084,
									"end": 3116,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 3081,
									"end": 3200,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 3081,
									"end": 3200,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3081,
									"end": 3200,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 3119,
									"end": 3198,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3119,
									"end": 3198,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "30"
								},
								{
									"begin": 3119,
									"end": 3198,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3119,
									"end": 3198,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 3119,
									"end": 3198,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3081,
									"end": 3200,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 3081,
									"end": 3200,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3218,
									"end": 3241,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 3234,
									"end": 3240,
									"name": "PUSH",
									"source": 15,
									"value": "100"
								},
								{
									"begin": 3218,
									"end": 3241,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "34"
								},
								{
									"begin": 3218,
									"end": 3241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3218,
									"end": 3241,
									"name": "tag",
									"source": 15,
									"value": "91"
								},
								{
									"begin": 3218,
									"end": 3241,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3209,
									"end": 3241,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3209,
									"end": 3241,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3308,
									"end": 3309,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3348,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3404,
									"end": 3407,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3395,
									"end": 3401,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3384,
									"end": 3393,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3380,
									"end": 3402,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3348,
									"end": 3408,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3348,
									"end": 3408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3348,
									"end": 3408,
									"name": "tag",
									"source": 15,
									"value": "92"
								},
								{
									"begin": 3348,
									"end": 3408,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3341,
									"end": 3345,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3334,
									"end": 3339,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3323,
									"end": 3409,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3251,
									"end": 3420,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3482,
									"end": 3484,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3579,
									"end": 3582,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3570,
									"end": 3576,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3559,
									"end": 3568,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3555,
									"end": 3577,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3523,
									"end": 3583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "tag",
									"source": 15,
									"value": "93"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3516,
									"end": 3520,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 3509,
									"end": 3514,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3505,
									"end": 3521,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3498,
									"end": 3584,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3430,
									"end": 3595,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3657,
									"end": 3659,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3698,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3754,
									"end": 3757,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3745,
									"end": 3751,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3734,
									"end": 3743,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3730,
									"end": 3752,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3698,
									"end": 3758,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3698,
									"end": 3758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3698,
									"end": 3758,
									"name": "tag",
									"source": 15,
									"value": "94"
								},
								{
									"begin": 3698,
									"end": 3758,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3691,
									"end": 3695,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 3684,
									"end": 3689,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3680,
									"end": 3696,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3673,
									"end": 3759,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3605,
									"end": 3770,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3828,
									"end": 3830,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 3869,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3925,
									"end": 3928,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3916,
									"end": 3922,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3905,
									"end": 3914,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 3901,
									"end": 3923,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3869,
									"end": 3929,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 3869,
									"end": 3929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3869,
									"end": 3929,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 3869,
									"end": 3929,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3862,
									"end": 3866,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 3855,
									"end": 3860,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3851,
									"end": 3867,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 3844,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3780,
									"end": 3941,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3999,
									"end": 4002,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4041,
									"end": 4101,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 4097,
									"end": 4100,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4088,
									"end": 4094,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4077,
									"end": 4086,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4073,
									"end": 4095,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4041,
									"end": 4101,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "38"
								},
								{
									"begin": 4041,
									"end": 4101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4041,
									"end": 4101,
									"name": "tag",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 4041,
									"end": 4101,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4034,
									"end": 4038,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 4027,
									"end": 4032,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4023,
									"end": 4039,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4016,
									"end": 4102,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 3951,
									"end": 4113,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4173,
									"end": 4176,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4215,
									"end": 4275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 4271,
									"end": 4274,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4262,
									"end": 4268,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4251,
									"end": 4260,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4247,
									"end": 4269,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4215,
									"end": 4275,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 4215,
									"end": 4275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4215,
									"end": 4275,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 4215,
									"end": 4275,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4208,
									"end": 4212,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 4201,
									"end": 4206,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4197,
									"end": 4213,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4190,
									"end": 4276,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4287,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4345,
									"end": 4348,
									"name": "PUSH",
									"source": 15,
									"value": "C0"
								},
								{
									"begin": 4387,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4443,
									"end": 4446,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4434,
									"end": 4440,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4423,
									"end": 4432,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4419,
									"end": 4441,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4387,
									"end": 4447,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 4387,
									"end": 4447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4387,
									"end": 4447,
									"name": "tag",
									"source": 15,
									"value": "98"
								},
								{
									"begin": 4387,
									"end": 4447,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "PUSH",
									"source": 15,
									"value": "C0"
								},
								{
									"begin": 4373,
									"end": 4378,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4369,
									"end": 4385,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4362,
									"end": 4448,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4297,
									"end": 4459,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4526,
									"end": 4529,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 4568,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4623,
									"end": 4626,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4614,
									"end": 4620,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4603,
									"end": 4612,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4599,
									"end": 4621,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4568,
									"end": 4627,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 4568,
									"end": 4627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4568,
									"end": 4627,
									"name": "tag",
									"source": 15,
									"value": "99"
								},
								{
									"begin": 4568,
									"end": 4627,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 15,
									"value": "E0"
								},
								{
									"begin": 4554,
									"end": 4559,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4550,
									"end": 4566,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4543,
									"end": 4628,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 4469,
									"end": 4639,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2973,
									"end": 4646,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "tag",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4781,
									"end": 4787,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4789,
									"end": 4795,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4797,
									"end": 4803,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4805,
									"end": 4811,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4854,
									"end": 4857,
									"name": "PUSH",
									"source": 15,
									"value": "160"
								},
								{
									"begin": 4842,
									"end": 4851,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4833,
									"end": 4840,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 4829,
									"end": 4852,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 4825,
									"end": 4858,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 4822,
									"end": 4942,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4822,
									"end": 4942,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4822,
									"end": 4942,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4940,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4940,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 4861,
									"end": 4940,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4861,
									"end": 4940,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 4861,
									"end": 4940,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4822,
									"end": 4942,
									"name": "tag",
									"source": 15,
									"value": "101"
								},
								{
									"begin": 4822,
									"end": 4942,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4981,
									"end": 4982,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5006,
									"end": 5070,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 5062,
									"end": 5069,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5053,
									"end": 5059,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5042,
									"end": 5051,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 5038,
									"end": 5060,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5006,
									"end": 5070,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5006,
									"end": 5070,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5006,
									"end": 5070,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 5006,
									"end": 5070,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4996,
									"end": 5070,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4996,
									"end": 5070,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4952,
									"end": 5080,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5119,
									"end": 5121,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5145,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 5201,
									"end": 5208,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5192,
									"end": 5198,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5181,
									"end": 5190,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 5177,
									"end": 5199,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5209,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5145,
									"end": 5209,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5209,
									"name": "tag",
									"source": 15,
									"value": "104"
								},
								{
									"begin": 5145,
									"end": 5209,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5209,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5209,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5090,
									"end": 5219,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5258,
									"end": 5260,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 5284,
									"end": 5348,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 5340,
									"end": 5347,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5331,
									"end": 5337,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5320,
									"end": 5329,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 5316,
									"end": 5338,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5284,
									"end": 5348,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "29"
								},
								{
									"begin": 5284,
									"end": 5348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5284,
									"end": 5348,
									"name": "tag",
									"source": 15,
									"value": "105"
								},
								{
									"begin": 5284,
									"end": 5348,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5274,
									"end": 5348,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5274,
									"end": 5348,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5229,
									"end": 5358,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5397,
									"end": 5399,
									"name": "PUSH",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 5423,
									"end": 5519,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 5511,
									"end": 5518,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 5502,
									"end": 5508,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5491,
									"end": 5500,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 5487,
									"end": 5509,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5423,
									"end": 5519,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 5423,
									"end": 5519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5423,
									"end": 5519,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 5423,
									"end": 5519,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5413,
									"end": 5519,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5413,
									"end": 5519,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5368,
									"end": 5529,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4652,
									"end": 5536,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5542,
									"end": 5660,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 5542,
									"end": 5660,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5629,
									"end": 5653,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 5647,
									"end": 5652,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5629,
									"end": 5653,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "27"
								},
								{
									"begin": 5629,
									"end": 5653,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5629,
									"end": 5653,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 5629,
									"end": 5653,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5624,
									"end": 5627,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5617,
									"end": 5654,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 5542,
									"end": 5660,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5542,
									"end": 5660,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5542,
									"end": 5660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "tag",
									"source": 15,
									"value": "10"
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5759,
									"end": 5763,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5797,
									"end": 5799,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5786,
									"end": 5795,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5782,
									"end": 5800,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5774,
									"end": 5800,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5774,
									"end": 5800,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5810,
									"end": 5881,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5878,
									"end": 5879,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5867,
									"end": 5876,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5863,
									"end": 5880,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 5854,
									"end": 5860,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5810,
									"end": 5881,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 5810,
									"end": 5881,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5810,
									"end": 5881,
									"name": "tag",
									"source": 15,
									"value": "110"
								},
								{
									"begin": 5810,
									"end": 5881,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5888,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 695,
									"end": 15907,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078ef971a7cea222bf3ed048b44a9612aa1142ba9d2b023511839a5410217c9ea64736f6c634300081c0033",
									".code": [
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "D0E30DB0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "D0E30DB0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "EA8A1AF0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "ED498FA8"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "F2FDE38B"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "715018A6"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "7F649783"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "8DA5CB5B"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "9B19251A"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "4BB278F3"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "4BB278F3"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "4E71D92D"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "548DB174"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "590E1AE3"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "52D9E7E"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "16F0115B"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "184D69AB"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "42E94C90"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5130,
											"end": 5140,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5151,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 5120,
											"end": 5152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5120,
											"end": 5152,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5120,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 15907,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 11467,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 11467,
											"end": 11576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3536,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3536,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3663,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3403,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3403,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3403,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 9297,
											"end": 10411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9297,
											"end": 10411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 7536,
											"end": 8237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 7536,
											"end": 8237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 11928,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11928,
											"end": 12122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8399,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 8399,
											"end": 8805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 11659,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 11659,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3707,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3707,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5722,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5722,
											"end": 6668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 10659,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10659,
											"end": 11172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14056,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 14056,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 14056,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7082,
											"end": 7351,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 7082,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7169,
											"end": 7210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7190,
											"end": 7201,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7203,
											"end": 7209,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7169,
											"end": 7189,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 7169,
											"end": 7210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7169,
											"end": 7210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7169,
											"end": 7210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7239,
											"end": 7245,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7221,
											"end": 7235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7221,
											"end": 7235,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 7221,
											"end": 7245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7221,
											"end": 7245,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7285,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7280,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 7255,
											"end": 7291,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7291,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7324,
											"end": 7335,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2499A5330AB0979CC612135E7883EBC3CD5C9F7A8508F042540C34723348F632"
										},
										{
											"begin": 7337,
											"end": 7343,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 7315,
											"end": 7344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7344,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7082,
											"end": 7351,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7082,
											"end": 7351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11561,
											"end": 11569,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 11540,
											"end": 11558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11540,
											"end": 11569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3663,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3403,
											"end": 3451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9358,
											"end": 9362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9392,
											"end": 9393,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 9378,
											"end": 9382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9378,
											"end": 9388,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9393,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9378,
											"end": 9393,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9378,
											"end": 9393,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9374,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 9374,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9419,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9415,
											"end": 9425,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "D07E897600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 9402,
											"end": 9426,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9402,
											"end": 9426,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9374,
											"end": 9426,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 9374,
											"end": 9426,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9602,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9598,
											"end": 9610,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9598,
											"end": 9610,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 9598,
											"end": 9618,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9618,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9581,
											"end": 9595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 9581,
											"end": 9595,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9595,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9618,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9644,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9640,
											"end": 9652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 9640,
											"end": 9652,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9640,
											"end": 9656,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9622,
											"end": 9656,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9637,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 9622,
											"end": 9656,
											"modifierDepth": 2,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 9581,
											"end": 9656,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9709,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 9577,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2BDC91AD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9679,
											"end": 9698,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9709,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 9577,
											"end": 9709,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9796,
											"end": 9797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9783,
											"end": 9787,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9783,
											"end": 9793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 9783,
											"end": 9793,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9793,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 9783,
											"end": 9797,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9928,
											"end": 9946,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 9928,
											"end": 9944,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 9928,
											"end": 9946,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9928,
											"end": 9946,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 9928,
											"end": 9946,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9946,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9946,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 10000,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 9965,
											"end": 9977,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 9983,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 9979,
											"end": 9999,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9979,
											"end": 9999,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 9999,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 9964,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 9956,
											"end": 10000,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9956,
											"end": 10000,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 9956,
											"end": 10000,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10031,
											"end": 10051,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10031,
											"end": 10051,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10031,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10014,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10010,
											"end": 10027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10010,
											"end": 10027,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 10010,
											"end": 10051,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10010,
											"end": 10051,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10202,
											"end": 10214,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10189,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10185,
											"end": 10199,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 10185,
											"end": 10199,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10199,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 10185,
											"end": 10214,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 10185,
											"end": 10214,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10214,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10162,
											"end": 10214,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10243,
											"end": 10244,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10228,
											"end": 10240,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10244,
											"modifierDepth": 2,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10224,
											"end": 10314,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10224,
											"end": 10314,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 10224,
											"end": 10314,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 10290,
											"end": 10302,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10268,
											"end": 10278,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10289,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10260,
											"end": 10289,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 10260,
											"end": 10289,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 10260,
											"end": 10303,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10224,
											"end": 10314,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 10224,
											"end": 10314,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10339,
											"end": 10349,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "616C9469DB50815AE0F1D0A020D9FC9060DA7C57F03559AFB0D4EBDAA0A3A05E"
										},
										{
											"begin": 10351,
											"end": 10355,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10351,
											"end": 10365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 10351,
											"end": 10365,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10351,
											"end": 10365,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10367,
											"end": 10382,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 10329,
											"end": 10383,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10383,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 10400,
											"end": 10404,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10393,
											"end": 10404,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10404,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10404,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10393,
											"end": 10404,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9297,
											"end": 10411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9297,
											"end": 10411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7704,
											"end": 7705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7690,
											"end": 7694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7690,
											"end": 7700,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7690,
											"end": 7705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7705,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7686,
											"end": 7738,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 7727,
											"end": 7737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D07E897600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 7714,
											"end": 7738,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7714,
											"end": 7738,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7686,
											"end": 7738,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7686,
											"end": 7738,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7839,
											"end": 7840,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7824,
											"end": 7834,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7835,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 7810,
											"end": 7840,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7806,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7806,
											"end": 7863,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6247A84E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7849,
											"end": 7863,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7806,
											"end": 7863,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7806,
											"end": 7863,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7874,
											"end": 7888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7891,
											"end": 7913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7902,
											"end": 7912,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7891,
											"end": 7901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 7891,
											"end": 7913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7891,
											"end": 7913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 7891,
											"end": 7913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7874,
											"end": 7913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7874,
											"end": 7913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7951,
											"end": 7952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7937,
											"end": 7947,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7948,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7952,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7952,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7952,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 7923,
											"end": 7952,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8076,
											"end": 8082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 8055,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8055,
											"end": 8072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 8055,
											"end": 8082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8055,
											"end": 8082,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 8125,
											"end": 8135,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8137,
											"end": 8143,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8101,
											"end": 8111,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8101,
											"end": 8124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 8101,
											"end": 8124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 8101,
											"end": 8144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8171,
											"end": 8181,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "30C2341BA3F2142E78472F07DCF018A42044AE1C2C2E7CE867B327257F07EF2B"
										},
										{
											"begin": 8183,
											"end": 8189,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8206,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 8160,
											"end": 8207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8160,
											"end": 8207,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8230,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 8237,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 8237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12020,
											"end": 12029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12032,
											"end": 12033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12020,
											"end": 12033,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12020,
											"end": 12033,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12047,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12047,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12039,
											"end": 12054,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12035,
											"end": 12054,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12100,
											"end": 12105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12085,
											"end": 12093,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12093,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12094,
											"end": 12095,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 12085,
											"end": 12096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12085,
											"end": 12096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 12085,
											"end": 12096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 12075,
											"end": 12105,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12059,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12015,
											"end": 12116,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11928,
											"end": 12122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8463,
											"end": 8470,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 3987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4004,
											"end": 4008,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4004,
											"end": 4014,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4019,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4058,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4054,
											"end": 4066,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4054,
											"end": 4070,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4051,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4070,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4095,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 4091,
											"end": 4103,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4111,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4091,
											"end": 4111,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4091,
											"end": 4111,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4078,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4088,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4074,
											"end": 4111,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 4036,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 4004,
											"end": 4112,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4122,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3973,
											"end": 4122,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4132,
											"end": 4170,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "PUSH",
											"source": 13,
											"value": "3742D1F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4132,
											"end": 4170,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 4132,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8515,
											"end": 8516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8499,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8500,
											"end": 8510,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8511,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8516,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8540,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8482,
											"end": 8540,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "3742D1F600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8525,
											"end": 8540,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8482,
											"end": 8540,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8482,
											"end": 8540,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8565,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8582,
											"end": 8592,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8593,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8551,
											"end": 8593,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8631,
											"end": 8632,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8617,
											"end": 8627,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8603,
											"end": 8628,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8632,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8632,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8632,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 8603,
											"end": 8632,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8709,
											"end": 8715,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8687,
											"end": 8697,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8708,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8679,
											"end": 8708,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8708,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 8679,
											"end": 8708,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8679,
											"end": 8716,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8739,
											"end": 8749,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "73F04AF9DCC582A923EC15D3EEA990FE34ADABFFF2879E28D44572E01A54ABB6"
										},
										{
											"begin": 8751,
											"end": 8757,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8759,
											"end": 8774,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 8732,
											"end": 8775,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8732,
											"end": 8775,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 8792,
											"end": 8798,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8785,
											"end": 8798,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8785,
											"end": 8798,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8785,
											"end": 8798,
											"modifierDepth": 2,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3963,
											"end": 4188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8399,
											"end": 8805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11746,
											"end": 11755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11746,
											"end": 11759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11746,
											"end": 11759,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11773,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11780,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11765,
											"end": 11780,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11761,
											"end": 11762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11761,
											"end": 11780,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11826,
											"end": 11830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11801,
											"end": 11810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11811,
											"end": 11819,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11819,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11820,
											"end": 11821,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 11811,
											"end": 11822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11811,
											"end": 11822,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 11811,
											"end": 11822,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11823,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11801,
											"end": 11830,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11782,
											"end": 11785,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11741,
											"end": 11841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11659,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5907,
											"end": 5908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5893,
											"end": 5897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5893,
											"end": 5903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5893,
											"end": 5908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5893,
											"end": 5908,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5889,
											"end": 5941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 5930,
											"end": 5940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D07E897600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 5917,
											"end": 5941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5941,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5889,
											"end": 5941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 5889,
											"end": 5941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6013,
											"end": 6017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6013,
											"end": 6023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 6013,
											"end": 6023,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6198,
											"end": 6210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6198,
											"end": 6210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6181,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6177,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6177,
											"end": 6194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 6177,
											"end": 6223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6177,
											"end": 6223,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6256,
											"end": 6277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 6256,
											"end": 6275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 6256,
											"end": 6277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6256,
											"end": 6277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 6256,
											"end": 6277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6233,
											"end": 6253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6233,
											"end": 6253,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6277,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6233,
											"end": 6277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6310,
											"end": 6327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 6310,
											"end": 6329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6310,
											"end": 6329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6287,
											"end": 6307,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6307,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6329,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6329,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6329,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6287,
											"end": 6329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6487,
											"end": 6497,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6511,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6514,
											"end": 6526,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6514,
											"end": 6526,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6514,
											"end": 6539,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6469,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 6459,
											"end": 6486,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 6459,
											"end": 6540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6564,
											"end": 6574,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 6576,
											"end": 6580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6576,
											"end": 6588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6576,
											"end": 6588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6576,
											"end": 6601,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6576,
											"end": 6601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6603,
											"end": 6618,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 6556,
											"end": 6619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6619,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6636,
											"end": 6648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 6636,
											"end": 6648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6661,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6661,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5722,
											"end": 6668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10737,
											"end": 10738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10724,
											"end": 10728,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10724,
											"end": 10734,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10724,
											"end": 10738,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10738,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10720,
											"end": 10771,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10720,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 10720,
											"end": 10771,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10760,
											"end": 10770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "D07E897600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 10747,
											"end": 10771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10771,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10720,
											"end": 10771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 10720,
											"end": 10771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10795,
											"end": 10796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10782,
											"end": 10786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 10782,
											"end": 10792,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 10782,
											"end": 10796,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10940,
											"end": 10941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10920,
											"end": 10924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10920,
											"end": 10937,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10920,
											"end": 10937,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10937,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10920,
											"end": 10941,
											"modifierDepth": 1,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 11094,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 11094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 10916,
											"end": 11094,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 10978,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 10974,
											"end": 10991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 10974,
											"end": 10991,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10974,
											"end": 10991,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10957,
											"end": 10991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11026,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11005,
											"end": 11009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11005,
											"end": 11022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 11005,
											"end": 11022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11026,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11026,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11026,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 11005,
											"end": 11026,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 11064,
											"end": 11074,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11076,
											"end": 11082,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11040,
											"end": 11050,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11063,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11040,
											"end": 11063,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 11040,
											"end": 11063,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 11040,
											"end": 11083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10943,
											"end": 11094,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10916,
											"end": 11094,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 10916,
											"end": 11094,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11116,
											"end": 11126,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "27F83AF92B39768B17FE0C8D6922452702717EFB8626D97E7A754E0B27D4F6D2"
										},
										{
											"begin": 11128,
											"end": 11143,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 11109,
											"end": 11144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11144,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 11161,
											"end": 11165,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11154,
											"end": 11165,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11154,
											"end": 11165,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10659,
											"end": 11172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14118,
											"end": 14125,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14248,
											"end": 14249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14230,
											"end": 14234,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14230,
											"end": 14244,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 14230,
											"end": 14244,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14230,
											"end": 14244,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14230,
											"end": 14249,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14258,
											"end": 14259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14251,
											"end": 14259,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14251,
											"end": 14259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14251,
											"end": 14259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 14251,
											"end": 14259,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 14226,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 947,
											"end": 953,
											"name": "PUSH",
											"source": 13,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14346,
											"end": 14350,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14346,
											"end": 14366,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14366,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14346,
											"end": 14366,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14320,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14316,
											"end": 14330,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 14316,
											"end": 14330,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14316,
											"end": 14330,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 947,
											"end": 953,
											"name": "PUSH",
											"source": 13,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 14278,
											"end": 14291,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14292,
											"end": 14303,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14304,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 14278,
											"end": 14312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 14278,
											"end": 14312,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 14277,
											"end": 14330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 14277,
											"end": 14330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 14276,
											"end": 14366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 14276,
											"end": 14366,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 14276,
											"end": 14386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 14276,
											"end": 14386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14269,
											"end": 14386,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14269,
											"end": 14386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12414,
											"end": 13363,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 12414,
											"end": 13363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12511,
											"end": 12515,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12511,
											"end": 12521,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12552,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 12548,
											"end": 12558,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH",
											"source": 13,
											"value": "D07E897600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 12535,
											"end": 12559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12535,
											"end": 12559,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 12507,
											"end": 12559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12638,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12634,
											"end": 12646,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 12634,
											"end": 12646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12634,
											"end": 12652,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12652,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12616,
											"end": 12652,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12631,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12652,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12678,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12674,
											"end": 12686,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 12674,
											"end": 12686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "E"
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12674,
											"end": 12690,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12656,
											"end": 12690,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12671,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12690,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 12616,
											"end": 12690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12612,
											"end": 12745,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12612,
											"end": 12745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 12612,
											"end": 12745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "E3840BC400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12713,
											"end": 12734,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12612,
											"end": 12745,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 12612,
											"end": 12745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12827,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12823,
											"end": 12835,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 12823,
											"end": 12835,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12843,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12823,
											"end": 12843,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 12843,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12813,
											"end": 12820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12800,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12796,
											"end": 12810,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 12796,
											"end": 12810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12810,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 12796,
											"end": 12820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 12796,
											"end": 12820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12843,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12892,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 12792,
											"end": 12892,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "PUSH",
											"source": 13,
											"value": "283452DA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12866,
											"end": 12881,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12792,
											"end": 12892,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 12792,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12949,
											"end": 12953,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 12949,
											"end": 12961,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 12949,
											"end": 12961,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12949,
											"end": 12965,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 12965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12949,
											"end": 12965,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 12946,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12939,
											"end": 12965,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12935,
											"end": 13021,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12935,
											"end": 13021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 12935,
											"end": 13021,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "PUSH",
											"source": 13,
											"value": "BD70F35D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12988,
											"end": 13010,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12935,
											"end": 13021,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 12935,
											"end": 13021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13112,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 13108,
											"end": 13120,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13124,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 13108,
											"end": 13124,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13108,
											"end": 13124,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13091,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13092,
											"end": 13104,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13078,
											"end": 13105,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13075,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 13068,
											"end": 13105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 13068,
											"end": 13105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13068,
											"end": 13124,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 13064,
											"end": 13179,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13064,
											"end": 13179,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 13064,
											"end": 13179,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "PUSH",
											"source": 13,
											"value": "5A99681C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13147,
											"end": 13168,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13064,
											"end": 13179,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 13064,
											"end": 13179,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 13260,
											"end": 13278,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13292,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13293,
											"end": 13305,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 13283,
											"end": 13306,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13282,
											"end": 13306,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 13260,
											"end": 13306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13256,
											"end": 13357,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13256,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 13256,
											"end": 13357,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH",
											"source": 13,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 13322,
											"end": 13346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13322,
											"end": 13346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 13256,
											"end": 13357,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 13256,
											"end": 13357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 13363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 13363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12414,
											"end": 13363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14998,
											"end": 15132,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 14998,
											"end": 15132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15049,
											"end": 15056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15120,
											"end": 15125,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 15092,
											"end": 15096,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 15092,
											"end": 15104,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 15092,
											"end": 15104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15092,
											"end": 15117,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15079,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 15075,
											"end": 15089,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 15075,
											"end": 15089,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15089,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 15075,
											"end": 15117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 15075,
											"end": 15117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 15075,
											"end": 15125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 15075,
											"end": 15125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15068,
											"end": 15125,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15068,
											"end": 15125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14998,
											"end": 15132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14998,
											"end": 15132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15905,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 15262,
											"end": 15905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15341,
											"end": 15357,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15359,
											"end": 15373,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15395,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15391,
											"end": 15413,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15429,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15391,
											"end": 15429,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15429,
											"name": "PUSH",
											"source": 13,
											"value": "F305D719"
										},
										{
											"begin": 15438,
											"end": 15448,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15479,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15475,
											"end": 15485,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15504,
											"end": 15516,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15534,
											"end": 15546,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 15653,
											"end": 15663,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15707,
											"end": 15712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 15707,
											"end": 15714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15707,
											"end": 15714,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 15707,
											"end": 15714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15750,
											"end": 15753,
											"name": "PUSH",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 15732,
											"end": 15747,
											"name": "TIMESTAMP",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 15732,
											"end": 15753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 15732,
											"end": 15753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 15391,
											"end": 15767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "CALL",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 15391,
											"end": 15767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 15391,
											"end": 15767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15767,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15767,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15805,
											"end": 15817,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15801,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15817,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15817,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15834,
											"end": 15844,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15830,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15844,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15821,
											"end": 15844,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 15790,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15786,
											"end": 15899,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15786,
											"end": 15899,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 15786,
											"end": 15899,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "EDA12FE600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15867,
											"end": 15888,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 15786,
											"end": 15899,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 15786,
											"end": 15899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15330,
											"end": 15905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15330,
											"end": 15905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15905,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15262,
											"end": 15905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1396,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1375,
											"end": 1405,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1455,
											"end": 1476,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "CF47918100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1428,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1428,
											"end": 1485,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 1371,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1507,
											"end": 1519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1557,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1548,
											"end": 1562,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1548,
											"end": 1581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1506,
											"end": 1581,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1596,
											"end": 1603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1627,
											"end": 1637,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1619,
											"end": 1638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1619,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1591,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1361,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14494,
											"end": 14642,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 14494,
											"end": 14642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14548,
											"end": 14555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14630,
											"end": 14635,
											"name": "PUSH",
											"source": 13,
											"value": "2710"
										},
										{
											"begin": 14602,
											"end": 14606,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14602,
											"end": 14614,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 14602,
											"end": 14614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14602,
											"end": 14627,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14578,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14574,
											"end": 14586,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 14574,
											"end": 14586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14574,
											"end": 14599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14599,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 14574,
											"end": 14627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 14574,
											"end": 14627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 14574,
											"end": 14635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 14574,
											"end": 14635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14567,
											"end": 14635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14567,
											"end": 14635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14642,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14494,
											"end": 14642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14765,
											"end": 14899,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 14765,
											"end": 14899,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14817,
											"end": 14824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14871,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 14871,
											"end": 14890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 14871,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14871,
											"end": 14892,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 14871,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14847,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 14843,
											"end": 14855,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 14843,
											"end": 14855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14868,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14868,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 14843,
											"end": 14892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 14843,
											"end": 14892,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14892,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14892,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14765,
											"end": 14899,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14765,
											"end": 14899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "294"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 424,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 334,
											"end": 424,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 368,
											"end": 375,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 416,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 404,
											"end": 417,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 397,
											"end": 418,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 386,
											"end": 418,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 386,
											"end": 418,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 424,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 424,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 430,
											"end": 546,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 430,
											"end": 546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 515,
											"end": 520,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 500,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 500,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 500,
											"end": 521,
											"name": "tag",
											"source": 15,
											"value": "349"
										},
										{
											"begin": 500,
											"end": 521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 493,
											"end": 498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 490,
											"end": 522,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 480,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 480,
											"end": 540,
											"name": "tag",
											"source": 15,
											"value": "350"
										},
										{
											"begin": 480,
											"end": 540,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 430,
											"end": 546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 430,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 552,
											"end": 685,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 595,
											"end": 600,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 620,
											"end": 640,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 611,
											"end": 640,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 611,
											"end": 640,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 673,
											"end": 678,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 649,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 649,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 649,
											"end": 679,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 649,
											"end": 679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 552,
											"end": 685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 747,
											"end": 753,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 798,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 784,
											"end": 793,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 775,
											"end": 782,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 771,
											"end": 794,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 767,
											"end": 799,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 764,
											"end": 883,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 764,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 802,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 802,
											"end": 881,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 802,
											"end": 881,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 764,
											"end": 883,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 764,
											"end": 883,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 922,
											"end": 923,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 989,
											"end": 996,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 969,
											"end": 978,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 965,
											"end": 987,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 947,
											"end": 997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 947,
											"end": 997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 947,
											"end": 997,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 947,
											"end": 997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 937,
											"end": 997,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 937,
											"end": 997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 893,
											"end": 1007,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 691,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1057,
											"end": 1064,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1139,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1095,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1086,
											"end": 1140,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1075,
											"end": 1140,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1075,
											"end": 1140,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1146,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1020,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1212,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 1152,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1194,
											"end": 1206,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1212,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1212,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1212,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1152,
											"end": 1212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1360,
											"name": "tag",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1218,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1268,
											"end": 1277,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 1319,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1328,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 1346,
											"end": 1351,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1328,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1328,
											"end": 1352,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 1328,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 1319,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1319,
											"end": 1353,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1319,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 1301,
											"end": 1354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 1301,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1288,
											"end": 1354,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1288,
											"end": 1354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1360,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1218,
											"end": 1360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1492,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1366,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 1480,
											"end": 1485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 1449,
											"end": 1486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 1449,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1436,
											"end": 1486,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1436,
											"end": 1486,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1492,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1492,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1492,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1366,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1638,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 1498,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1562,
											"end": 1571,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1595,
											"end": 1632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 1595,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1632,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1582,
											"end": 1632,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1638,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1638,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1638,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1498,
											"end": 1638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1803,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 1644,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1745,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 1790,
											"end": 1795,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1745,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 1745,
											"end": 1796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1745,
											"end": 1796,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 1745,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1740,
											"end": 1743,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1733,
											"end": 1797,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1803,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1644,
											"end": 1803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1809,
											"end": 1962,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 1809,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1886,
											"end": 1895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 1919,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1919,
											"end": 1956,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 1919,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1906,
											"end": 1956,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1906,
											"end": 1956,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1809,
											"end": 1962,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1809,
											"end": 1962,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1809,
											"end": 1962,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1809,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 2153,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 1968,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2140,
											"end": 2145,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 2082,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2082,
											"end": 2146,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 2082,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2077,
											"end": 2080,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2070,
											"end": 2147,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 2153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 2153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1968,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2196,
											"end": 2203,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2214,
											"end": 2230,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2214,
											"end": 2230,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2159,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2242,
											"end": 2360,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 2242,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 2347,
											"end": 2352,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2329,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 2329,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2324,
											"end": 2327,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2354,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2242,
											"end": 2360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2242,
											"end": 2360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2242,
											"end": 2360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2403,
											"end": 2410,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 2450,
											"end": 2455,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2432,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 2432,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2421,
											"end": 2456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2421,
											"end": 2456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2366,
											"end": 2462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 2555,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 2555,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2543,
											"end": 2580,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2586,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2468,
											"end": 2586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2678,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 2592,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2627,
											"end": 2634,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2671,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2656,
											"end": 2672,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2672,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2645,
											"end": 2672,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2678,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2678,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2678,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2592,
											"end": 2678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2796,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 2684,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 2783,
											"end": 2788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 2767,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2762,
											"end": 2765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2755,
											"end": 2790,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2684,
											"end": 2796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2910,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2802,
											"end": 2910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 2897,
											"end": 2902,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2879,
											"end": 2903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2867,
											"end": 2904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2802,
											"end": 2910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 3030,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2916,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2953,
											"end": 2960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 3023,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2986,
											"end": 2991,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2982,
											"end": 3024,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2971,
											"end": 3024,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 3030,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 3030,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 3030,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2916,
											"end": 3030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3144,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 3036,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 3131,
											"end": 3136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 3113,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 3113,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3108,
											"end": 3111,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3101,
											"end": 3138,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3144,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3036,
											"end": 3144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3186,
											"end": 3193,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3236,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3219,
											"end": 3224,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3215,
											"end": 3237,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3237,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3237,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3150,
											"end": 3243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3354,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 3249,
											"end": 3354,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 3341,
											"end": 3346,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3347,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 3324,
											"end": 3347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3347,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 3324,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3312,
											"end": 3348,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3354,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3249,
											"end": 3354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 5015,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 3430,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3591,
											"end": 3597,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3586,
											"end": 3589,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3582,
											"end": 3598,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3688,
											"end": 3692,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3677,
											"end": 3693,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3671,
											"end": 3694,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 3764,
											"end": 3768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3762,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3755,
											"end": 3769,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3741,
											"end": 3753,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 3707,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 3707,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3608,
											"end": 3780,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3865,
											"end": 3869,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3858,
											"end": 3863,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3854,
											"end": 3870,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3848,
											"end": 3871,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 3941,
											"end": 3945,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3936,
											"end": 3939,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 3932,
											"end": 3946,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 3884,
											"end": 3947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3947,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 3884,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3790,
											"end": 3957,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4042,
											"end": 4046,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4040,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4031,
											"end": 4047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4025,
											"end": 4048,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4118,
											"end": 4122,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 4113,
											"end": 4116,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4109,
											"end": 4123,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4095,
											"end": 4107,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4061,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4061,
											"end": 4124,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 4061,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3967,
											"end": 4134,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4215,
											"end": 4219,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4208,
											"end": 4213,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4204,
											"end": 4220,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4198,
											"end": 4221,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4282,
											"end": 4296,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4268,
											"end": 4280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4234,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 4234,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4144,
											"end": 4307,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4388,
											"end": 4392,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4381,
											"end": 4386,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4377,
											"end": 4393,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4371,
											"end": 4394,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 4464,
											"end": 4468,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 4459,
											"end": 4462,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4455,
											"end": 4469,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4441,
											"end": 4453,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 4407,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4407,
											"end": 4470,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 4407,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4317,
											"end": 4480,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4563,
											"end": 4567,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4556,
											"end": 4561,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4546,
											"end": 4569,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 4634,
											"end": 4637,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4630,
											"end": 4644,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4628,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 4582,
											"end": 4645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 4582,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4490,
											"end": 4655,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4736,
											"end": 4740,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4729,
											"end": 4734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4725,
											"end": 4741,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4719,
											"end": 4742,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4755,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 4812,
											"end": 4816,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4803,
											"end": 4817,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4789,
											"end": 4801,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4755,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 4755,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4755,
											"end": 4818,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 4755,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4665,
											"end": 4828,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4918,
											"end": 4922,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4911,
											"end": 4916,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4907,
											"end": 4923,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4901,
											"end": 4924,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 4992,
											"end": 4996,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 4987,
											"end": 4990,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4969,
											"end": 4981,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 4937,
											"end": 4998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 4937,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4838,
											"end": 5008,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3560,
											"end": 5015,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 5015,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 5015,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3430,
											"end": 5015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "tag",
											"source": 15,
											"value": "35"
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5480,
											"name": "PUSH",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 5466,
											"end": 5475,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5462,
											"end": 5481,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5454,
											"end": 5481,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5454,
											"end": 5481,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 5573,
											"end": 5574,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5571,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5558,
											"end": 5575,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5549,
											"end": 5555,
											"name": "DUP13",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 5491,
											"end": 5576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5491,
											"end": 5576,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 5491,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5681,
											"end": 5683,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 5679,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5657,
											"end": 5663,
											"name": "DUP12",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 5586,
											"end": 5685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5586,
											"end": 5685,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 5586,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5748,
											"end": 5766,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5739,
											"end": 5745,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5695,
											"end": 5767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 5695,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5845,
											"end": 5847,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5834,
											"end": 5843,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5830,
											"end": 5848,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5821,
											"end": 5827,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5777,
											"end": 5849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 5777,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5859,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 5927,
											"end": 5930,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 5916,
											"end": 5925,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5912,
											"end": 5931,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5903,
											"end": 5909,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 5859,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5859,
											"end": 5932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5859,
											"end": 5932,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 5859,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5942,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 6010,
											"end": 6013,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5995,
											"end": 6014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5986,
											"end": 5992,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 5942,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 5942,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5942,
											"end": 6015,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 5942,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6093,
											"end": 6096,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6078,
											"end": 6097,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6069,
											"end": 6075,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 6025,
											"end": 6098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 6025,
											"end": 6098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6108,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6172,
											"end": 6175,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 6161,
											"end": 6170,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6157,
											"end": 6176,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6148,
											"end": 6154,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 6108,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 6108,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6108,
											"end": 6177,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 6108,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6187,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 6319,
											"end": 6322,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6304,
											"end": 6323,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6295,
											"end": 6301,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6187,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 6187,
											"end": 6324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6187,
											"end": 6324,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 6187,
											"end": 6324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "SWAP11",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5021,
											"end": 6331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6433,
											"end": 6438,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 6418,
											"end": 6439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 6418,
											"end": 6439,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6413,
											"end": 6416,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6406,
											"end": 6440,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6446,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6337,
											"end": 6446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "tag",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6539,
											"end": 6543,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6579,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 6652,
											"end": 6653,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6650,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6637,
											"end": 6654,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6628,
											"end": 6634,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 6590,
											"end": 6655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 6590,
											"end": 6655,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6452,
											"end": 6662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6668,
											"end": 6790,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6668,
											"end": 6790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 6759,
											"end": 6764,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 6741,
											"end": 6765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6741,
											"end": 6765,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 6741,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6734,
											"end": 6739,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6731,
											"end": 6766,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6782,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 6721,
											"end": 6784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6668,
											"end": 6790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6668,
											"end": 6790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6842,
											"end": 6847,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6886,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6867,
											"end": 6887,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 6887,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6858,
											"end": 6887,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6896,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 6923,
											"end": 6928,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6896,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 6896,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6896,
											"end": 6929,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 6896,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6796,
											"end": 6935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "tag",
											"source": 15,
											"value": "44"
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7049,
											"end": 7051,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7037,
											"end": 7046,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7028,
											"end": 7035,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7024,
											"end": 7047,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 7020,
											"end": 7052,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7017,
											"end": 7136,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7017,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 7017,
											"end": 7136,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 7055,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 7055,
											"end": 7134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7055,
											"end": 7134,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 7055,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7017,
											"end": 7136,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 7017,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7175,
											"end": 7176,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7200,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 7245,
											"end": 7252,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7236,
											"end": 7242,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7225,
											"end": 7234,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7200,
											"end": 7253,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 7200,
											"end": 7253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7200,
											"end": 7253,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 7200,
											"end": 7253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7190,
											"end": 7253,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7190,
											"end": 7253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7146,
											"end": 7263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6941,
											"end": 7270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7369,
											"end": 7373,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7407,
											"end": 7409,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7396,
											"end": 7405,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7392,
											"end": 7410,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7410,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7384,
											"end": 7410,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7420,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7488,
											"end": 7489,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7473,
											"end": 7490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7464,
											"end": 7470,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7420,
											"end": 7491,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 7420,
											"end": 7491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7420,
											"end": 7491,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 7420,
											"end": 7491,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7276,
											"end": 7498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7504,
											"end": 7621,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 7504,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7613,
											"end": 7614,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7611,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7615,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7627,
											"end": 7744,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 7627,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7736,
											"end": 7737,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7734,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7726,
											"end": 7738,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7750,
											"end": 7867,
											"name": "tag",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 7750,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7859,
											"end": 7860,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7856,
											"end": 7857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7861,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7963,
											"end": 7971,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7979,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8016,
											"end": 8020,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 8008,
											"end": 8014,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8004,
											"end": 8021,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8000,
											"end": 8027,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7990,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 7990,
											"end": 8112,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 8031,
											"end": 8110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 8031,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7990,
											"end": 8112,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 7990,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8144,
											"end": 8150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8131,
											"end": 8151,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8121,
											"end": 8151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8121,
											"end": 8151,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8174,
											"end": 8192,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8166,
											"end": 8172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8163,
											"end": 8193,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8277,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8277,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 8160,
											"end": 8277,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8196,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 8196,
											"end": 8275,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 8196,
											"end": 8275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8196,
											"end": 8275,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 8196,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8160,
											"end": 8277,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 8160,
											"end": 8277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8310,
											"end": 8314,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8302,
											"end": 8308,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8298,
											"end": 8315,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8286,
											"end": 8315,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8286,
											"end": 8315,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8364,
											"end": 8367,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8348,
											"end": 8354,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8344,
											"end": 8361,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 8334,
											"end": 8342,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8330,
											"end": 8362,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8327,
											"end": 8368,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8371,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 8371,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "329"
										},
										{
											"begin": 8371,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8371,
											"end": 8450,
											"name": "tag",
											"source": 15,
											"value": "434"
										},
										{
											"begin": 8371,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 8324,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7890,
											"end": 8458,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "tag",
											"source": 15,
											"value": "59"
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8550,
											"end": 8556,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8564,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8607,
											"end": 8609,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8604,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8586,
											"end": 8593,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8582,
											"end": 8605,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8578,
											"end": 8610,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8575,
											"end": 8694,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8575,
											"end": 8694,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 8575,
											"end": 8694,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8613,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 8613,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 8613,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8613,
											"end": 8692,
											"name": "tag",
											"source": 15,
											"value": "437"
										},
										{
											"begin": 8613,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8575,
											"end": 8694,
											"name": "tag",
											"source": 15,
											"value": "436"
										},
										{
											"begin": 8575,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8761,
											"end": 8762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 8746,
											"end": 8763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8733,
											"end": 8764,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8791,
											"end": 8809,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8783,
											"end": 8789,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8780,
											"end": 8810,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8777,
											"end": 8894,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8777,
											"end": 8894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8777,
											"end": 8894,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 8813,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 8813,
											"end": 8892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8813,
											"end": 8892,
											"name": "tag",
											"source": 15,
											"value": "439"
										},
										{
											"begin": 8813,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8777,
											"end": 8894,
											"name": "tag",
											"source": 15,
											"value": "438"
										},
										{
											"begin": 8777,
											"end": 8894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8926,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 8998,
											"end": 9005,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 8989,
											"end": 8995,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8978,
											"end": 8987,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8974,
											"end": 8996,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8926,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 8926,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8926,
											"end": 9006,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 8926,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8908,
											"end": 9006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8908,
											"end": 9006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8908,
											"end": 9006,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8908,
											"end": 9006,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8704,
											"end": 9016,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8464,
											"end": 9023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9122,
											"end": 9126,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9162,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9149,
											"end": 9158,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9145,
											"end": 9163,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9137,
											"end": 9163,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9137,
											"end": 9163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9173,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9217,
											"end": 9223,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9173,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 9173,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9173,
											"end": 9244,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 9173,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9029,
											"end": 9251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9257,
											"end": 9437,
											"name": "tag",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 9257,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9305,
											"end": 9382,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9383,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9426,
											"end": 9430,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9431,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9483,
											"end": 9486,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 9520,
											"end": 9521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 9502,
											"end": 9522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 9502,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9497,
											"end": 9522,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9497,
											"end": 9522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9536,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 9554,
											"end": 9555,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9536,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 9536,
											"end": 9556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9536,
											"end": 9556,
											"name": "tag",
											"source": 15,
											"value": "446"
										},
										{
											"begin": 9536,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9531,
											"end": 9556,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9531,
											"end": 9556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9579,
											"end": 9580,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9576,
											"end": 9577,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9572,
											"end": 9581,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9565,
											"end": 9581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9600,
											"end": 9603,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9594,
											"end": 9604,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 9591,
											"end": 9627,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 9591,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9591,
											"end": 9627,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 9607,
											"end": 9625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9591,
											"end": 9627,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 9591,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9769,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9756,
											"end": 9765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9752,
											"end": 9770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9744,
											"end": 9770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9844,
											"end": 9845,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9833,
											"end": 9842,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9829,
											"end": 9846,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9820,
											"end": 9826,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 9780,
											"end": 9847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9780,
											"end": 9847,
											"name": "tag",
											"source": 15,
											"value": "450"
										},
										{
											"begin": 9780,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9640,
											"end": 9854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9900,
											"end": 9904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 9920,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 9920,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9915,
											"end": 9940,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9915,
											"end": 9940,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 9954,
											"end": 9974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "tag",
											"source": 15,
											"value": "453"
										},
										{
											"begin": 9954,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9949,
											"end": 9974,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9949,
											"end": 9974,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9998,
											"end": 9999,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9995,
											"end": 9996,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9991,
											"end": 10000,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 9983,
											"end": 10000,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9983,
											"end": 10000,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10016,
											"end": 10020,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10013,
											"end": 10024,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 10027,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "tag",
											"source": 15,
											"value": "455"
										},
										{
											"begin": 10027,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 10010,
											"end": 10047,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9860,
											"end": 10054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10181,
											"end": 10185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10219,
											"end": 10221,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10208,
											"end": 10217,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10204,
											"end": 10222,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10196,
											"end": 10222,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10196,
											"end": 10222,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10232,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10289,
											"end": 10298,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10285,
											"end": 10302,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 10232,
											"end": 10303,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10232,
											"end": 10303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10232,
											"end": 10303,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 10232,
											"end": 10303,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10313,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10381,
											"end": 10383,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10366,
											"end": 10384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10357,
											"end": 10363,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10313,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 10313,
											"end": 10385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10313,
											"end": 10385,
											"name": "tag",
											"source": 15,
											"value": "458"
										},
										{
											"begin": 10313,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10060,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10398,
											"end": 10578,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 10398,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10446,
											"end": 10523,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10443,
											"end": 10444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10436,
											"end": 10524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10543,
											"end": 10547,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 10540,
											"end": 10541,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 10533,
											"end": 10548,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 10567,
											"end": 10571,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 10564,
											"end": 10565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10557,
											"end": 10572,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "tag",
											"source": 15,
											"value": "210"
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10665,
											"end": 10666,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 10647,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "tag",
											"source": 15,
											"value": "461"
										},
										{
											"begin": 10647,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10642,
											"end": 10667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10699,
											"end": 10700,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 10681,
											"end": 10701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "tag",
											"source": 15,
											"value": "462"
										},
										{
											"begin": 10681,
											"end": 10701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10701,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10736,
											"end": 10737,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10733,
											"end": 10734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10729,
											"end": 10738,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10776,
											"end": 10787,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 10758,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "tag",
											"source": 15,
											"value": "463"
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10747,
											"end": 10788,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10747,
											"end": 10788,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10928,
											"end": 10935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10924,
											"end": 10939,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10918,
											"end": 10940,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 10898,
											"end": 10899,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 10891,
											"end": 10900,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10871,
											"end": 10954,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 10848,
											"end": 10987,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10848,
											"end": 10987,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "331"
										},
										{
											"begin": 10967,
											"end": 10985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 10967,
											"end": 10985,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10848,
											"end": 10987,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 10848,
											"end": 10987,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10632,
											"end": 10994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10584,
											"end": 10994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11000,
											"end": 11180,
											"name": "tag",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 11000,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11048,
											"end": 11125,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11045,
											"end": 11046,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11038,
											"end": 11126,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11145,
											"end": 11149,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 11142,
											"end": 11143,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 11135,
											"end": 11150,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11169,
											"end": 11173,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 11166,
											"end": 11167,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11159,
											"end": 11174,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "tag",
											"source": 15,
											"value": "212"
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11226,
											"end": 11227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11243,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11263,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 11243,
											"end": 11263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11243,
											"end": 11263,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 11243,
											"end": 11263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11238,
											"end": 11263,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11238,
											"end": 11263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11277,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11277,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 11277,
											"end": 11297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11277,
											"end": 11297,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 11277,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11297,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11272,
											"end": 11297,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11316,
											"end": 11317,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 11341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11306,
											"end": 11341,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "332"
										},
										{
											"begin": 11321,
											"end": 11339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11306,
											"end": 11341,
											"name": "tag",
											"source": 15,
											"value": "470"
										},
										{
											"begin": 11306,
											"end": 11341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11363,
											"end": 11364,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11360,
											"end": 11361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11356,
											"end": 11365,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 11351,
											"end": 11365,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11351,
											"end": 11365,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11186,
											"end": 11371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "tag",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11461,
											"end": 11472,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11490,
											"end": 11493,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11483,
											"end": 11502,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11535,
											"end": 11539,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11530,
											"end": 11533,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11526,
											"end": 11540,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11511,
											"end": 11540,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11511,
											"end": 11540,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11377,
											"end": 11546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11552,
											"end": 11733,
											"name": "tag",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 11552,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11692,
											"end": 11725,
											"name": "PUSH",
											"source": 15,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11688,
											"end": 11689,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11680,
											"end": 11686,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11676,
											"end": 11690,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11669,
											"end": 11726,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11552,
											"end": 11733,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11552,
											"end": 11733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 12105,
											"name": "tag",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 11739,
											"end": 12105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11881,
											"end": 11884,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11902,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11966,
											"end": 11968,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 11961,
											"end": 11964,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11969,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 11902,
											"end": 11969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11902,
											"end": 11969,
											"name": "tag",
											"source": 15,
											"value": "475"
										},
										{
											"begin": 11902,
											"end": 11969,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11969,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11895,
											"end": 11969,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 12067,
											"end": 12070,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "334"
										},
										{
											"begin": 11978,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11978,
											"end": 12071,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 11978,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12096,
											"end": 12098,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12091,
											"end": 12094,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12087,
											"end": 12099,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12080,
											"end": 12099,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12080,
											"end": 12099,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 12105,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 12105,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 12105,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11739,
											"end": 12105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12530,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 12111,
											"end": 12530,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12277,
											"end": 12281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12300,
											"end": 12318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12292,
											"end": 12318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12292,
											"end": 12318,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12364,
											"end": 12373,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12358,
											"end": 12362,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12354,
											"end": 12374,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12339,
											"end": 12348,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12335,
											"end": 12352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12328,
											"end": 12375,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12392,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 12518,
											"end": 12522,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12392,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "335"
										},
										{
											"begin": 12392,
											"end": 12523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12392,
											"end": 12523,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 12392,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12384,
											"end": 12523,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12384,
											"end": 12523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12530,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12530,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12530,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12111,
											"end": 12530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12700,
											"name": "tag",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 12536,
											"end": 12700,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12676,
											"end": 12692,
											"name": "PUSH",
											"source": 15,
											"value": "4E6F7457686974656C6973746564000000000000000000000000000000000000"
										},
										{
											"begin": 12672,
											"end": 12673,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12664,
											"end": 12670,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12660,
											"end": 12674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12653,
											"end": 12693,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12700,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12536,
											"end": 12700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12706,
											"end": 13072,
											"name": "tag",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 12706,
											"end": 13072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12848,
											"end": 12851,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 12933,
											"end": 12935,
											"name": "PUSH",
											"source": 15,
											"value": "E"
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12869,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "333"
										},
										{
											"begin": 12869,
											"end": 12936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12869,
											"end": 12936,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 12869,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12862,
											"end": 12936,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12862,
											"end": 12936,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 13034,
											"end": 13037,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "336"
										},
										{
											"begin": 12945,
											"end": 13038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 12945,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13058,
											"end": 13061,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13054,
											"end": 13066,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13066,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13047,
											"end": 13066,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12706,
											"end": 13072,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12706,
											"end": 13072,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12706,
											"end": 13072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12706,
											"end": 13072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13078,
											"end": 13497,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 13078,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13244,
											"end": 13248,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13282,
											"end": 13284,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13271,
											"end": 13280,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13267,
											"end": 13285,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13259,
											"end": 13285,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13259,
											"end": 13285,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13331,
											"end": 13340,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13325,
											"end": 13329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13321,
											"end": 13341,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 13317,
											"end": 13318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13306,
											"end": 13315,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13302,
											"end": 13319,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13295,
											"end": 13342,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13359,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 13485,
											"end": 13489,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 13359,
											"end": 13490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "337"
										},
										{
											"begin": 13359,
											"end": 13490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13359,
											"end": 13490,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 13359,
											"end": 13490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13351,
											"end": 13490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13351,
											"end": 13490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13078,
											"end": 13497,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13078,
											"end": 13497,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13078,
											"end": 13497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13078,
											"end": 13497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "tag",
											"source": 15,
											"value": "254"
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13736,
											"end": 13740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13777,
											"name": "PUSH",
											"source": 15,
											"value": "C0"
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13759,
											"end": 13778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13751,
											"end": 13778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13751,
											"end": 13778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 13856,
											"end": 13857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13845,
											"end": 13854,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13841,
											"end": 13858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 13788,
											"end": 13859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13788,
											"end": 13859,
											"name": "tag",
											"source": 15,
											"value": "486"
										},
										{
											"begin": 13788,
											"end": 13859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13869,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 13937,
											"end": 13939,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13926,
											"end": 13935,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13922,
											"end": 13940,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13913,
											"end": 13919,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 13869,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 13869,
											"end": 13941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13869,
											"end": 13941,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 13869,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13951,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 14019,
											"end": 14021,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 14008,
											"end": 14017,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14004,
											"end": 14022,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13995,
											"end": 14001,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 13951,
											"end": 14023,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 13951,
											"end": 14023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13951,
											"end": 14023,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 13951,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 14101,
											"end": 14103,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14090,
											"end": 14099,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14086,
											"end": 14104,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14077,
											"end": 14083,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 14033,
											"end": 14105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 14033,
											"end": 14105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14115,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 14183,
											"end": 14186,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 14172,
											"end": 14181,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14168,
											"end": 14187,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14159,
											"end": 14165,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 14115,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 14115,
											"end": 14188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14115,
											"end": 14188,
											"name": "tag",
											"source": 15,
											"value": "490"
										},
										{
											"begin": 14115,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 14266,
											"end": 14269,
											"name": "PUSH",
											"source": 15,
											"value": "A0"
										},
										{
											"begin": 14255,
											"end": 14264,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14251,
											"end": 14270,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14242,
											"end": 14248,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14271,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 14198,
											"end": 14271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14198,
											"end": 14271,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 14198,
											"end": 14271,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "SWAP7",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13503,
											"end": 14278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14284,
											"end": 14406,
											"name": "tag",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 14284,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14357,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 14375,
											"end": 14380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14357,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 14357,
											"end": 14381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14357,
											"end": 14381,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 14357,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14350,
											"end": 14355,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14347,
											"end": 14382,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 14337,
											"end": 14400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 14337,
											"end": 14400,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14396,
											"end": 14397,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14393,
											"end": 14394,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14386,
											"end": 14398,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14337,
											"end": 14400,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 14337,
											"end": 14400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14284,
											"end": 14406,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14284,
											"end": 14406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "tag",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14469,
											"end": 14474,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14500,
											"end": 14506,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14494,
											"end": 14507,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14485,
											"end": 14507,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14485,
											"end": 14507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14516,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 14543,
											"end": 14548,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14516,
											"end": 14549,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "338"
										},
										{
											"begin": 14516,
											"end": 14549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14516,
											"end": 14549,
											"name": "tag",
											"source": 15,
											"value": "496"
										},
										{
											"begin": 14516,
											"end": 14549,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14412,
											"end": 14555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "tag",
											"source": 15,
											"value": "258"
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14649,
											"end": 14655,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14657,
											"end": 14663,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14665,
											"end": 14671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14714,
											"end": 14716,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 14702,
											"end": 14711,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 14693,
											"end": 14700,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14689,
											"end": 14712,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14685,
											"end": 14717,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 14682,
											"end": 14801,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14682,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 14682,
											"end": 14801,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14720,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 14720,
											"end": 14799,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "299"
										},
										{
											"begin": 14720,
											"end": 14799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14720,
											"end": 14799,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 14720,
											"end": 14799,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14682,
											"end": 14801,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 14682,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14840,
											"end": 14841,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 14921,
											"end": 14928,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 14912,
											"end": 14918,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14901,
											"end": 14910,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 14897,
											"end": 14919,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14929,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 14865,
											"end": 14929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14865,
											"end": 14929,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 14865,
											"end": 14929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 14855,
											"end": 14929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14811,
											"end": 14939,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14978,
											"end": 14980,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15004,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 15060,
											"end": 15067,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15051,
											"end": 15057,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15040,
											"end": 15049,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15036,
											"end": 15058,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15004,
											"end": 15068,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 15004,
											"end": 15068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15004,
											"end": 15068,
											"name": "tag",
											"source": 15,
											"value": "501"
										},
										{
											"begin": 15004,
											"end": 15068,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14994,
											"end": 15068,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14994,
											"end": 15068,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14949,
											"end": 15078,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15117,
											"end": 15119,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 15143,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 15199,
											"end": 15206,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15190,
											"end": 15196,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15179,
											"end": 15188,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15175,
											"end": 15197,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15143,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "339"
										},
										{
											"begin": 15143,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15143,
											"end": 15207,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 15143,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15207,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15133,
											"end": 15207,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15088,
											"end": 15217,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 14561,
											"end": 15224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "tag",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15331,
											"end": 15342,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15368,
											"end": 15371,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15353,
											"end": 15371,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15353,
											"end": 15371,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15230,
											"end": 15377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15383,
											"end": 15497,
											"name": "tag",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 15383,
											"end": 15497,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15383,
											"end": 15497,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15383,
											"end": 15497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15901,
											"name": "tag",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 15503,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15662,
											"end": 15665,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15683,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 15764,
											"end": 15765,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15759,
											"end": 15762,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15766,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "340"
										},
										{
											"begin": 15683,
											"end": 15766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15683,
											"end": 15766,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 15683,
											"end": 15766,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 15766,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15676,
											"end": 15766,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 15864,
											"end": 15867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15868,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "341"
										},
										{
											"begin": 15775,
											"end": 15868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15775,
											"end": 15868,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 15775,
											"end": 15868,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15893,
											"end": 15894,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15888,
											"end": 15891,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15884,
											"end": 15895,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15877,
											"end": 15895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15901,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15901,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15901,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15503,
											"end": 15901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 16286,
											"name": "tag",
											"source": 15,
											"value": "265"
										},
										{
											"begin": 15907,
											"end": 16286,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16091,
											"end": 16094,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16113,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 16256,
											"end": 16259,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16113,
											"end": 16260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "342"
										},
										{
											"begin": 16113,
											"end": 16260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16113,
											"end": 16260,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 16113,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16106,
											"end": 16260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16106,
											"end": 16260,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16277,
											"end": 16280,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16280,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16270,
											"end": 16280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 16286,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 16286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 16286,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15907,
											"end": 16286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "tag",
											"source": 15,
											"value": "275"
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16413,
											"end": 16417,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16453,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16440,
											"end": 16449,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16436,
											"end": 16454,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16428,
											"end": 16454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16428,
											"end": 16454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16464,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 16532,
											"end": 16533,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16521,
											"end": 16530,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16517,
											"end": 16534,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16508,
											"end": 16514,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16464,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 16464,
											"end": 16535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16464,
											"end": 16535,
											"name": "tag",
											"source": 15,
											"value": "511"
										},
										{
											"begin": 16464,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 16613,
											"end": 16615,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16602,
											"end": 16611,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16598,
											"end": 16616,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16589,
											"end": 16595,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 16545,
											"end": 16617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 16545,
											"end": 16617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16292,
											"end": 16624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "tag",
											"source": 15,
											"value": "287"
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16779,
											"end": 16783,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16817,
											"end": 16819,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16806,
											"end": 16815,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16802,
											"end": 16820,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16794,
											"end": 16820,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16794,
											"end": 16820,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16830,
											"end": 16901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 16898,
											"end": 16899,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16887,
											"end": 16896,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16883,
											"end": 16900,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16874,
											"end": 16880,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 16830,
											"end": 16901,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 16830,
											"end": 16901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16830,
											"end": 16901,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 16830,
											"end": 16901,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16911,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 16979,
											"end": 16981,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16968,
											"end": 16977,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16964,
											"end": 16982,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16955,
											"end": 16961,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16911,
											"end": 16983,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 16911,
											"end": 16983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16911,
											"end": 16983,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 16911,
											"end": 16983,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16993,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 17061,
											"end": 17063,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17050,
											"end": 17059,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17037,
											"end": 17043,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16993,
											"end": 17065,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 16993,
											"end": 17065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16993,
											"end": 17065,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 16993,
											"end": 17065,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16630,
											"end": 17072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
								"SDC-Presale.sol",
								"interfaces/IPresale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addToWhitelist(address[])": "7f649783",
							"cancel()": "ea8a1af0",
							"claim()": "4e71d92d",
							"contributions(address)": "42e94c90",
							"deposit()": "d0e30db0",
							"finalize()": "4bb278f3",
							"isWhitelistEnabled()": "184d69ab",
							"owner()": "8da5cb5b",
							"pool()": "16f0115b",
							"refund()": "590e1ae3",
							"removeFromWhitelist(address[])": "548db174",
							"renounceOwnership()": "715018a6",
							"setWhitelistEnabled(bool)": "052d9e7e",
							"transferOwnership(address)": "f2fde38b",
							"userTokens(address)": "ed498fa8",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_weth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2Router02\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint112\",\"name\":\"start\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"end\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"liquidityBps\",\"type\":\"uint32\"}],\"internalType\":\"struct Presale.PresaleOptions\",\"name\":\"_options\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HardCapExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCapValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLimitValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLiquidityValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestampValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotClaimable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInPurchasePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRefundable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PurchaseBelowMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PurchaseLimitExceed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoftCapNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenClaim\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isWhitelistEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"uniswapV2Router02\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensClaimable\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensLiquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weiRaised\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"weth\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenDeposit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hardCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"softCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint112\",\"name\":\"start\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"end\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"liquidityBps\",\"type\":\"uint32\"}],\"internalType\":\"struct Presale.PresaleOptions\",\"name\":\"options\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enabled\",\"type\":\"bool\"}],\"name\":\"setWhitelistEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributor\",\"type\":\"address\"}],\"name\":\"userTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"HardCapExceed()\":[{\"details\":\"Emitted when a purchase attempt exceeds the presale's hard cap.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidCapValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidInitializationParameters()\":[{\"details\":\"Emitted when the initialization parameters provided to the contract are invalid.\"}],\"InvalidLimitValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidLiquidityValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidState(uint8)\":[{\"details\":\"Emitted when an action is performed in an invalid state.\",\"params\":{\"currentState\":\"The current state of the contract.\"}}],\"InvalidTimestampValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"LiquificationFailed()\":[{\"details\":\"Emitted when the process of adding liquidity to a liquidity pool fails.\"}],\"NotClaimable()\":[{\"details\":\"Emitted when user with no contribution attempts to claim tokens.\"}],\"NotInPurchasePeriod()\":[{\"details\":\"Emitted when a purchase or refund attempt is made outside the presale period.\"}],\"NotRefundable()\":[{\"details\":\"Emitted when a refund is requested under conditions that do not permit refunds.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"PurchaseBelowMinimum()\":[{\"details\":\"Emitted when a purchase amount is below the minimum allowed.\"}],\"PurchaseLimitExceed()\":[{\"details\":\"Emitted when a participant's purchase would exceed the maximum allowed contribution.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}],\"SoftCapNotReached()\":[{\"details\":\"Emitted when attempting to finalize a presale that has not reached its soft cap.\"}],\"Unauthorized()\":[{\"details\":\"Emitted when an unauthorized address attempts an action requiring specific permissions.\"}]},\"events\":{\"Cancel(address,uint256)\":{\"details\":\"Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants to claim refunds for their contributions.\",\"params\":{\"creator\":\"Address of the contract owner who cancelled the presale.\",\"timestamp\":\"Block timestamp when the cancellation occurred.\"}},\"Deposit(address,uint256,uint256)\":{\"details\":\"Emitted when the presale contract owner deposits tokens for sale. This is usually done before the presale starts to ensure tokens are available for purchase.\",\"params\":{\"amount\":\"Amount of tokens deposited.\",\"creator\":\"Address of the contract owner who performs the deposit.\",\"timestamp\":\"Block timestamp when the deposit occurred.\"}},\"Finalized(address,uint256,uint256)\":{\"details\":\"Emitted when the presale is successfully finalized. Finalization may involve distributing tokens, transferring raised funds to a designated wallet, and/or enabling token claim functionality.\",\"params\":{\"amount\":\"Total amount of ETH raised in the presale.\",\"creator\":\"Address of the contract owner who finalized the presale.\",\"timestamp\":\"Block timestamp when the finalization occurred.\"}},\"Purchase(address,uint256)\":{\"details\":\"Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed, and the amount of tokens purchased.\",\"params\":{\"beneficiary\":\"Address of the participant who made the purchase.\",\"contribution\":\"Amount of ETH contributed by the participant.\"}},\"Refund(address,uint256,uint256)\":{\"details\":\"Emitted when a participant successfully claims a refund. This is typically allowed when the presale is cancelled or does not meet its funding goals.\",\"params\":{\"amount\":\"Amount of wei refunded.\",\"beneficiary\":\"Address of the participant receiving the refund.\",\"timestamp\":\"Block timestamp when the refund occurred.\"}},\"TokenClaim(address,uint256,uint256)\":{\"details\":\"Emitted when participants claim their purchased tokens after the presale is finalized. \",\"params\":{\"amount\":\"Amount of tokens claimed.\",\"beneficiary\":\"Address of the participant claiming tokens.\",\"timestamp\":\"Block timestamp when the claim occurred.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_options\":\"\\u041f\\u0430\\u0440\\u0430\\u043c\\u0435\\u0442\\u0440\\u044b \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b\\u0430 (PresaleOptions).\",\"_token\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0442\\u043e\\u043a\\u0435\\u043d\\u0430, \\u043a\\u043e\\u0442\\u043e\\u0440\\u044b\\u0439 \\u043f\\u0440\\u043e\\u0434\\u0430\\u0451\\u043c.\",\"_uniswapV2Router02\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 \\u0440\\u043e\\u0443\\u0442\\u0435\\u0440\\u0430 (PancakeSwap/Uniswap).\",\"_weth\":\"\\u0410\\u0434\\u0440\\u0435\\u0441 WBNB \\u0432 \\u0441\\u0435\\u0442\\u0438 BSC (\\u0438\\u043b\\u0438 WETH, \\u0435\\u0441\\u043b\\u0438 \\u044d\\u0442\\u043e \\u0434\\u0440\\u0443\\u0433\\u0430\\u044f EVM-\\u0441\\u0435\\u0442\\u044c).\"}},\"deposit()\":{\"returns\":{\"_0\":\"\\u041a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0432\\u043d\\u0435\\u0441\\u0451\\u043d\\u043d\\u044b\\u0445 \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"userTokens(address)\":{\"details\":\"\\u0421\\u0447\\u0438\\u0442\\u0430\\u0435\\u043c, \\u0441\\u043a\\u043e\\u043b\\u044c\\u043a\\u043e \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u043f\\u0440\\u0438\\u0447\\u0438\\u0442\\u0430\\u0435\\u0442\\u0441\\u044f \\u043a\\u043e\\u043d\\u043a\\u0440\\u0435\\u0442\\u043d\\u043e\\u043c\\u0443 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0443 (\\u043f\\u0440\\u043e\\u043f\\u043e\\u0440\\u0446\\u0438\\u043e\\u043d\\u0430\\u043b\\u044c\\u043d\\u043e \\u0432\\u043a\\u043b\\u0430\\u0434\\u0443).\"}},\"title\":\"Presale contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToWhitelist(address[])\":{\"notice\":\"\\u0414\\u043e\\u0431\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0432 whitelist.\"},\"cancel()\":{\"notice\":\"\\u0412\\u043b\\u0430\\u0434\\u0435\\u043b\\u0435\\u0446 \\u043c\\u043e\\u0436\\u0435\\u0442 \\u043e\\u0442\\u043c\\u0435\\u043d\\u0438\\u0442\\u044c \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b (\\u0435\\u0441\\u043b\\u0438 \\u043e\\u043d \\u0435\\u0449\\u0451 \\u043d\\u0435 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0451\\u043d).         \\u0422\\u043e\\u0433\\u0434\\u0430 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0438 \\u0441\\u043c\\u043e\\u0433\\u0443\\u0442 \\u0432\\u044b\\u0437\\u0432\\u0430\\u0442\\u044c refund() \\u0438 \\u0432\\u0435\\u0440\\u043d\\u0443\\u0442\\u044c BNB.\"},\"claim()\":{\"notice\":\"\\u041f\\u043e\\u0437\\u0432\\u043e\\u043b\\u044f\\u0435\\u0442 \\u043f\\u043e\\u043a\\u0443\\u043f\\u0430\\u0442\\u0435\\u043b\\u044f\\u043c \\u0437\\u0430\\u0431\\u0440\\u0430\\u0442\\u044c \\u0441\\u0432\\u043e\\u0438 \\u0442\\u043e\\u043a\\u0435\\u043d\\u044b \\u043f\\u043e\\u0441\\u043b\\u0435 \\u0443\\u0441\\u043f\\u0435\\u0448\\u043d\\u043e\\u0433\\u043e \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043d\\u0438\\u044f \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b\\u0430.\"},\"contributions(address)\":{\"notice\":\"\\u0423\\u0447\\u0435\\u0442 \\u0432\\u043a\\u043b\\u0430\\u0434\\u043e\\u0432 (\\u0430\\u0434\\u0440\\u0435\\u0441 -> \\u0432\\u043d\\u0435\\u0441\\u0451\\u043d\\u043d\\u044b\\u0435 BNB)\"},\"deposit()\":{\"notice\":\"\\u0412\\u043b\\u0430\\u0434\\u0435\\u043b\\u0435\\u0446 \\u0432\\u043d\\u043e\\u0441\\u0438\\u0442 \\u043d\\u0443\\u0436\\u043d\\u043e\\u0435 \\u043a\\u043e\\u043b\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043e \\u0442\\u043e\\u043a\\u0435\\u043d\\u043e\\u0432 \\u0434\\u043b\\u044f \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b\\u0430 \\u0438 \\u043b\\u0438\\u043a\\u0432\\u0438\\u0434\\u043d\\u043e\\u0441\\u0442\\u0438.         \\u0414\\u043e \\u0432\\u044b\\u0437\\u043e\\u0432\\u0430 \\u044d\\u0442\\u043e\\u0439 \\u0444\\u0443\\u043d\\u043a\\u0446\\u0438\\u0438 \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b \\u043d\\u0435\\u0434\\u043e\\u0441\\u0442\\u0443\\u043f\\u0435\\u043d \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\\u043c.\"},\"finalize()\":{\"notice\":\"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0430\\u0435\\u0442 \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b, \\u0435\\u0441\\u043b\\u0438 \\u043e\\u043d \\u0443\\u0441\\u043f\\u0435\\u0448\\u0435\\u043d (\\u0434\\u043e\\u0441\\u0442\\u0438\\u0433\\u043d\\u0443\\u0442 softCap).         \\u0414\\u043e\\u0431\\u0430\\u0432\\u043b\\u044f\\u0435\\u0442 \\u043b\\u0438\\u043a\\u0432\\u0438\\u0434\\u043d\\u043e\\u0441\\u0442\\u044c, \\u043f\\u0435\\u0440\\u0435\\u0432\\u043e\\u0434\\u0438\\u0442 \\u043e\\u0441\\u0442\\u0430\\u0442\\u043a\\u0438 \\u0432\\u043b\\u0430\\u0434\\u0435\\u043b\\u044c\\u0446\\u0443, \\u043e\\u0442\\u043a\\u0440\\u044b\\u0432\\u0430\\u0435\\u0442 \\u043a\\u043b\\u0435\\u0439\\u043c \\u0434\\u043b\\u044f \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u043e\\u0432.\"},\"isWhitelistEnabled()\":{\"notice\":\"2. \\u041c\\u0435\\u0445\\u0430\\u043d\\u0438\\u043a\\u0430 whitelist (\\u0434\\u043b\\u044f \\u0441\\u043d\\u0438\\u0436\\u0435\\u043d\\u0438\\u044f \\u0440\\u0438\\u0441\\u043a\\u043e\\u0432 \\u0444\\u0440\\u043e\\u043d\\u0442\\u0440\\u0430\\u043d\\u043d\\u0438\\u043d\\u0433\\u0430)\"},\"pool()\":{\"notice\":\"\\u0425\\u0440\\u0430\\u043d\\u0438\\u043c \\u0432\\u0441\\u0435 \\u0434\\u0430\\u043d\\u043d\\u044b\\u0435 \\u0432 \\u043e\\u0434\\u043d\\u043e\\u0439 \\u0441\\u0442\\u0440\\u0443\\u043a\\u0442\\u0443\\u0440\\u0435\"},\"refund()\":{\"notice\":\"\\u0412\\u043e\\u0437\\u0432\\u0440\\u0430\\u0442 \\u0441\\u0440\\u0435\\u0434\\u0441\\u0442\\u0432 \\u0443\\u0447\\u0430\\u0441\\u0442\\u043d\\u0438\\u043a\\u0430\\u043c, \\u0435\\u0441\\u043b\\u0438 \\u043f\\u0440\\u0435\\u0441\\u0435\\u0439\\u043b \\u043e\\u0442\\u043c\\u0435\\u043d\\u0451\\u043d \\u0438\\u043b\\u0438 \\u043d\\u0435 \\u0441\\u043e\\u0431\\u0440\\u0430\\u043b softCap.\"},\"removeFromWhitelist(address[])\":{\"notice\":\"\\u0423\\u0434\\u0430\\u043b\\u044f\\u0435\\u0442 \\u0430\\u0434\\u0440\\u0435\\u0441\\u0430 \\u0438\\u0437 whitelist.\"},\"setWhitelistEnabled(bool)\":{\"notice\":\"\\u0412\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442 \\u0438\\u043b\\u0438 \\u043e\\u0442\\u043a\\u043b\\u044e\\u0447\\u0430\\u0435\\u0442 \\u043c\\u0435\\u0445\\u0430\\u043d\\u0438\\u0437\\u043c whitelist.\"}},\"notice\":\"Create and manage a presale of an ERC20 token\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"SDC-Presale.sol\":\"Presale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x4cc957ba3709ab0cef11cae6a983fe33a931d5c0aeb0b9e3129b9a5799b37fe8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://74305485aace6fb5aa13b699f2edcda13a401684ec78729fabadfab447ec3494\",\"dweb:/ipfs/QmdF1zEuHTskcYYrrCoaRo7cC5TDEJM1wPFVSXigyBmJ3j\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol\":{\"keccak256\":\"0x2265bf397a975ed4e07bb22484fe9c078df3d5bb0a9e6c6e3fff07ee3e87cbdd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://86a19560c1441a442c6998059ada03a67ab05997da6cc95a8ac31c55d1133e20\",\"dweb:/ipfs/QmTHjatmZ8sCpF8pTy9txZtCqDnd1xx3juog9G5RxUoPwF\"]},\"SDC-Presale.sol\":{\"keccak256\":\"0x856c8790ebcc10e1de10ce211c9a03093a4b68d85d39411e31f2c1fbff03e606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4254792b4970089f8d28675a203ff1d8a24f99ebf2b8c3136a9b31b1c487b8c\",\"dweb:/ipfs/QmNm2YFFhMRXe8qspk6sLLa79UbneDwkETpHhEt5apbnBf\"]},\"interfaces/IPresale.sol\":{\"keccak256\":\"0xe7da09f138555161982095b2687a07e5d6d8232329efafc4c4d8dc2315f1483e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20121344a1ae44e81ab9a2669d9d1b80cbde089128c51dc48a9fd77c30d7fc21\",\"dweb:/ipfs/QmXs8tTWG1gEnWUjNksPxuzK2tTcYe2oqapjHu1hDL8Nxs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "SDC-Presale.sol:Presale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "SDC-Presale.sol:Presale",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1591,
								"contract": "SDC-Presale.sol:Presale",
								"label": "contributions",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1595,
								"contract": "SDC-Presale.sol:Presale",
								"label": "pool",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Pool)1586_storage"
							},
							{
								"astId": 1599,
								"contract": "SDC-Presale.sol:Presale",
								"label": "isWhitelistEnabled",
								"offset": 0,
								"slot": "16",
								"type": "t_bool"
							},
							{
								"astId": 1603,
								"contract": "SDC-Presale.sol:Presale",
								"label": "whitelist",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)1509": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Pool)1586_storage": {
								"encoding": "inplace",
								"label": "struct Presale.Pool",
								"members": [
									{
										"astId": 1567,
										"contract": "SDC-Presale.sol:Presale",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)380"
									},
									{
										"astId": 1570,
										"contract": "SDC-Presale.sol:Presale",
										"label": "uniswapV2Router02",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IUniswapV2Router02)1509"
									},
									{
										"astId": 1572,
										"contract": "SDC-Presale.sol:Presale",
										"label": "tokenBalance",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1574,
										"contract": "SDC-Presale.sol:Presale",
										"label": "tokensClaimable",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1576,
										"contract": "SDC-Presale.sol:Presale",
										"label": "tokensLiquidity",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1578,
										"contract": "SDC-Presale.sol:Presale",
										"label": "weiRaised",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1580,
										"contract": "SDC-Presale.sol:Presale",
										"label": "weth",
										"offset": 0,
										"slot": "6",
										"type": "t_address"
									},
									{
										"astId": 1582,
										"contract": "SDC-Presale.sol:Presale",
										"label": "state",
										"offset": 20,
										"slot": "6",
										"type": "t_uint8"
									},
									{
										"astId": 1585,
										"contract": "SDC-Presale.sol:Presale",
										"label": "options",
										"offset": 0,
										"slot": "7",
										"type": "t_struct(PresaleOptions)1563_storage"
									}
								],
								"numberOfBytes": "416"
							},
							"t_struct(PresaleOptions)1563_storage": {
								"encoding": "inplace",
								"label": "struct Presale.PresaleOptions",
								"members": [
									{
										"astId": 1548,
										"contract": "SDC-Presale.sol:Presale",
										"label": "tokenDeposit",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1550,
										"contract": "SDC-Presale.sol:Presale",
										"label": "hardCap",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1552,
										"contract": "SDC-Presale.sol:Presale",
										"label": "softCap",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1554,
										"contract": "SDC-Presale.sol:Presale",
										"label": "max",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1556,
										"contract": "SDC-Presale.sol:Presale",
										"label": "min",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1558,
										"contract": "SDC-Presale.sol:Presale",
										"label": "start",
										"offset": 0,
										"slot": "5",
										"type": "t_uint112"
									},
									{
										"astId": 1560,
										"contract": "SDC-Presale.sol:Presale",
										"label": "end",
										"offset": 14,
										"slot": "5",
										"type": "t_uint112"
									},
									{
										"astId": 1562,
										"contract": "SDC-Presale.sol:Presale",
										"label": "liquidityBps",
										"offset": 28,
										"slot": "5",
										"type": "t_uint32"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint112": {
								"encoding": "inplace",
								"label": "uint112",
								"numberOfBytes": "14"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToWhitelist(address[])": {
								"notice": "Добавляет адреса в whitelist."
							},
							"cancel()": {
								"notice": "Владелец может отменить пресейл (если он ещё не завершён).         Тогда участники смогут вызвать refund() и вернуть BNB."
							},
							"claim()": {
								"notice": "Позволяет покупателям забрать свои токены после успешного завершения пресейла."
							},
							"contributions(address)": {
								"notice": "Учет вкладов (адрес -> внесённые BNB)"
							},
							"deposit()": {
								"notice": "Владелец вносит нужное количество токенов для пресейла и ликвидности.         До вызова этой функции пресейл недоступен участникам."
							},
							"finalize()": {
								"notice": "Завершает пресейл, если он успешен (достигнут softCap).         Добавляет ликвидность, переводит остатки владельцу, открывает клейм для участников."
							},
							"isWhitelistEnabled()": {
								"notice": "2. Механика whitelist (для снижения рисков фронтраннинга)"
							},
							"pool()": {
								"notice": "Храним все данные в одной структуре"
							},
							"refund()": {
								"notice": "Возврат средств участникам, если пресейл отменён или не собрал softCap."
							},
							"removeFromWhitelist(address[])": {
								"notice": "Удаляет адреса из whitelist."
							},
							"setWhitelistEnabled(bool)": {
								"notice": "Включает или отключает механизм whitelist."
							}
						},
						"notice": "Create and manage a presale of an ERC20 token",
						"version": 1
					}
				}
			},
			"interfaces/IPresale.sol": {
				"IPresale": {
					"abi": [
						{
							"inputs": [],
							"name": "HardCapExceed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCapValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitializationParameters",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLimitValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidLiquidityValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "currentState",
									"type": "uint8"
								}
							],
							"name": "InvalidState",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTimestampValue",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "LiquificationFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotClaimable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInPurchasePeriod",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotRefundable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PurchaseBelowMinimum",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PurchaseLimitExceed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SoftCapNotReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Unauthorized",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Cancel",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Finalized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "contribution",
									"type": "uint256"
								}
							],
							"name": "Purchase",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "Refund",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokenClaim",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "cancel",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "finalize",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refund",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"HardCapExceed()": [
								{
									"details": "Emitted when a purchase attempt exceeds the presale's hard cap."
								}
							],
							"InvalidCapValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidInitializationParameters()": [
								{
									"details": "Emitted when the initialization parameters provided to the contract are invalid."
								}
							],
							"InvalidLimitValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidLiquidityValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"InvalidState(uint8)": [
								{
									"details": "Emitted when an action is performed in an invalid state.",
									"params": {
										"currentState": "The current state of the contract."
									}
								}
							],
							"InvalidTimestampValue()": [
								{
									"details": "Emitted when the pool validation parameters provided to the contract are invalid."
								}
							],
							"LiquificationFailed()": [
								{
									"details": "Emitted when the process of adding liquidity to a liquidity pool fails."
								}
							],
							"NotClaimable()": [
								{
									"details": "Emitted when user with no contribution attempts to claim tokens."
								}
							],
							"NotInPurchasePeriod()": [
								{
									"details": "Emitted when a purchase or refund attempt is made outside the presale period."
								}
							],
							"NotRefundable()": [
								{
									"details": "Emitted when a refund is requested under conditions that do not permit refunds."
								}
							],
							"PurchaseBelowMinimum()": [
								{
									"details": "Emitted when a purchase amount is below the minimum allowed."
								}
							],
							"PurchaseLimitExceed()": [
								{
									"details": "Emitted when a participant's purchase would exceed the maximum allowed contribution."
								}
							],
							"SoftCapNotReached()": [
								{
									"details": "Emitted when attempting to finalize a presale that has not reached its soft cap."
								}
							],
							"Unauthorized()": [
								{
									"details": "Emitted when an unauthorized address attempts an action requiring specific permissions."
								}
							]
						},
						"events": {
							"Cancel(address,uint256)": {
								"details": "Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants to claim refunds for their contributions.",
								"params": {
									"creator": "Address of the contract owner who cancelled the presale.",
									"timestamp": "Block timestamp when the cancellation occurred."
								}
							},
							"Deposit(address,uint256,uint256)": {
								"details": "Emitted when the presale contract owner deposits tokens for sale. This is usually done before the presale starts to ensure tokens are available for purchase.",
								"params": {
									"amount": "Amount of tokens deposited.",
									"creator": "Address of the contract owner who performs the deposit.",
									"timestamp": "Block timestamp when the deposit occurred."
								}
							},
							"Finalized(address,uint256,uint256)": {
								"details": "Emitted when the presale is successfully finalized. Finalization may involve distributing tokens, transferring raised funds to a designated wallet, and/or enabling token claim functionality.",
								"params": {
									"amount": "Total amount of ETH raised in the presale.",
									"creator": "Address of the contract owner who finalized the presale.",
									"timestamp": "Block timestamp when the finalization occurred."
								}
							},
							"Purchase(address,uint256)": {
								"details": "Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed, and the amount of tokens purchased.",
								"params": {
									"beneficiary": "Address of the participant who made the purchase.",
									"contribution": "Amount of ETH contributed by the participant."
								}
							},
							"Refund(address,uint256,uint256)": {
								"details": "Emitted when a participant successfully claims a refund. This is typically allowed when the presale is cancelled or does not meet its funding goals.",
								"params": {
									"amount": "Amount of wei refunded.",
									"beneficiary": "Address of the participant receiving the refund.",
									"timestamp": "Block timestamp when the refund occurred."
								}
							},
							"TokenClaim(address,uint256,uint256)": {
								"details": "Emitted when participants claim their purchased tokens after the presale is finalized. ",
								"params": {
									"amount": "Amount of tokens claimed.",
									"beneficiary": "Address of the participant claiming tokens.",
									"timestamp": "Block timestamp when the claim occurred."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"cancel()": {
								"details": "Cancels the presale and enables the refund process for participants. This function can be used in scenarios where the presale does not meet its goals or if the organizer decides to cancel the event for any reason. ",
								"returns": {
									"_0": "A boolean value indicating whether the presale was successfully cancelled."
								}
							},
							"claim()": {
								"details": "Allows participants to claim their purchased tokens after the presale is finalized. Participants call this function to receive the tokens they are entitled to. ",
								"returns": {
									"_0": "The amount of tokens claimed by the caller."
								}
							},
							"deposit()": {
								"details": "Allows for the deposit of presale tokens by the owner. This function is intended to be called by the presale contract owner to deposit the tokens that are to be sold during the presale. ",
								"returns": {
									"_0": "The amount of tokens deposited for the presale."
								}
							},
							"finalize()": {
								"details": "Finalizes the presale, allowing for the distribution of tokens to participants and the withdrawal of funds raised to the beneficiary. This function is typically called after the presale ends, assuming it meets any predefined criteria such as minimum funding goals. ",
								"returns": {
									"_0": "A boolean value indicating whether the presale was successfully finalized."
								}
							},
							"refund()": {
								"details": "Enables participants to request a refund of their contribution if the presale is cancelled or if they are otherwise eligible for a refund according to the presale's terms. ",
								"returns": {
									"_0": "The amount of funds refunded to the caller."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"cancel()": "ea8a1af0",
							"claim()": "4e71d92d",
							"deposit()": "d0e30db0",
							"finalize()": "4bb278f3",
							"refund()": "590e1ae3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"HardCapExceed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCapValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitializationParameters\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLimitValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidLiquidityValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"currentState\",\"type\":\"uint8\"}],\"name\":\"InvalidState\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTimestampValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquificationFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotClaimable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInPurchasePeriod\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotRefundable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PurchaseBelowMinimum\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PurchaseLimitExceed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SoftCapNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Cancel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Finalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"contribution\",\"type\":\"uint256\"}],\"name\":\"Purchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Refund\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokenClaim\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancel\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalize\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"HardCapExceed()\":[{\"details\":\"Emitted when a purchase attempt exceeds the presale's hard cap.\"}],\"InvalidCapValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidInitializationParameters()\":[{\"details\":\"Emitted when the initialization parameters provided to the contract are invalid.\"}],\"InvalidLimitValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidLiquidityValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"InvalidState(uint8)\":[{\"details\":\"Emitted when an action is performed in an invalid state.\",\"params\":{\"currentState\":\"The current state of the contract.\"}}],\"InvalidTimestampValue()\":[{\"details\":\"Emitted when the pool validation parameters provided to the contract are invalid.\"}],\"LiquificationFailed()\":[{\"details\":\"Emitted when the process of adding liquidity to a liquidity pool fails.\"}],\"NotClaimable()\":[{\"details\":\"Emitted when user with no contribution attempts to claim tokens.\"}],\"NotInPurchasePeriod()\":[{\"details\":\"Emitted when a purchase or refund attempt is made outside the presale period.\"}],\"NotRefundable()\":[{\"details\":\"Emitted when a refund is requested under conditions that do not permit refunds.\"}],\"PurchaseBelowMinimum()\":[{\"details\":\"Emitted when a purchase amount is below the minimum allowed.\"}],\"PurchaseLimitExceed()\":[{\"details\":\"Emitted when a participant's purchase would exceed the maximum allowed contribution.\"}],\"SoftCapNotReached()\":[{\"details\":\"Emitted when attempting to finalize a presale that has not reached its soft cap.\"}],\"Unauthorized()\":[{\"details\":\"Emitted when an unauthorized address attempts an action requiring specific permissions.\"}]},\"events\":{\"Cancel(address,uint256)\":{\"details\":\"Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants to claim refunds for their contributions.\",\"params\":{\"creator\":\"Address of the contract owner who cancelled the presale.\",\"timestamp\":\"Block timestamp when the cancellation occurred.\"}},\"Deposit(address,uint256,uint256)\":{\"details\":\"Emitted when the presale contract owner deposits tokens for sale. This is usually done before the presale starts to ensure tokens are available for purchase.\",\"params\":{\"amount\":\"Amount of tokens deposited.\",\"creator\":\"Address of the contract owner who performs the deposit.\",\"timestamp\":\"Block timestamp when the deposit occurred.\"}},\"Finalized(address,uint256,uint256)\":{\"details\":\"Emitted when the presale is successfully finalized. Finalization may involve distributing tokens, transferring raised funds to a designated wallet, and/or enabling token claim functionality.\",\"params\":{\"amount\":\"Total amount of ETH raised in the presale.\",\"creator\":\"Address of the contract owner who finalized the presale.\",\"timestamp\":\"Block timestamp when the finalization occurred.\"}},\"Purchase(address,uint256)\":{\"details\":\"Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed, and the amount of tokens purchased.\",\"params\":{\"beneficiary\":\"Address of the participant who made the purchase.\",\"contribution\":\"Amount of ETH contributed by the participant.\"}},\"Refund(address,uint256,uint256)\":{\"details\":\"Emitted when a participant successfully claims a refund. This is typically allowed when the presale is cancelled or does not meet its funding goals.\",\"params\":{\"amount\":\"Amount of wei refunded.\",\"beneficiary\":\"Address of the participant receiving the refund.\",\"timestamp\":\"Block timestamp when the refund occurred.\"}},\"TokenClaim(address,uint256,uint256)\":{\"details\":\"Emitted when participants claim their purchased tokens after the presale is finalized. \",\"params\":{\"amount\":\"Amount of tokens claimed.\",\"beneficiary\":\"Address of the participant claiming tokens.\",\"timestamp\":\"Block timestamp when the claim occurred.\"}}},\"kind\":\"dev\",\"methods\":{\"cancel()\":{\"details\":\"Cancels the presale and enables the refund process for participants. This function can be used in scenarios where the presale does not meet its goals or if the organizer decides to cancel the event for any reason. \",\"returns\":{\"_0\":\"A boolean value indicating whether the presale was successfully cancelled.\"}},\"claim()\":{\"details\":\"Allows participants to claim their purchased tokens after the presale is finalized. Participants call this function to receive the tokens they are entitled to. \",\"returns\":{\"_0\":\"The amount of tokens claimed by the caller.\"}},\"deposit()\":{\"details\":\"Allows for the deposit of presale tokens by the owner. This function is intended to be called by the presale contract owner to deposit the tokens that are to be sold during the presale. \",\"returns\":{\"_0\":\"The amount of tokens deposited for the presale.\"}},\"finalize()\":{\"details\":\"Finalizes the presale, allowing for the distribution of tokens to participants and the withdrawal of funds raised to the beneficiary. This function is typically called after the presale ends, assuming it meets any predefined criteria such as minimum funding goals. \",\"returns\":{\"_0\":\"A boolean value indicating whether the presale was successfully finalized.\"}},\"refund()\":{\"details\":\"Enables participants to request a refund of their contribution if the presale is cancelled or if they are otherwise eligible for a refund according to the presale's terms. \",\"returns\":{\"_0\":\"The amount of funds refunded to the caller.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This interface outlines the functions related to managing and interacting with presale contracts. It includes capabilities such as depositing funds, finalizing the presale, canceling the presale, claiming tokens, and refunding contributions. Implementing contracts should provide the logic for these operations in the context of a presale event.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IPresale.sol\":\"IPresale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interfaces/IPresale.sol\":{\"keccak256\":\"0xe7da09f138555161982095b2687a07e5d6d8232329efafc4c4d8dc2315f1483e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20121344a1ae44e81ab9a2669d9d1b80cbde089128c51dc48a9fd77c30d7fc21\",\"dweb:/ipfs/QmXs8tTWG1gEnWUjNksPxuzK2tTcYe2oqapjHu1hDL8Nxs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This interface outlines the functions related to managing and interacting with presale contracts. It includes capabilities such as depositing funds, finalizing the presale, canceling the presale, claiming tokens, and refunding contributions. Implementing contracts should provide the logic for these operations in the context of a presale event.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1079
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1080,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1079
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1061,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1113
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1113,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1113,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1113,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1113
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1114,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1113,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							789
						]
					},
					"id": 790,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 790,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 789,
							"linearizedBaseContracts": [
								789
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 789,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 789,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "2548:139:6",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "2558:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 473,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 469,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$789",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2612:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 465,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2581:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "2581:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 475,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2643:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 476,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 477,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2659:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 478,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2674:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 474,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "2630:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2493:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2493:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2493:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2507:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "2524:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:6"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:6"
									},
									"scope": 789,
									"src": "2462:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "3453:370:6",
										"statements": [
											{
												"id": 524,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:6",
												"statements": [
													{
														"assignments": [
															495
														],
														"declarations": [
															{
																"constant": false,
																"id": 495,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 524,
																"src": "3487:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 494,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 504,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 500,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$789",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 498,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 502,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3545:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 496,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3514:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "3514:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "3571:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 506,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3590:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 515,
														"nodeType": "IfStatement",
														"src": "3567:160:6",
														"trueBody": {
															"id": 514,
															"nodeType": "Block",
															"src": "3609:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 509,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "3667:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 510,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 495,
																				"src": "3676:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 511,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3694:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 508,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "3634:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 513,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 517,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "3753:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 518,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "3760:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 519,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "3769:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 520,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3788:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 516,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "3740:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 523,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3386:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3386:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3386:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "3417:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:6"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:6"
									},
									"scope": 789,
									"src": "3355:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "4477:303:6",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 572,
														"src": "4487:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 537,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 541,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4530:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "4530:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 543,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "4546:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 544,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "4555:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 539,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:6"
											},
											{
												"condition": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 549,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "4602:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 550,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4609:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 548,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "4578:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 571,
												"nodeType": "IfStatement",
												"src": "4573:201:6",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "4624:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4658:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 557,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "4680:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 558,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "4680:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 532,
																						"src": "4696:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 560,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 561,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 553,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4638:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 564,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 566,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 530,
																		"src": "4743:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 567,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 538,
																		"src": "4750:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 565,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "4723:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 569,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4422:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 528,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4422:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4436:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "4453:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:6"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:6"
									},
									"scope": 789,
									"src": "4400:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "5227:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 586,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "5241:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 600,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "5350:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 601,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5354:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 602,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5361:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "5328:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 613,
													"nodeType": "IfStatement",
													"src": "5323:117:6",
													"trueBody": {
														"id": 612,
														"nodeType": "Block",
														"src": "5368:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 608,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 577,
																					"src": "5422:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 606,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 605,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5389:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 611,
																"nodeType": "RevertStatement",
																"src": "5382:47:6"
															}
														]
													}
												},
												"id": 614,
												"nodeType": "IfStatement",
												"src": "5237:203:6",
												"trueBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "5262:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 592,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 577,
																		"src": "5289:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 593,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 579,
																		"src": "5296:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 594,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "5300:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 591,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5276:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 596,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5156:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 576,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 575,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5172:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5184:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "5199:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:6"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:6"
									},
									"scope": 789,
									"src": "5124:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "5965:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 631,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "5979:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 646,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 647,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "6108:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 648,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6112:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 649,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6119:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 644,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "6076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 660,
													"nodeType": "IfStatement",
													"src": "6071:127:6",
													"trueBody": {
														"id": 659,
														"nodeType": "Block",
														"src": "6126:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 655,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 620,
																					"src": "6180:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 654,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 653,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 652,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6147:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 658,
																"nodeType": "RevertStatement",
																"src": "6140:47:6"
															}
														]
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "5975:223:6",
												"trueBody": {
													"id": 643,
													"nodeType": "Block",
													"src": "6000:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 637,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 620,
																		"src": "6031:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 622,
																		"src": "6038:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 639,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 624,
																		"src": "6044:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 640,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 626,
																		"src": "6048:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 636,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6014:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 642,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5843:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 619,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 618,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5867:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5889:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5909:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "5932:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:6"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:6"
									},
									"scope": 789,
									"src": "5798:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "6971:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 676,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 669,
																"src": "6985:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 690,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "7093:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 691,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "7097:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 692,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "7104:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 688,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7072:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 703,
													"nodeType": "IfStatement",
													"src": "7067:116:6",
													"trueBody": {
														"id": 702,
														"nodeType": "Block",
														"src": "7111:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 667,
																					"src": "7165:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 696,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 695,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7132:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 701,
																"nodeType": "RevertStatement",
																"src": "7125:47:6"
															}
														]
													}
												},
												"id": 704,
												"nodeType": "IfStatement",
												"src": "6981:202:6",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "7006:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 682,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "7033:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 683,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "7040:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "7044:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 681,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "7020:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 686,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6900:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 665,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6916:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6928:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "6943:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:6"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:6"
									},
									"scope": 789,
									"src": "6869:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "7756:650:6",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7766:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 717,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:6"
											},
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 746,
														"src": "7794:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:6"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:6",
													"nodeType": "YulBlock",
													"src": "7848:396:6",
													"statements": [
														{
															"nativeSrc": "7862:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:6",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:6"
																		},
																		"nativeSrc": "7899:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:6"
																		},
																		"nativeSrc": "7916:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:6",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:6"
																},
																"nativeSrc": "7877:60:6",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:6",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:6",
																"nodeType": "YulBlock",
																"src": "7998:157:6",
																"statements": [
																	{
																		"nativeSrc": "8016:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:6"
																			},
																			"nativeSrc": "8027:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:6"
																					},
																					"nativeSrc": "8078:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:6"
																			},
																			"nativeSrc": "8055:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:6"
																		},
																		"nativeSrc": "8055:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:6"
																					},
																					"nativeSrc": "8124:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:6"
																			},
																			"nativeSrc": "8112:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:6"
																		},
																		"nativeSrc": "8112:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:6"
																},
																"nativeSrc": "7982:15:6",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:6"
															},
															"nativeSrc": "7979:176:6",
															"nodeType": "YulIf",
															"src": "7979:176:6"
														},
														{
															"nativeSrc": "8168:30:6",
															"nodeType": "YulAssignment",
															"src": "8168:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:6"
																},
																"nativeSrc": "8182:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:6"
																}
															]
														},
														{
															"nativeSrc": "8211:23:6",
															"nodeType": "YulAssignment",
															"src": "8211:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:6"
																},
																"nativeSrc": "8226:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:6",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:6",
														"valueSize": 1
													},
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:6",
														"valueSize": 1
													},
													{
														"declaration": 719,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:6",
														"valueSize": 1
													},
													{
														"declaration": 710,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 721,
												"nodeType": "InlineAssembly",
												"src": "7823:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 722,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "8258:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 735,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 733,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "8310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 727,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 710,
																			"src": "8284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 725,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 745,
												"nodeType": "IfStatement",
												"src": "8254:146:6",
												"trueBody": {
													"id": 744,
													"nodeType": "Block",
													"src": "8328:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 740,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "8382:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 739,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 738,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 741,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 737,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8349:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 743,
															"nodeType": "RevertStatement",
															"src": "8342:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7715:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "7715:6:6"
													},
													"referencedDeclaration": 380,
													"src": "7715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "7729:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:6"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:6"
									},
									"scope": 789,
									"src": "7686:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "8997:391:6",
										"statements": [
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9007:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 758,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 760,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:6"
											},
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9029:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 763,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:6"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "9057:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 764,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:6",
													"nodeType": "YulBlock",
													"src": "9111:174:6",
													"statements": [
														{
															"nativeSrc": "9125:71:6",
															"nodeType": "YulAssignment",
															"src": "9125:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:6"
																		},
																		"nativeSrc": "9141:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:6"
																		},
																		"nativeSrc": "9158:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:6"
																		},
																		"nativeSrc": "9175:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:6"
																},
																"nativeSrc": "9136:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:6"
																}
															]
														},
														{
															"nativeSrc": "9209:30:6",
															"nodeType": "YulAssignment",
															"src": "9209:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:6"
																},
																"nativeSrc": "9223:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:6"
																}
															]
														},
														{
															"nativeSrc": "9252:23:6",
															"nodeType": "YulAssignment",
															"src": "9252:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:6"
																},
																"nativeSrc": "9267:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:6",
														"valueSize": 1
													},
													{
														"declaration": 753,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:6",
														"valueSize": 1
													},
													{
														"declaration": 762,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:6",
														"valueSize": 1
													},
													{
														"declaration": 759,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:6",
														"valueSize": 1
													},
													{
														"declaration": 751,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 767,
												"nodeType": "InlineAssembly",
												"src": "9086:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 759,
														"src": "9301:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 769,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 762,
																		"src": "9313:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 780,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "9364:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 774,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 751,
																						"src": "9339:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 772,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 784,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 786,
												"nodeType": "Return",
												"src": "9294:87:6"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8941:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 750,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 749,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8941:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8955:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 752,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:6"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "8991:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:6"
									},
									"scope": 789,
									"src": "8908:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 790,
							"src": "698:8692:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1049
						],
						"Errors": [
							1101
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 791,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 793,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1050,
							"sourceUnit": 1102,
							"src": "127:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 792,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1101,
										"src": "135:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 794,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "Address",
							"nameLocation": "241:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 799,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "358:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:7"
									},
									"src": "335:39:7"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "1361:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 809,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1049",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1049",
																		"typeString": "library Address"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 812,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 804,
														"src": "1399:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 826,
												"nodeType": "IfStatement",
												"src": "1371:125:7",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "1407:89:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 819,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1049",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1049",
																						"typeString": "library Address"
																					}
																				],
																				"id": 818,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 817,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 822,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "1478:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 814,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "1428:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1101_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "1428:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 824,
															"nodeType": "RevertStatement",
															"src": "1421:64:7"
														}
													]
												}
											},
											{
												"assignments": [
													828,
													830
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "1507:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 827,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 830,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 846,
														"src": "1521:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 829,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 837,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 831,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 802,
																"src": "1548:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 833,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "1570:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:7"
											},
											{
												"condition": {
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:7",
													"subExpression": {
														"id": 838,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "1596:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "1591:58:7",
												"trueBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "1605:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "1627:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 840,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "1619:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 843,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1309:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "1336:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:7"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:7"
									},
									"scope": 1049,
									"src": "1290:365:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "2589:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "2628:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "2636:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 857,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "2606:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 856,
												"id": 862,
												"nodeType": "Return",
												"src": "2599:45:7"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2522:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2538:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 851,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:7"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2575:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:7"
									},
									"scope": 1049,
									"src": "2500:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "3088:294:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 878,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1049",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1049",
																		"typeString": "library Address"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 881,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "3126:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "3098:123:7",
												"trueBody": {
													"id": 894,
													"nodeType": "Block",
													"src": "3133:88:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 888,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$1049",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$1049",
																						"typeString": "library Address"
																					}
																				],
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 886,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:7",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 891,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "3204:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 883,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "3154:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1101_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:7",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1089,
																	"src": "3154:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 893,
															"nodeType": "RevertStatement",
															"src": "3147:63:7"
														}
													]
												}
											},
											{
												"assignments": [
													897,
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3231:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 896,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "3245:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 898,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [
														{
															"id": 904,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 869,
															"src": "3298:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 900,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "3272:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 902,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "3291:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 867,
															"src": "3347:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 909,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "3355:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 910,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3364:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 907,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "3320:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 875,
												"id": 912,
												"nodeType": "Return",
												"src": "3313:62:7"
											}
										]
									},
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3006:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3022:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 868,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3041:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:7"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "3074:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:7"
									},
									"scope": 1049,
									"src": "2975:407:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "3621:154:7",
										"statements": [
											{
												"assignments": [
													925,
													927
												],
												"declarations": [
													{
														"constant": false,
														"id": 925,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3632:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 924,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 927,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "3646:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 932,
												"initialValue": {
													"arguments": [
														{
															"id": 930,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "3691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 928,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3673:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "3740:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 935,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "3748:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 936,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "3757:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 933,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "3713:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 923,
												"id": 938,
												"nodeType": "Return",
												"src": "3706:62:7"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3549:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3565:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:7"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "3607:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:7"
									},
									"scope": 1049,
									"src": "3521:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "4013:156:7",
										"statements": [
											{
												"assignments": [
													951,
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 951,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "4024:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 950,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 965,
														"src": "4038:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 952,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 958,
												"initialValue": {
													"arguments": [
														{
															"id": 956,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "4085:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 954,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4065:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "4134:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4142:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 962,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "4151:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 959,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "4107:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 949,
												"id": 964,
												"nodeType": "Return",
												"src": "4100:62:7"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3946:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3962:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:7"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "3999:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:7"
									},
									"scope": 1049,
									"src": "3916:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "4595:424:7",
										"statements": [
											{
												"condition": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:7",
													"subExpression": {
														"id": 978,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4610:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1003,
													"nodeType": "Block",
													"src": "4669:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 985,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "4857:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 989,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "4883:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 992,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "4853:119:7",
															"trueBody": {
																"id": 999,
																"nodeType": "Block",
																"src": "4908:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 996,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "4950:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 995,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 799,
																				"src": "4933:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 998,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1001,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "4992:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 977,
															"id": 1002,
															"nodeType": "Return",
															"src": "4985:17:7"
														}
													]
												},
												"id": 1004,
												"nodeType": "IfStatement",
												"src": "4605:408:7",
												"trueBody": {
													"id": 984,
													"nodeType": "Block",
													"src": "4619:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 981,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "4641:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 980,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "4633:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 983,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "4482:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "4506:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "4528:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 972,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:7"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "4581:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 975,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:7"
									},
									"scope": 1049,
									"src": "4437:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "5323:122:7",
										"statements": [
											{
												"condition": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:7",
													"subExpression": {
														"id": 1016,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "5338:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1025,
													"nodeType": "Block",
													"src": "5397:42:7",
													"statements": [
														{
															"expression": {
																"id": 1023,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "5418:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1015,
															"id": 1024,
															"nodeType": "Return",
															"src": "5411:17:7"
														}
													]
												},
												"id": 1026,
												"nodeType": "IfStatement",
												"src": "5333:106:7",
												"trueBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "5347:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "5369:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1018,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "5361:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1021,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "5247:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1008,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "5261:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1010,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:7"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "5309:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1013,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:7"
									},
									"scope": 1049,
									"src": "5221:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "5614:432:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1034,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "5690:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "5989:51:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1040,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1101,
																		"src": "6010:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1101_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:7",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1092,
																	"src": "6010:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1044,
															"nodeType": "RevertStatement",
															"src": "6003:26:7"
														}
													]
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "5686:354:7",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "5713:270:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:7",
																"nodeType": "YulBlock",
																"src": "5840:133:7",
																"statements": [
																	{
																		"nativeSrc": "5858:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:7"
																			},
																			"nativeSrc": "5881:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:7",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:7",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:7"
																					},
																					"nativeSrc": "5922:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:7"
																			},
																			"nativeSrc": "5915:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:7"
																		},
																		"nativeSrc": "5915:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:7"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1031,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1031,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:7",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 1038,
															"nodeType": "InlineAssembly",
															"src": "5815:158:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "5576:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:7"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:7"
									},
									"scope": 1049,
									"src": "5559:487:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1050,
							"src": "233:5815:7",
							"usedErrors": [
								799
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1079
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1052,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1060,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1057,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1056,
												"id": 1059,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1079,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1069,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1066,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1065,
												"id": 1068,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1063,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1079,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1074,
												"id": 1076,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1079,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1082,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:9",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1101,
							"linearizedBaseContracts": [
								1101
							],
							"name": "Errors",
							"nameLocation": "419:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:9",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1089,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "557:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "574:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:9"
									},
									"src": "531:59:9"
								},
								{
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:9",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1092,
									"name": "FailedCall",
									"nameLocation": "696:10:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:9"
									},
									"src": "690:19:9"
								},
								{
									"documentation": {
										"id": 1093,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:9",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1095,
									"name": "FailedDeployment",
									"nameLocation": "772:16:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:9"
									},
									"src": "766:25:9"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:9",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1100,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "884:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:9"
									},
									"src": "860:33:9"
								}
							],
							"scope": 1102,
							"src": "411:484:9",
							"usedErrors": [
								1089,
								1092,
								1095,
								1100
							],
							"usedEvents": []
						}
					],
					"src": "100:796:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1113
						]
					},
					"id": 1114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1104,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1113,
							"linearizedBaseContracts": [
								1113
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1106,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1113,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1114,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1421
						]
					},
					"id": 1422,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1115,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "40:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1421,
							"linearizedBaseContracts": [
								1421
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "76:18:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 1120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "110:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "117:2:11"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "143:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "143:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "142:9:11"
									},
									"scope": 1421,
									"src": "101:51:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "166:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "170:2:11"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "196:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "196:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:9:11"
									},
									"scope": 1421,
									"src": "157:48:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 1150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "220:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "250:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "242:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "274:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "266:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "295:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "290:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "290:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "324:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "319:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "319:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "353:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "348:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "348:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "378:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "373:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "373:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "406:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "398:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "423:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "418:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "418:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:205:11"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "461:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "456:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "456:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "475:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "470:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "470:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "489:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "484:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "484:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "455:44:11"
									},
									"scope": 1421,
									"src": "211:289:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 1171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "514:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "547:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "539:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "567:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "562:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "562:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "600:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "595:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "595:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "629:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "624:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "624:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "659:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "651:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "676:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "671:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "671:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "529:161:11"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "722:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "717:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "717:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "740:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "735:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "735:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "756:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "751:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "751:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:50:11"
									},
									"scope": 1421,
									"src": "505:262:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 1192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "781:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "814:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "806:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "838:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "830:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "859:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "854:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "854:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "883:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "878:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "908:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "903:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "903:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "936:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "928:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "953:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "948:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "948:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "796:171:11"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "991:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "986:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "986:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1005:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "1000:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1000:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "985:28:11"
									},
									"scope": 1421,
									"src": "772:242:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "1028:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1064:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1056:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1084:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1079:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1108:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1103:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1103:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1137:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1132:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1132:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1167:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1159:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1184:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1179:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1179:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:152:11"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1222:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1217:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1217:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1240:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "1235:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:34:11"
									},
									"scope": 1421,
									"src": "1019:232:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 1240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1265:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1308:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1300:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1332:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1324:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1324:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1353:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1348:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1348:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1377:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1372:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1372:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1402:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1397:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1397:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1430:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1422:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1422:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1447:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1442:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1442:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1470:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1465:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1226,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1465:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1488:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1482:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1228,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1482:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1499:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1491:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1491:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1502:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1290:227:11"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1541:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1536:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1536:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1555:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1240,
												"src": "1550:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1550:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:28:11"
									},
									"scope": 1421,
									"src": "1256:308:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1578:28:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1624:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1616:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1644:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1639:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1243,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1639:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1668:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1663:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1697:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1692:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1692:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1727:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1719:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1744:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1739:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1251,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1767:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1762:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1253,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1762:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1785:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1779:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1255,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1779:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1796:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1788:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1788:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1807:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1799:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1606:208:11"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1838:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1833:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1833:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1856:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "1851:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1851:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:34:11"
									},
									"scope": 1421,
									"src": "1569:298:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 1284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1881:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1920:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1915:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1915:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1943:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1938:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1938:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1984:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1965:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1272,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1965:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1273,
													"nodeType": "ArrayTypeName",
													"src": "1965:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2006:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1998:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1998:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2023:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2018:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2018:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1905:132:11"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2070:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "2056:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1280,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2056:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1281,
													"nodeType": "ArrayTypeName",
													"src": "2056:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:23:11"
									},
									"scope": 1421,
									"src": "1872:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2093:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2132:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2127:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2127:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2156:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2151:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1287,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2151:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2196:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2177:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1289,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2177:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1290,
													"nodeType": "ArrayTypeName",
													"src": "2177:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2218:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2210:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2235:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2230:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2230:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2117:132:11"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2282:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2268:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2268:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "2268:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:23:11"
									},
									"scope": 1421,
									"src": "2084:207:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2305:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2332:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2327:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2327:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2365:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2346:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1304,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2346:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1305,
													"nodeType": "ArrayTypeName",
													"src": "2346:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2379:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2371:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2371:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2388:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2383:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2383:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:71:11"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2462:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "2448:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1312,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2448:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1313,
													"nodeType": "ArrayTypeName",
													"src": "2448:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:23:11"
									},
									"scope": 1421,
									"src": "2296:175:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 1333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2485:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2512:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2507:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2528:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2523:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2523:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2560:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2541:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1321,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2541:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1322,
													"nodeType": "ArrayTypeName",
													"src": "2541:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2574:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2566:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2566:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2583:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2578:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2578:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:86:11"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2641:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2627:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1329,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2627:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1330,
													"nodeType": "ArrayTypeName",
													"src": "2627:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2626:23:11"
									},
									"scope": 1421,
									"src": "2476:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2664:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2691:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2686:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2686:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2706:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2701:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2701:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2739:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2720:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1338,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2720:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1339,
													"nodeType": "ArrayTypeName",
													"src": "2720:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2753:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2745:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2745:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2762:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2757:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2757:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:86:11"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2820:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "2806:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1346,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2806:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1347,
													"nodeType": "ArrayTypeName",
													"src": "2806:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2805:23:11"
									},
									"scope": 1421,
									"src": "2655:174:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2843:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2870:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2865:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2865:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2900:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2881:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1353,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2881:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1354,
													"nodeType": "ArrayTypeName",
													"src": "2881:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2914:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2906:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2923:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2918:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2918:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2864:68:11"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2997:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2983:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1361,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2983:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1362,
													"nodeType": "ArrayTypeName",
													"src": "2983:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:23:11"
									},
									"scope": 1421,
									"src": "2834:172:11",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 1376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "3021:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "3032:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3027:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3027:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3046:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3041:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3041:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3061:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3056:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3056:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3026:44:11"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3099:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "3094:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3094:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3093:14:11"
									},
									"scope": 1421,
									"src": "3012:96:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 1387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3122:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3140:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3135:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3135:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3155:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3150:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1379,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3150:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3171:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3166:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:48:11"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3211:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3206:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3206:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:16:11"
									},
									"scope": 1421,
									"src": "3113:109:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3236:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3253:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3248:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3248:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3269:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3264:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3264:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3285:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3280:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3247:49:11"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3325:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "3320:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3320:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3319:15:11"
									},
									"scope": 1421,
									"src": "3227:108:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 1409,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3349:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3368:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3363:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3363:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3397:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3378:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3378:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "3378:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:40:11"
									},
									"returnParameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3440:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "3426:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1405,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3426:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1406,
													"nodeType": "ArrayTypeName",
													"src": "3426:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3425:23:11"
									},
									"scope": 1421,
									"src": "3340:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 1420,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3463:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3481:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3476:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3476:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3511:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3492:23:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1412,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3492:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1413,
													"nodeType": "ArrayTypeName",
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:41:11"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3554:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "3540:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1416,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3540:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1417,
													"nodeType": "ArrayTypeName",
													"src": "3540:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3539:23:11"
									},
									"scope": 1421,
									"src": "3454:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1422,
							"src": "66:3499:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "40:3526:11"
				},
				"id": 11
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							1421
						],
						"IUniswapV2Router02": [
							1509
						]
					},
					"id": 1510,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1423,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:12"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 1424,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1510,
							"sourceUnit": 1422,
							"src": "65:34:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1425,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"133:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1421,
										"src": "133:18:12"
									},
									"id": 1426,
									"nodeType": "InheritanceSpecifier",
									"src": "133:18:12"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1509,
							"linearizedBaseContracts": [
								1509,
								1421
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "111:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 1443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "167:47:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "232:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "224:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "224:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "252:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "247:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1429,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "247:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "276:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "271:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "271:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "305:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "300:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "335:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "327:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "352:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "347:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "347:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "214:152:12"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "390:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "385:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "385:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "384:16:12"
									},
									"scope": 1509,
									"src": "158:243:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 1468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "415:57:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "490:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "482:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "510:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "505:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "505:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "534:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "529:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "529:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "563:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "558:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "558:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "593:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "585:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "610:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "605:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "605:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "633:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "628:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "628:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "651:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "645:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1458,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "645:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "662:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "654:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1460,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "673:1:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "665:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:208:12"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "704:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "699:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "699:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:12"
									},
									"scope": 1509,
									"src": "406:309:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 1482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "730:53:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "798:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "793:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "821:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "816:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "862:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "843:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1473,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "843:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1474,
													"nodeType": "ArrayTypeName",
													"src": "843:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "884:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "876:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "901:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "896:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:132:12"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:0:12"
									},
									"scope": 1509,
									"src": "721:204:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 1494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "939:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1004:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "999:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1483,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "999:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1045:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1026:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1485,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1026:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1486,
													"nodeType": "ArrayTypeName",
													"src": "1026:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1067:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1059:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1084:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "1079:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:109:12"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1115:0:12"
									},
									"scope": 1509,
									"src": "930:186:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 1508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1130:50:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1195:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1190:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1190:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1218:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1213:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1259:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1240:23:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1499,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1240:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1500,
													"nodeType": "ArrayTypeName",
													"src": "1240:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1281:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1273:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1273:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1298:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1293:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1293:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:132:12"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:0:12"
									},
									"scope": 1509,
									"src": "1121:201:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1510,
							"src": "101:1223:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:1286:12"
				},
				"id": 12
			},
			"SDC-Presale.sol": {
				"ast": {
					"absolutePath": "SDC-Presale.sol",
					"exportedSymbols": {
						"Address": [
							1049
						],
						"IERC20": [
							380
						],
						"IPresale": [
							2547
						],
						"IUniswapV2Router02": [
							1509
						],
						"Ownable": [
							147
						],
						"Presale": [
							2416
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							789
						]
					},
					"id": 2417,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1511,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1513,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 381,
							"src": "59:72:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1512,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "68:6:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 148,
							"src": "132:69:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1514,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "141:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 790,
							"src": "202:84:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1516,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 789,
										"src": "211:9:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 1519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 1050,
							"src": "287:68:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1518,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "296:7:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router02.sol",
							"id": 1521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 1510,
							"src": "356:103:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1520,
										"name": "IUniswapV2Router02",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1509,
										"src": "365:18:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "interfaces/IPresale.sol",
							"file": "./interfaces/IPresale.sol",
							"id": 1523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 2548,
							"src": "460:53:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1522,
										"name": "IPresale",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2547,
										"src": "469:8:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2417,
							"sourceUnit": 303,
							"src": "514:87:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1524,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "523:15:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1527,
										"name": "IPresale",
										"nameLocations": [
											"715:8:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2547,
										"src": "715:8:13"
									},
									"id": 1528,
									"nodeType": "InheritanceSpecifier",
									"src": "715:8:13"
								},
								{
									"baseName": {
										"id": 1529,
										"name": "Ownable",
										"nameLocations": [
											"725:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "725:7:13"
									},
									"id": 1530,
									"nodeType": "InheritanceSpecifier",
									"src": "725:7:13"
								},
								{
									"baseName": {
										"id": 1531,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"734:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "734:15:13"
									},
									"id": 1532,
									"nodeType": "InheritanceSpecifier",
									"src": "734:15:13"
								}
							],
							"canonicalName": "Presale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1526,
								"nodeType": "StructuredDocumentation",
								"src": "603:91:13",
								"text": " @title Presale contract\n @notice Create and manage a presale of an ERC20 token"
							},
							"fullyImplemented": true,
							"id": 2416,
							"linearizedBaseContracts": [
								2416,
								302,
								147,
								1079,
								2547
							],
							"name": "Presale",
							"nameLocation": "704:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1536,
									"libraryName": {
										"id": 1533,
										"name": "SafeERC20",
										"nameLocations": [
											"762:9:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 789,
										"src": "762:9:13"
									},
									"nodeType": "UsingForDirective",
									"src": "756:27:13",
									"typeName": {
										"id": 1535,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1534,
											"name": "IERC20",
											"nameLocations": [
												"776:6:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "776:6:13"
										},
										"referencedDeclaration": 380,
										"src": "776:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1539,
									"libraryName": {
										"id": 1537,
										"name": "Address",
										"nameLocations": [
											"794:7:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1049,
										"src": "794:7:13"
									},
									"nodeType": "UsingForDirective",
									"src": "788:34:13",
									"typeName": {
										"id": 1538,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "806:15:13",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "828:89:13",
										"text": "Для масштаба при пропорциональном вычислении."
									},
									"id": 1545,
									"mutability": "constant",
									"name": "SCALE",
									"nameLocation": "939:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2416,
									"src": "922:31:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1541,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "922:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 1544,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1542,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "947:2:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 1543,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "951:2:13",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "947:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Presale.PresaleOptions",
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "960:897:13",
										"text": " @notice Параметры пресейла\n @param tokenDeposit Всего токенов, вносимых в контракт (и на продажу, и на ликвидность).\n @param hardCap Максимальное количество BNB (wei), которое хотим собрать.\n @param softCap Минимальное количество BNB для успеха.\n @param max Максимальный взнос от одного адреса.\n @param min Минимальный взнос от одного адреса.\n @param start Timestamp начала пресейла.\n @param end Timestamp конца пресейла.\n @param liquidityBps Процент (в basis points) от собранных средств, который пойдёт в ликвидность (например, 50% = 5000)."
									},
									"id": 1563,
									"members": [
										{
											"constant": false,
											"id": 1548,
											"mutability": "mutable",
											"name": "tokenDeposit",
											"nameLocation": "1903:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1895:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1547,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1895:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1550,
											"mutability": "mutable",
											"name": "hardCap",
											"nameLocation": "1933:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1925:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1549,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1925:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1552,
											"mutability": "mutable",
											"name": "softCap",
											"nameLocation": "1958:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1950:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1551,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1950:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1554,
											"mutability": "mutable",
											"name": "max",
											"nameLocation": "1983:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1975:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1553,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1975:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1556,
											"mutability": "mutable",
											"name": "min",
											"nameLocation": "2004:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "1996:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1555,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1996:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1558,
											"mutability": "mutable",
											"name": "start",
											"nameLocation": "2025:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "2017:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 1557,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "2017:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1560,
											"mutability": "mutable",
											"name": "end",
											"nameLocation": "2048:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "2040:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint112",
												"typeString": "uint112"
											},
											"typeName": {
												"id": 1559,
												"name": "uint112",
												"nodeType": "ElementaryTypeName",
												"src": "2040:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1562,
											"mutability": "mutable",
											"name": "liquidityBps",
											"nameLocation": "2068:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1563,
											"src": "2061:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1561,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2061:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PresaleOptions",
									"nameLocation": "1870:14:13",
									"nodeType": "StructDefinition",
									"scope": 2416,
									"src": "1863:225:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Presale.Pool",
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2094:942:13",
										"text": " @notice Структура хранения состояния пресейла\n @param token Адрес токена (ERC20).\n @param uniswapV2Router02 Адрес роутера (PancakeSwap / Uniswap V2).\n @param tokenBalance Текущее количество токенов на контракте.\n @param tokensClaimable Сколько токенов предназначено для участников пресейла.\n @param tokensLiquidity Сколько токенов пойдёт в пул ликвидности.\n @param weiRaised Сколько всего BNB собрано.\n @param weth Адрес WETH / WBNB (обёрнутый BNB).\n @param state Текущее состояние (1: Инициализирован, 2: Активен, 3: Отменён, 4: Завершён).\n @param options Параметры пресейла PresaleOptions."
									},
									"id": 1586,
									"members": [
										{
											"constant": false,
											"id": 1567,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "3070:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3063:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$380",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1566,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1565,
													"name": "IERC20",
													"nameLocations": [
														"3063:6:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 380,
													"src": "3063:6:13"
												},
												"referencedDeclaration": 380,
												"src": "3063:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1570,
											"mutability": "mutable",
											"name": "uniswapV2Router02",
											"nameLocation": "3104:17:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3085:36:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
												"typeString": "contract IUniswapV2Router02"
											},
											"typeName": {
												"id": 1569,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1568,
													"name": "IUniswapV2Router02",
													"nameLocations": [
														"3085:18:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1509,
													"src": "3085:18:13"
												},
												"referencedDeclaration": 1509,
												"src": "3085:18:13",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
													"typeString": "contract IUniswapV2Router02"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1572,
											"mutability": "mutable",
											"name": "tokenBalance",
											"nameLocation": "3139:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3131:20:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1571,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3131:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1574,
											"mutability": "mutable",
											"name": "tokensClaimable",
											"nameLocation": "3169:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3161:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1573,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3161:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1576,
											"mutability": "mutable",
											"name": "tokensLiquidity",
											"nameLocation": "3202:15:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3194:23:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1575,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3194:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1578,
											"mutability": "mutable",
											"name": "weiRaised",
											"nameLocation": "3235:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3227:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1577,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3227:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1580,
											"mutability": "mutable",
											"name": "weth",
											"nameLocation": "3262:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3254:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1579,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3254:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1582,
											"mutability": "mutable",
											"name": "state",
											"nameLocation": "3282:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3276:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1581,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "3276:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1585,
											"mutability": "mutable",
											"name": "options",
											"nameLocation": "3312:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1586,
											"src": "3297:22:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage_ptr",
												"typeString": "struct Presale.PresaleOptions"
											},
											"typeName": {
												"id": 1584,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1583,
													"name": "PresaleOptions",
													"nameLocations": [
														"3297:14:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1563,
													"src": "3297:14:13"
												},
												"referencedDeclaration": 1563,
												"src": "3297:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage_ptr",
													"typeString": "struct Presale.PresaleOptions"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Pool",
									"nameLocation": "3048:4:13",
									"nodeType": "StructDefinition",
									"scope": 2416,
									"src": "3041:285:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "3332:66:13",
										"text": "Учет вкладов (адрес -> внесённые BNB)"
									},
									"functionSelector": "42e94c90",
									"id": 1591,
									"mutability": "mutable",
									"name": "contributions",
									"nameLocation": "3438:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2416,
									"src": "3403:48:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1590,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1588,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3411:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3403:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1589,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3422:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "3462:69:13",
										"text": "Храним все данные в одной структуре"
									},
									"functionSelector": "16f0115b",
									"id": 1595,
									"mutability": "mutable",
									"name": "pool",
									"nameLocation": "3548:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 2416,
									"src": "3536:16:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Pool_$1586_storage",
										"typeString": "struct Presale.Pool"
									},
									"typeName": {
										"id": 1594,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1593,
											"name": "Pool",
											"nameLocations": [
												"3536:4:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1586,
											"src": "3536:4:13"
										},
										"referencedDeclaration": 1586,
										"src": "3536:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Pool_$1586_storage_ptr",
											"typeString": "struct Presale.Pool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1596,
										"nodeType": "StructuredDocumentation",
										"src": "3559:99:13",
										"text": "2. Механика whitelist (для снижения рисков фронтраннинга)"
									},
									"functionSelector": "184d69ab",
									"id": 1599,
									"mutability": "mutable",
									"name": "isWhitelistEnabled",
									"nameLocation": "3675:18:13",
									"nodeType": "VariableDeclaration",
									"scope": 2416,
									"src": "3663:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1597,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "3663:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1598,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3696:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 1603,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "3739:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2416,
									"src": "3707:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1602,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3715:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3707:24:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1601,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "3726:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "3963:225:13",
										"statements": [
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "canRefund",
														"nameLocation": "3978:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "3973:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1606,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3973:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1608,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "4004:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$1586_storage",
																			"typeString": "struct Presale.Pool storage ref"
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4009:5:13",
																	"memberName": "state",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1582,
																	"src": "4004:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4018:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "4004:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1612,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4036:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4042:9:13",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4036:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"expression": {
																						"id": 1614,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "4054:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$1586_storage",
																							"typeString": "struct Presale.Pool storage ref"
																						}
																					},
																					"id": 1615,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4059:7:13",
																					"memberName": "options",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1585,
																					"src": "4054:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																						"typeString": "struct Presale.PresaleOptions storage ref"
																					}
																				},
																				"id": 1616,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4067:3:13",
																				"memberName": "end",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1560,
																				"src": "4054:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint112",
																					"typeString": "uint112"
																				}
																			},
																			"src": "4036:34:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1618,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1595,
																					"src": "4074:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Pool_$1586_storage",
																						"typeString": "struct Presale.Pool storage ref"
																					}
																				},
																				"id": 1619,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4079:9:13",
																				"memberName": "weiRaised",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1578,
																				"src": "4074:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"expression": {
																						"id": 1620,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "4091:4:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Pool_$1586_storage",
																							"typeString": "struct Presale.Pool storage ref"
																						}
																					},
																					"id": 1621,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4096:7:13",
																					"memberName": "options",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1585,
																					"src": "4091:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																						"typeString": "struct Presale.PresaleOptions storage ref"
																					}
																				},
																				"id": 1622,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4104:7:13",
																				"memberName": "softCap",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1552,
																				"src": "4091:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4074:37:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "4036:75:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1625,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4035:77:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4004:108:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1627,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3990:132:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3973:149:13"
											},
											{
												"condition": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4136:10:13",
													"subExpression": {
														"id": 1629,
														"name": "canRefund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "4137:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1634,
												"nodeType": "IfStatement",
												"src": "4132:38:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1631,
															"name": "NotRefundable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "4155:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4155:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1633,
													"nodeType": "RevertStatement",
													"src": "4148:22:13"
												}
											},
											{
												"id": 1635,
												"nodeType": "PlaceholderStatement",
												"src": "4180:1:13"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "3755:177:13",
										"text": "Модификатор, разрешающий рефанд при состоянии Canceled или при недостигнутом softCap после окончания"
									},
									"id": 1637,
									"name": "onlyRefundable",
									"nameLocation": "3946:14:13",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3960:2:13"
									},
									"src": "3937:251:13",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "4729:253:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1655,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "4756:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														],
														"id": 1654,
														"name": "_prevalidatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "4739:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_struct$_PresaleOptions_$1563_memory_ptr_$returns$__$",
															"typeString": "function (struct Presale.PresaleOptions memory) pure"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4739:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "4739:26:13"
											},
											{
												"expression": {
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1658,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4776:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4781:17:13",
														"memberName": "uniswapV2Router02",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1570,
														"src": "4776:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1662,
																"name": "_uniswapV2Router02",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1644,
																"src": "4820:18:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1661,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "4801:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1509_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4801:38:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "4776:63:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "4776:63:13"
											},
											{
												"expression": {
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1666,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4849:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4854:5:13",
														"memberName": "token",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1567,
														"src": "4849:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1670,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "4869:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1669,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "4862:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4862:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "4849:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1673,
												"nodeType": "ExpressionStatement",
												"src": "4849:27:13"
											},
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1674,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4886:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4891:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "4886:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4899:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4886:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "4886:14:13"
											},
											{
												"expression": {
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1680,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4925:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4930:4:13",
														"memberName": "weth",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1580,
														"src": "4925:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1683,
														"name": "_weth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "4937:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4925:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "4925:17:13"
											},
											{
												"expression": {
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1686,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "4952:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1688,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4957:7:13",
														"memberName": "options",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1585,
														"src": "4952:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
															"typeString": "struct Presale.PresaleOptions storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1689,
														"name": "_options",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1647,
														"src": "4967:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
															"typeString": "struct Presale.PresaleOptions memory"
														}
													},
													"src": "4952:23:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
														"typeString": "struct Presale.PresaleOptions storage ref"
													}
												},
												"id": 1691,
												"nodeType": "ExpressionStatement",
												"src": "4952:23:13"
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "4194:357:13",
										"text": " @param _weth Адрес WBNB в сети BSC (или WETH, если это другая EVM-сеть).\n @param _token Адрес токена, который продаём.\n @param _uniswapV2Router02 Адрес роутера (PancakeSwap/Uniswap).\n @param _options Параметры пресейла (PresaleOptions)."
									},
									"id": 1693,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1650,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4713:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4717:6:13",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4713:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1652,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1649,
												"name": "Ownable",
												"nameLocations": [
													"4705:7:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4705:7:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4705:19:13"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "_weth",
												"nameLocation": "4585:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4577:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4577:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4608:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4600:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4600:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "_uniswapV2Router02",
												"nameLocation": "4632:18:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4624:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4624:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "_options",
												"nameLocation": "4682:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "4660:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
													"typeString": "struct Presale.PresaleOptions"
												},
												"typeName": {
													"id": 1646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1645,
														"name": "PresaleOptions",
														"nameLocations": [
															"4660:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1563,
														"src": "4660:14:13"
													},
													"referencedDeclaration": 1563,
													"src": "4660:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage_ptr",
														"typeString": "struct Presale.PresaleOptions"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4567:129:13"
									},
									"returnParameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4729:0:13"
									},
									"scope": 2416,
									"src": "4556:426:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "5110:49:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1698,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5130:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5134:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5130:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1700,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5142:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5146:5:13",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5142:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"name": "_purchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1815,
														"src": "5120:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:32:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "5120:32:13"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "4988:90:13",
										"text": "Функция для приёма BNB напрямую. Вызывает _purchase()."
									},
									"id": 1705,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5090:2:13"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5110:0:13"
									},
									"scope": 2416,
									"src": "5083:76:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2522
									],
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "5778:890:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1713,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "5893:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5898:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "5893:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "31",
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5907:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5893:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1722,
												"nodeType": "IfStatement",
												"src": "5889:52:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1718,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "5930:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5935:5:13",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1582,
																"src": "5930:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1717,
															"name": "InvalidState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "5917:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$returns$_t_error_$",
																"typeString": "function (uint8) pure returns (error)"
															}
														},
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5917:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1721,
													"nodeType": "RevertStatement",
													"src": "5910:31:13"
												}
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1723,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6013:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1725,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6018:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "6013:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "32",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6026:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "6013:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "6013:14:13"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1729,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6177:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6182:12:13",
														"memberName": "tokenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1572,
														"src": "6177:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 1732,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "6198:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6203:7:13",
															"memberName": "options",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1585,
															"src": "6198:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																"typeString": "struct Presale.PresaleOptions storage ref"
															}
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6211:12:13",
														"memberName": "tokenDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "6198:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6177:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "6177:46:13"
											},
											{
												"expression": {
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1737,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6233:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6238:15:13",
														"memberName": "tokensLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1576,
														"src": "6233:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1740,
															"name": "_tokensForLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "6256:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6256:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6233:44:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1743,
												"nodeType": "ExpressionStatement",
												"src": "6233:44:13"
											},
											{
												"expression": {
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1744,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6287:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6292:15:13",
														"memberName": "tokensClaimable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1574,
														"src": "6287:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1747,
															"name": "_tokensForPresale",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "6310:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6310:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6287:42:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "6287:42:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1756,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6487:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6491:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6487:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1760,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6507:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Presale_$2416",
																		"typeString": "contract Presale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Presale_$2416",
																		"typeString": "contract Presale"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6499:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6499:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6499:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1762,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6514:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6519:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "6514:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6527:12:13",
															"memberName": "tokenDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1548,
															"src": "6514:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1751,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "6459:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6464:5:13",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1567,
															"src": "6459:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6470:16:13",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "6459:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6459:81:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1766,
												"nodeType": "ExpressionStatement",
												"src": "6459:81:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1768,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6564:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6568:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6564:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1770,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "6576:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1771,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6581:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "6576:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6589:12:13",
															"memberName": "tokenDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1548,
															"src": "6576:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1773,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6603:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6609:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6603:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1767,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "6556:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6556:63:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1776,
												"nodeType": "EmitStatement",
												"src": "6551:68:13"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1777,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "6636:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1778,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6641:7:13",
														"memberName": "options",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1585,
														"src": "6636:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
															"typeString": "struct Presale.PresaleOptions storage ref"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6649:12:13",
													"memberName": "tokenDeposit",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1548,
													"src": "6636:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1712,
												"id": 1780,
												"nodeType": "Return",
												"src": "6629:32:13"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "5375:342:13",
										"text": " @notice Владелец вносит нужное количество токенов для пресейла и ликвидности.\n         До вызова этой функции пресейл недоступен участникам.\n @return Количество внесённых токенов."
									},
									"functionSelector": "d0e30db0",
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1708,
												"name": "onlyOwner",
												"nameLocations": [
													"5750:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5750:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5750:9:13"
										}
									],
									"name": "deposit",
									"nameLocation": "5731:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5738:2:13"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "5769:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5769:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5768:9:13"
									},
									"scope": 2416,
									"src": "5722:946:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "7159:192:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1793,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "7190:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1794,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "7203:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1792,
														"name": "_prevalidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2255,
														"src": "7169:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7169:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "ExpressionStatement",
												"src": "7169:41:13"
											},
											{
												"expression": {
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1797,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7221:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1799,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7226:9:13",
														"memberName": "weiRaised",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1578,
														"src": "7221:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1800,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "7239:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7221:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1802,
												"nodeType": "ExpressionStatement",
												"src": "7221:24:13"
											},
											{
												"expression": {
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1803,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7255:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1805,
														"indexExpression": {
															"id": 1804,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "7269:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7255:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1806,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "7285:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7255:36:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "7255:36:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1810,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "7324:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1811,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1787,
															"src": "7337:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1809,
														"name": "Purchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "7315:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7315:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1813,
												"nodeType": "EmitStatement",
												"src": "7310:34:13"
											}
										]
									},
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "6865:212:13",
										"text": " @dev Главная внутренняя функция покупки.\n @param beneficiary Адрес покупателя.\n @param amount Сколько BNB он отправил."
									},
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1790,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1789,
												"name": "nonReentrant",
												"nameLocations": [
													"7146:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7146:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7146:12:13"
										}
									],
									"name": "_purchase",
									"nameLocation": "7091:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7109:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7101:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7101:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7130:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "7122:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7122:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7100:37:13"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7159:0:13"
									},
									"scope": 2416,
									"src": "7082:269:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										2540
									],
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "7593:644:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1823,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "7690:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7695:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "7690:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "34",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7704:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "7690:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1832,
												"nodeType": "IfStatement",
												"src": "7686:52:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1828,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "7727:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7732:5:13",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1582,
																"src": "7727:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1827,
															"name": "InvalidState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "7714:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$returns$_t_error_$",
																"typeString": "function (uint8) pure returns (error)"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7714:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1831,
													"nodeType": "RevertStatement",
													"src": "7707:31:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1833,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7810:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1836,
														"indexExpression": {
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7824:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7828:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7824:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7810:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1837,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7839:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7810:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "IfStatement",
												"src": "7806:57:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1839,
															"name": "NotClaimable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "7849:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7849:14:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1841,
													"nodeType": "RevertStatement",
													"src": "7842:21:13"
												}
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7882:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1883,
														"src": "7874:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7874:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1849,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1846,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7902:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7906:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7902:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1845,
														"name": "userTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2322,
														"src": "7891:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7891:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7874:39:13"
											},
											{
												"expression": {
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1850,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "7923:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1853,
														"indexExpression": {
															"expression": {
																"id": 1851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7937:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7941:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7937:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7923:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7951:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7923:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "7923:29:13"
											},
											{
												"expression": {
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1857,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "8055:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8060:12:13",
														"memberName": "tokenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1572,
														"src": "8055:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1860,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1844,
														"src": "8076:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8055:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "8055:27:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1868,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8125:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8129:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8125:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1870,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "8137:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1863,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "8101:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8106:5:13",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1567,
															"src": "8101:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8112:12:13",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "8101:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8101:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "8101:43:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8171:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8175:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8171:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1876,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1844,
															"src": "8183:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1877,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8191:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8197:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8191:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1873,
														"name": "TokenClaim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "8160:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8160:47:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1880,
												"nodeType": "EmitStatement",
												"src": "8155:52:13"
											},
											{
												"expression": {
													"id": 1881,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1844,
													"src": "8224:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1882,
												"nodeType": "Return",
												"src": "8217:13:13"
											}
										]
									},
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "7357:174:13",
										"text": " @notice Позволяет покупателям забрать свои токены после успешного завершения пресейла."
									},
									"functionSelector": "4e71d92d",
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1819,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1818,
												"name": "nonReentrant",
												"nameLocations": [
													"7562:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7562:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "7562:12:13"
										}
									],
									"name": "claim",
									"nameLocation": "7545:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7550:2:13"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "7584:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7584:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:9:13"
									},
									"scope": 2416,
									"src": "7536:701:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2546
									],
									"body": {
										"id": 1937,
										"nodeType": "Block",
										"src": "8472:333:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1894,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8486:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1897,
														"indexExpression": {
															"expression": {
																"id": 1895,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8500:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8504:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8500:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8486:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8515:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8486:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1903,
												"nodeType": "IfStatement",
												"src": "8482:58:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1900,
															"name": "NotRefundable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2448,
															"src": "8525:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8525:15:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1902,
													"nodeType": "RevertStatement",
													"src": "8518:22:13"
												}
											},
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8559:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1937,
														"src": "8551:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1904,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8551:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"baseExpression": {
														"id": 1906,
														"name": "contributions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "8568:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1909,
													"indexExpression": {
														"expression": {
															"id": 1907,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8582:3:13",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8586:6:13",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "8582:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8568:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8551:42:13"
											},
											{
												"expression": {
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1911,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "8603:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1914,
														"indexExpression": {
															"expression": {
																"id": 1912,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8617:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8621:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8617:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8603:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8631:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8603:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1917,
												"nodeType": "ExpressionStatement",
												"src": "8603:29:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1924,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "8709:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1920,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8687:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8691:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8687:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8679:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8679:8:13",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8679:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8699:9:13",
														"memberName": "sendValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 847,
														"src": "8679:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
															"typeString": "function (address payable,uint256)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8679:37:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "8679:37:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1928,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8739:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8743:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8739:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1930,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "8751:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1931,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8759:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8765:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8759:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"name": "Refund",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2500,
														"src": "8732:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8732:43:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1934,
												"nodeType": "EmitStatement",
												"src": "8727:48:13"
											},
											{
												"expression": {
													"id": 1935,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1905,
													"src": "8792:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1893,
												"id": 1936,
												"nodeType": "Return",
												"src": "8785:13:13"
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "8243:151:13",
										"text": " @notice Возврат средств участникам, если пресейл отменён или не собрал softCap."
									},
									"functionSelector": "590e1ae3",
									"id": 1938,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1887,
												"name": "onlyRefundable",
												"nameLocations": [
													"8426:14:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1637,
												"src": "8426:14:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8426:14:13"
										},
										{
											"id": 1890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1889,
												"name": "nonReentrant",
												"nameLocations": [
													"8441:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "8441:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "8441:12:13"
										}
									],
									"name": "refund",
									"nameLocation": "8408:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8414:2:13"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1938,
												"src": "8463:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8463:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8462:9:13"
									},
									"scope": 2416,
									"src": "8399:406:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2528
									],
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "9364:1047:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1948,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "9378:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9383:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "9378:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "32",
														"id": 1950,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9392:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "9378:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1957,
												"nodeType": "IfStatement",
												"src": "9374:52:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 1953,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9415:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1954,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9420:5:13",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1582,
																"src": "9415:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 1952,
															"name": "InvalidState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "9402:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$returns$_t_error_$",
																"typeString": "function (uint8) pure returns (error)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9402:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1956,
													"nodeType": "RevertStatement",
													"src": "9395:31:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1958,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "9581:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9586:9:13",
															"memberName": "weiRaised",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "9581:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 1960,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9598:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1961,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9603:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "9598:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 1962,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9611:7:13",
															"memberName": "softCap",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1552,
															"src": "9598:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9581:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1964,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9622:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9628:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9622:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 1966,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "9640:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 1967,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9645:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "9640:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 1968,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9653:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1560,
															"src": "9640:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"src": "9622:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9581:75:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "IfStatement",
												"src": "9577:132:13",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "9658:51:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1971,
																	"name": "SoftCapNotReached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2430,
																	"src": "9679:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9679:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1973,
															"nodeType": "RevertStatement",
															"src": "9672:26:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1976,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "9783:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1978,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9788:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "9783:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "34",
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9796:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "9783:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "9783:14:13"
											},
											{
												"assignments": [
													1983
												],
												"declarations": [
													{
														"constant": false,
														"id": 1983,
														"mutability": "mutable",
														"name": "liquidityWei",
														"nameLocation": "9913:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2032,
														"src": "9905:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1982,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9905:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1984,
														"name": "_weiForLiquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2369,
														"src": "9928:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9928:18:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9905:41:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "liquidityWei",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "9965:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1989,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "9979:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 1990,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9984:15:13",
															"memberName": "tokensLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1576,
															"src": "9979:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "_liquify",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "9956:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9956:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "9956:44:13"
											},
											{
												"expression": {
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1993,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10010:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10015:12:13",
														"memberName": "tokenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1572,
														"src": "10010:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"expression": {
															"id": 1996,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10031:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10036:15:13",
														"memberName": "tokensLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1576,
														"src": "10031:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10010:41:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "10010:41:13"
											},
											{
												"assignments": [
													2001
												],
												"declarations": [
													{
														"constant": false,
														"id": 2001,
														"mutability": "mutable",
														"name": "withdrawable",
														"nameLocation": "10170:12:13",
														"nodeType": "VariableDeclaration",
														"scope": 2032,
														"src": "10162:20:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10162:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2006,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2002,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10185:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10190:9:13",
														"memberName": "weiRaised",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1578,
														"src": "10185:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2004,
														"name": "liquidityWei",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1983,
														"src": "10202:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10185:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10162:52:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2007,
														"name": "withdrawable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2001,
														"src": "10228:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10243:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10228:16:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2020,
												"nodeType": "IfStatement",
												"src": "10224:90:13",
												"trueBody": {
													"id": 2019,
													"nodeType": "Block",
													"src": "10246:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2016,
																		"name": "withdrawable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "10290:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 2012,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "10268:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10272:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "10268:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10260:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 2010,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10260:8:13",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10260:19:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 2015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10280:9:13",
																	"memberName": "sendValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "10260:29:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$attached_to$_t_address_payable_$",
																		"typeString": "function (address payable,uint256)"
																	}
																},
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10260:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2018,
															"nodeType": "ExpressionStatement",
															"src": "10260:43:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2022,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10339:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10343:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10339:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2024,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "10351:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10356:9:13",
															"memberName": "weiRaised",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "10351:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2026,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10367:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10373:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10367:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2021,
														"name": "Finalized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "10329:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10329:54:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2029,
												"nodeType": "EmitStatement",
												"src": "10324:59:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10400:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1947,
												"id": 2031,
												"nodeType": "Return",
												"src": "10393:11:13"
											}
										]
									},
									"documentation": {
										"id": 1939,
										"nodeType": "StructuredDocumentation",
										"src": "9001:291:13",
										"text": " @notice Завершает пресейл, если он успешен (достигнут softCap).\n         Добавляет ликвидность, переводит остатки владельцу, открывает клейм для участников."
									},
									"functionSelector": "4bb278f3",
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1942,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1941,
												"name": "onlyOwner",
												"nameLocations": [
													"9326:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9326:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9326:9:13"
										},
										{
											"id": 1944,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1943,
												"name": "nonReentrant",
												"nameLocations": [
													"9336:12:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "9336:12:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "9336:12:13"
										}
									],
									"name": "finalize",
									"nameLocation": "9306:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9314:2:13"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "9358:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1945,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9358:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9357:6:13"
									},
									"scope": 2416,
									"src": "9297:1114:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2534
									],
									"body": {
										"id": 2093,
										"nodeType": "Block",
										"src": "10710:462:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2041,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10724:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2042,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10729:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "10724:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10737:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "10724:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2050,
												"nodeType": "IfStatement",
												"src": "10720:51:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 2046,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "10760:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2047,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10765:5:13",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1582,
																"src": "10760:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2045,
															"name": "InvalidState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "10747:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$returns$_t_error_$",
																"typeString": "function (uint8) pure returns (error)"
															}
														},
														"id": 2048,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10747:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2049,
													"nodeType": "RevertStatement",
													"src": "10740:31:13"
												}
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2051,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10782:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "10787:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "10782:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "33",
														"id": 2054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10795:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "10782:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "10782:14:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2057,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "10920:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10925:12:13",
														"memberName": "tokenBalance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1572,
														"src": "10920:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10940:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10920:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2083,
												"nodeType": "IfStatement",
												"src": "10916:178:13",
												"trueBody": {
													"id": 2082,
													"nodeType": "Block",
													"src": "10943:151:13",
													"statements": [
														{
															"assignments": [
																2062
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2062,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "10965:6:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2082,
																	"src": "10957:14:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2061,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10957:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2065,
															"initialValue": {
																"expression": {
																	"id": 2063,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "10974:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10979:12:13",
																"memberName": "tokenBalance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1572,
																"src": "10974:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10957:34:13"
														},
														{
															"expression": {
																"id": 2070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2066,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "11005:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$1586_storage",
																			"typeString": "struct Presale.Pool storage ref"
																		}
																	},
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "11010:12:13",
																	"memberName": "tokenBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1572,
																	"src": "11005:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11025:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11005:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2071,
															"nodeType": "ExpressionStatement",
															"src": "11005:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2077,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11064:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11068:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11064:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2079,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "11076:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 2072,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "11040:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$1586_storage",
																				"typeString": "struct Presale.Pool storage ref"
																			}
																		},
																		"id": 2075,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11045:5:13",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1567,
																		"src": "11040:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11051:12:13",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 425,
																	"src": "11040:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 2080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11040:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2081,
															"nodeType": "ExpressionStatement",
															"src": "11040:43:13"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11116:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11120:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11116:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2087,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11128:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11134:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11128:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2084,
														"name": "Cancel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2516,
														"src": "11109:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "EmitStatement",
												"src": "11104:40:13"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11161:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2040,
												"id": 2092,
												"nodeType": "Return",
												"src": "11154:11:13"
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "10417:237:13",
										"text": " @notice Владелец может отменить пресейл (если он ещё не завершён).\n         Тогда участники смогут вызвать refund() и вернуть BNB."
									},
									"functionSelector": "ea8a1af0",
									"id": 2094,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2036,
												"name": "onlyOwner",
												"nameLocations": [
													"10686:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10686:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "10686:9:13"
										}
									],
									"name": "cancel",
									"nameLocation": "10668:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10674:2:13"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2094,
												"src": "10704:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10704:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10703:6:13"
									},
									"scope": 2416,
									"src": "10659:513:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "11530:46:13",
										"statements": [
											{
												"expression": {
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2102,
														"name": "isWhitelistEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "11540:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2103,
														"name": "_enabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "11561:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11540:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "11540:29:13"
											}
										]
									},
									"documentation": {
										"id": 2095,
										"nodeType": "StructuredDocumentation",
										"src": "11365:97:13",
										"text": " @notice Включает или отключает механизм whitelist."
									},
									"functionSelector": "052d9e7e",
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2100,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2099,
												"name": "onlyOwner",
												"nameLocations": [
													"11520:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "11520:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11520:9:13"
										}
									],
									"name": "setWhitelistEnabled",
									"nameLocation": "11476:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "_enabled",
												"nameLocation": "11501:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "11496:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11496:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11495:15:13"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11530:0:13"
									},
									"scope": 2416,
									"src": "11467:109:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2137,
										"nodeType": "Block",
										"src": "11731:116:13",
										"statements": [
											{
												"body": {
													"id": 2135,
													"nodeType": "Block",
													"src": "11787:54:13",
													"statements": [
														{
															"expression": {
																"id": 2133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2127,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "11801:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2131,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2128,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2111,
																			"src": "11811:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2130,
																		"indexExpression": {
																			"id": 2129,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2117,
																			"src": "11820:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11811:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "11801:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11826:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "11801:29:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2134,
															"nodeType": "ExpressionStatement",
															"src": "11801:29:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2120,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "11761:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2121,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "11765:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11774:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11765:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11761:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2136,
												"initializationExpression": {
													"assignments": [
														2117
													],
													"declarations": [
														{
															"constant": false,
															"id": 2117,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11754:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2136,
															"src": "11746:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2116,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11746:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2119,
													"initialValue": {
														"hexValue": "30",
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11758:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11746:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11782:3:13",
														"subExpression": {
															"id": 2124,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "11782:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2126,
													"nodeType": "ExpressionStatement",
													"src": "11782:3:13"
												},
												"nodeType": "ForStatement",
												"src": "11741:100:13"
											}
										]
									},
									"documentation": {
										"id": 2108,
										"nodeType": "StructuredDocumentation",
										"src": "11582:72:13",
										"text": " @notice Добавляет адреса в whitelist."
									},
									"functionSelector": "7f649783",
									"id": 2138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2113,
												"name": "onlyOwner",
												"nameLocations": [
													"11721:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "11721:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11721:9:13"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "11668:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "11702:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "11683:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2109,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11683:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2110,
													"nodeType": "ArrayTypeName",
													"src": "11683:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11682:29:13"
									},
									"returnParameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11731:0:13"
									},
									"scope": 2416,
									"src": "11659:188:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2168,
										"nodeType": "Block",
										"src": "12005:117:13",
										"statements": [
											{
												"body": {
													"id": 2166,
													"nodeType": "Block",
													"src": "12061:55:13",
													"statements": [
														{
															"expression": {
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2158,
																		"name": "whitelist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "12075:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2162,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2159,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2142,
																			"src": "12085:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2161,
																		"indexExpression": {
																			"id": 2160,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2148,
																			"src": "12094:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12085:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "12075:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12100:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "12075:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2165,
															"nodeType": "ExpressionStatement",
															"src": "12075:30:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2151,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "12035:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2152,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2142,
															"src": "12039:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12048:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12039:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12035:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2167,
												"initializationExpression": {
													"assignments": [
														2148
													],
													"declarations": [
														{
															"constant": false,
															"id": 2148,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12028:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2167,
															"src": "12020:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2147,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12020:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2150,
													"initialValue": {
														"hexValue": "30",
														"id": 2149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12032:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12020:13:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12056:3:13",
														"subExpression": {
															"id": 2155,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "12056:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2157,
													"nodeType": "ExpressionStatement",
													"src": "12056:3:13"
												},
												"nodeType": "ForStatement",
												"src": "12015:101:13"
											}
										]
									},
									"documentation": {
										"id": 2139,
										"nodeType": "StructuredDocumentation",
										"src": "11853:70:13",
										"text": " @notice Удаляет адреса из whitelist."
									},
									"functionSelector": "548db174",
									"id": 2169,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2144,
												"name": "onlyOwner",
												"nameLocations": [
													"11995:9:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "11995:9:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "11995:9:13"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "11937:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2142,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "11976:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "11957:27:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2140,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11957:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2141,
													"nodeType": "ArrayTypeName",
													"src": "11957:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11956:29:13"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12005:0:13"
									},
									"scope": 2416,
									"src": "11928:194:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2254,
										"nodeType": "Block",
										"src": "12497:866:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2177,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "12511:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2178,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12516:5:13",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1582,
														"src": "12511:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "32",
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12525:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "12511:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2186,
												"nodeType": "IfStatement",
												"src": "12507:52:13",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"expression": {
																	"id": 2182,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "12548:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12553:5:13",
																"memberName": "state",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1582,
																"src": "12548:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 2181,
															"name": "InvalidState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2427,
															"src": "12535:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint8_$returns$_t_error_$",
																"typeString": "function (uint8) pure returns (error)"
															}
														},
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12535:24:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2185,
													"nodeType": "RevertStatement",
													"src": "12528:31:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2187,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12616:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12622:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12616:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2189,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "12634:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2190,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12639:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "12634:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12647:5:13",
															"memberName": "start",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1558,
															"src": "12634:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"src": "12616:36:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2193,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12656:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12662:9:13",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12656:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2195,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "12674:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2196,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12679:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "12674:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12687:3:13",
															"memberName": "end",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1560,
															"src": "12674:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"src": "12656:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "12616:74:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "12612:133:13",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "12692:53:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2200,
																	"name": "NotInPurchasePeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2439,
																	"src": "12713:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12713:21:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2202,
															"nodeType": "RevertStatement",
															"src": "12706:28:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2205,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "12796:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2206,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12801:9:13",
															"memberName": "weiRaised",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "12796:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2207,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "12813:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "12796:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2209,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "12823:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2210,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12828:7:13",
															"memberName": "options",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1585,
															"src": "12823:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																"typeString": "struct Presale.PresaleOptions storage ref"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12836:7:13",
														"memberName": "hardCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "12823:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12796:47:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2217,
												"nodeType": "IfStatement",
												"src": "12792:100:13",
												"trueBody": {
													"id": 2216,
													"nodeType": "Block",
													"src": "12845:47:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2213,
																	"name": "HardCapExceed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "12866:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12866:15:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2215,
															"nodeType": "RevertStatement",
															"src": "12859:22:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2218,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "12939:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2219,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "12949:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12954:7:13",
															"memberName": "options",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1585,
															"src": "12949:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																"typeString": "struct Presale.PresaleOptions storage ref"
															}
														},
														"id": 2221,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12962:3:13",
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1556,
														"src": "12949:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12939:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2227,
												"nodeType": "IfStatement",
												"src": "12935:86:13",
												"trueBody": {
													"id": 2226,
													"nodeType": "Block",
													"src": "12967:54:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2223,
																	"name": "PurchaseBelowMinimum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2442,
																	"src": "12988:20:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12988:22:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2225,
															"nodeType": "RevertStatement",
															"src": "12981:29:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2228,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "13068:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"baseExpression": {
																"id": 2229,
																"name": "contributions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "13078:13:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2231,
															"indexExpression": {
																"id": 2230,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "13092:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13078:27:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13068:37:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2233,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "13108:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13113:7:13",
															"memberName": "options",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1585,
															"src": "13108:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																"typeString": "struct Presale.PresaleOptions storage ref"
															}
														},
														"id": 2235,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13121:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1554,
														"src": "13108:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13068:56:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2241,
												"nodeType": "IfStatement",
												"src": "13064:115:13",
												"trueBody": {
													"id": 2240,
													"nodeType": "Block",
													"src": "13126:53:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2237,
																	"name": "PurchaseLimitExceed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2445,
																	"src": "13147:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13147:21:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2239,
															"nodeType": "RevertStatement",
															"src": "13140:28:13"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2242,
														"name": "isWhitelistEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "13260:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "13282:24:13",
														"subExpression": {
															"baseExpression": {
																"id": 2243,
																"name": "whitelist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "13283:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2245,
															"indexExpression": {
																"id": 2244,
																"name": "_beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2172,
																"src": "13293:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13283:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13260:46:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2253,
												"nodeType": "IfStatement",
												"src": "13256:101:13",
												"trueBody": {
													"id": 2252,
													"nodeType": "Block",
													"src": "13308:49:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "4e6f7457686974656c6973746564",
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13329:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e",
																			"typeString": "literal_string \"NotWhitelisted\""
																		},
																		"value": "NotWhitelisted"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_e0235ddafbe7024ec38ee13230c3ace0e158c1c686a4dd0859969538b83b293e",
																			"typeString": "literal_string \"NotWhitelisted\""
																		}
																	],
																	"id": 2248,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "13322:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13322:24:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2251,
															"nodeType": "ExpressionStatement",
															"src": "13322:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2170,
										"nodeType": "StructuredDocumentation",
										"src": "12332:77:13",
										"text": " @dev Проверка валидности покупки."
									},
									"id": 2255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_prevalidatePurchase",
									"nameLocation": "12423:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "_beneficiary",
												"nameLocation": "12452:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "12444:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12444:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "12474:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2255,
												"src": "12466:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12466:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12443:39:13"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12497:0:13"
									},
									"scope": 2416,
									"src": "12414:949:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2289,
										"nodeType": "Block",
										"src": "13636:227:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2262,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13650:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2263,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13659:7:13",
														"memberName": "softCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1552,
														"src": "13650:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2264,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13669:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13678:7:13",
														"memberName": "hardCap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1550,
														"src": "13669:16:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13650:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2270,
												"nodeType": "IfStatement",
												"src": "13646:65:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2267,
															"name": "InvalidCapValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "13694:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13694:17:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2269,
													"nodeType": "RevertStatement",
													"src": "13687:24:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2271,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13725:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2272,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13734:3:13",
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1556,
														"src": "13725:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 2273,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13740:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13749:3:13",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1554,
														"src": "13740:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13725:27:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2279,
												"nodeType": "IfStatement",
												"src": "13721:59:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2276,
															"name": "InvalidLimitValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2460,
															"src": "13761:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13761:19:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2278,
													"nodeType": "RevertStatement",
													"src": "13754:26:13"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													},
													"id": 2284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2280,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13794:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13803:5:13",
														"memberName": "start",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1558,
														"src": "13794:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 2282,
															"name": "_options",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "13812:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
																"typeString": "struct Presale.PresaleOptions memory"
															}
														},
														"id": 2283,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13821:3:13",
														"memberName": "end",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1560,
														"src": "13812:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "13794:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2288,
												"nodeType": "IfStatement",
												"src": "13790:66:13",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2285,
															"name": "InvalidTimestampValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "13833:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13833:23:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 2287,
													"nodeType": "RevertStatement",
													"src": "13826:30:13"
												}
											}
										]
									},
									"documentation": {
										"id": 2256,
										"nodeType": "StructuredDocumentation",
										"src": "13369:190:13",
										"text": " @dev Предварительная проверка параметров пресейла (можно доработать логику под нужды проекта)."
									},
									"id": 2290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_prevalidatePool",
									"nameLocation": "13573:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_options",
												"nameLocation": "13612:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "13590:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PresaleOptions_$1563_memory_ptr",
													"typeString": "struct Presale.PresaleOptions"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "PresaleOptions",
														"nameLocations": [
															"13590:14:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1563,
														"src": "13590:14:13"
													},
													"referencedDeclaration": 1563,
													"src": "13590:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage_ptr",
														"typeString": "struct Presale.PresaleOptions"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13589:32:13"
									},
									"returnParameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13636:0:13"
									},
									"scope": 2416,
									"src": "13564:299:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2321,
										"nodeType": "Block",
										"src": "14127:266:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2298,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "14230:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Pool_$1586_storage",
																"typeString": "struct Presale.Pool storage ref"
															}
														},
														"id": 2299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14235:9:13",
														"memberName": "weiRaised",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1578,
														"src": "14230:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2300,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14248:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14230:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2304,
												"nodeType": "IfStatement",
												"src": "14226:33:13",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14258:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 2297,
													"id": 2303,
													"nodeType": "Return",
													"src": "14251:8:13"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2305,
																						"name": "contributions",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "14278:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 2307,
																					"indexExpression": {
																						"id": 2306,
																						"name": "contributor",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2293,
																						"src": "14292:11:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "14278:26:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2308,
																					"name": "SCALE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1545,
																					"src": "14307:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14278:34:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2310,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "14277:36:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 2311,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1595,
																			"src": "14316:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Pool_$1586_storage",
																				"typeString": "struct Presale.Pool storage ref"
																			}
																		},
																		"id": 2312,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "14321:9:13",
																		"memberName": "weiRaised",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1578,
																		"src": "14316:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "14277:53:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2314,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "14276:55:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 2315,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "14346:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14351:15:13",
															"memberName": "tokensClaimable",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1574,
															"src": "14346:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14276:90:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2318,
														"name": "SCALE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "14381:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14276:110:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2297,
												"id": 2320,
												"nodeType": "Return",
												"src": "14269:117:13"
											}
										]
									},
									"documentation": {
										"id": 2291,
										"nodeType": "StructuredDocumentation",
										"src": "13870:181:13",
										"text": " @dev Считаем, сколько токенов причитается конкретному участнику (пропорционально вкладу)."
									},
									"functionSelector": "ed498fa8",
									"id": 2322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "userTokens",
									"nameLocation": "14065:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "contributor",
												"nameLocation": "14084:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "14076:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14076:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14075:21:13"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2322,
												"src": "14118:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14118:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14117:9:13"
									},
									"scope": 2416,
									"src": "14056:337:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2338,
										"nodeType": "Block",
										"src": "14557:85:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 2328,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "14574:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2329,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14579:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "14574:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 2330,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14587:12:13",
															"memberName": "tokenDeposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1548,
															"src": "14574:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2331,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "14602:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2332,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "14607:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "14602:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 2333,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14615:12:13",
															"memberName": "liquidityBps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1562,
															"src": "14602:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "14574:53:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14630:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "14574:61:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2327,
												"id": 2337,
												"nodeType": "Return",
												"src": "14567:68:13"
											}
										]
									},
									"documentation": {
										"id": 2323,
										"nodeType": "StructuredDocumentation",
										"src": "14399:90:13",
										"text": " @dev Сколько токенов идёт на ликвидность"
									},
									"id": 2339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokensForLiquidity",
									"nameLocation": "14503:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14522:2:13"
									},
									"returnParameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "14548:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14548:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14547:9:13"
									},
									"scope": 2416,
									"src": "14494:148:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2352,
										"nodeType": "Block",
										"src": "14826:73:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2345,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "14843:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2346,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14848:7:13",
															"memberName": "options",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1585,
															"src": "14843:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																"typeString": "struct Presale.PresaleOptions storage ref"
															}
														},
														"id": 2347,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14856:12:13",
														"memberName": "tokenDeposit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1548,
														"src": "14843:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2348,
															"name": "_tokensForLiquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2339,
															"src": "14871:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 2349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14871:21:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14843:49:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2344,
												"id": 2351,
												"nodeType": "Return",
												"src": "14836:56:13"
											}
										]
									},
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "14648:112:13",
										"text": " @dev Сколько токенов идёт на пресейл (для участников)"
									},
									"id": 2353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_tokensForPresale",
									"nameLocation": "14774:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14791:2:13"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "14817:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14817:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14816:9:13"
									},
									"scope": 2416,
									"src": "14765:134:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "15058:74:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2359,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "15075:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Pool_$1586_storage",
																	"typeString": "struct Presale.Pool storage ref"
																}
															},
															"id": 2360,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15080:9:13",
															"memberName": "weiRaised",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "15075:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 2361,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "15092:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2362,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15097:7:13",
																"memberName": "options",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1585,
																"src": "15092:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PresaleOptions_$1563_storage",
																	"typeString": "struct Presale.PresaleOptions storage ref"
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15105:12:13",
															"memberName": "liquidityBps",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1562,
															"src": "15092:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "15075:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15120:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "15075:50:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2367,
												"nodeType": "Return",
												"src": "15068:57:13"
											}
										]
									},
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "14905:88:13",
										"text": " @dev Сколько BNB пойдёт в пул ликвидности"
									},
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_weiForLiquidity",
									"nameLocation": "15007:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15023:2:13"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "15049:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15049:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15048:9:13"
									},
									"scope": 2416,
									"src": "14998:134:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "15330:575:13",
										"statements": [
											{
												"assignments": [
													2378,
													2380,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2378,
														"mutability": "mutable",
														"name": "amountToken",
														"nameLocation": "15346:11:13",
														"nodeType": "VariableDeclaration",
														"scope": 2414,
														"src": "15341:16:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2377,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15341:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2380,
														"mutability": "mutable",
														"name": "amountETH",
														"nameLocation": "15364:9:13",
														"nodeType": "VariableDeclaration",
														"scope": 2414,
														"src": "15359:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2379,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "15359:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2401,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2388,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "15475:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Pool_$1586_storage",
																			"typeString": "struct Presale.Pool storage ref"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15480:5:13",
																	"memberName": "token",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1567,
																	"src": "15475:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15467:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15467:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15467:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2391,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "15504:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2392,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "15534:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2393,
															"name": "_weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "15653:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2394,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "15707:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15707:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2396,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "15732:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15738:9:13",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "15732:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "363030",
																"id": 2398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15750:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_600_by_1",
																	"typeString": "int_const 600"
																},
																"value": "600"
															},
															"src": "15732:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"expression": {
																	"id": 2381,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1595,
																	"src": "15391:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Pool_$1586_storage",
																		"typeString": "struct Presale.Pool storage ref"
																	}
																},
																"id": 2382,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15396:17:13",
																"memberName": "uniswapV2Router02",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1570,
																"src": "15391:22:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV2Router02_$1509",
																	"typeString": "contract IUniswapV2Router02"
																}
															},
															"id": 2383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15414:15:13",
															"memberName": "addLiquidityETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "15391:38:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
																"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2384,
																"name": "_weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2372,
																"src": "15438:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "15391:58:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$value",
															"typeString": "function (address,uint256,uint256,uint256,address,uint256) payable external returns (uint256,uint256,uint256)"
														}
													},
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15391:376:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15340:427:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2402,
															"name": "amountToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2378,
															"src": "15790:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2403,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "15805:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15790:27:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2405,
															"name": "amountETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2380,
															"src": "15821:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2406,
															"name": "_weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2372,
															"src": "15834:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15821:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15790:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2413,
												"nodeType": "IfStatement",
												"src": "15786:113:13",
												"trueBody": {
													"id": 2412,
													"nodeType": "Block",
													"src": "15846:53:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2409,
																	"name": "LiquificationFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2451,
																	"src": "15867:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15867:21:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2411,
															"nodeType": "RevertStatement",
															"src": "15860:28:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2370,
										"nodeType": "StructuredDocumentation",
										"src": "15138:119:13",
										"text": " @dev Добавление ликвидности через роутер (PancakeSwap / Uniswap V2)."
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_liquify",
									"nameLocation": "15271:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2372,
												"mutability": "mutable",
												"name": "_weiAmount",
												"nameLocation": "15288:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "15280:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15280:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "15308:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "15300:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15300:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15279:42:13"
									},
									"returnParameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15330:0:13"
									},
									"scope": 2416,
									"src": "15262:643:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2417,
							"src": "695:15212:13",
							"usedErrors": [
								13,
								18,
								392,
								1089,
								1092,
								2422,
								2427,
								2430,
								2433,
								2436,
								2439,
								2442,
								2445,
								2448,
								2451,
								2454,
								2457,
								2460,
								2463,
								2466
							],
							"usedEvents": [
								24,
								2475,
								2482,
								2491,
								2500,
								2509,
								2516
							]
						}
					],
					"src": "33:15875:13"
				},
				"id": 13
			},
			"interfaces/IPresale.sol": {
				"ast": {
					"absolutePath": "interfaces/IPresale.sol",
					"exportedSymbols": {
						"IPresale": [
							2547
						]
					},
					"id": 2548,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPresale",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2419,
								"nodeType": "StructuredDocumentation",
								"src": "58:368:14",
								"text": " This interface outlines the functions related to managing and interacting\n with presale contracts. It includes capabilities such as depositing funds,\n finalizing the presale, canceling the presale, claiming tokens, and refunding\n contributions. Implementing contracts should provide the logic for these\n operations in the context of a presale event."
							},
							"fullyImplemented": false,
							"id": 2547,
							"linearizedBaseContracts": [
								2547
							],
							"name": "IPresale",
							"nameLocation": "437:8:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2420,
										"nodeType": "StructuredDocumentation",
										"src": "457:111:14",
										"text": " @dev Emitted when an unauthorized address attempts an action requiring specific permissions."
									},
									"errorSelector": "82b42900",
									"id": 2422,
									"name": "Unauthorized",
									"nameLocation": "579:12:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:14"
									},
									"src": "573:21:14"
								},
								{
									"documentation": {
										"id": 2423,
										"nodeType": "StructuredDocumentation",
										"src": "600:142:14",
										"text": " @dev Emitted when an action is performed in an invalid state.\n @param currentState The current state of the contract."
									},
									"errorSelector": "d07e8976",
									"id": 2427,
									"name": "InvalidState",
									"nameLocation": "753:12:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "currentState",
												"nameLocation": "772:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2427,
												"src": "766:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "766:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:20:14"
									},
									"src": "747:39:14"
								},
								{
									"documentation": {
										"id": 2428,
										"nodeType": "StructuredDocumentation",
										"src": "792:104:14",
										"text": " @dev Emitted when attempting to finalize a presale that has not reached its soft cap."
									},
									"errorSelector": "2bdc91ad",
									"id": 2430,
									"name": "SoftCapNotReached",
									"nameLocation": "907:17:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:14"
									},
									"src": "901:26:14"
								},
								{
									"documentation": {
										"id": 2431,
										"nodeType": "StructuredDocumentation",
										"src": "933:87:14",
										"text": " @dev Emitted when a purchase attempt exceeds the presale's hard cap."
									},
									"errorSelector": "283452da",
									"id": 2433,
									"name": "HardCapExceed",
									"nameLocation": "1031:13:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1044:2:14"
									},
									"src": "1025:22:14"
								},
								{
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "1053:88:14",
										"text": " @dev Emitted when user with no contribution attempts to claim tokens."
									},
									"errorSelector": "6247a84e",
									"id": 2436,
									"name": "NotClaimable",
									"nameLocation": "1152:12:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:14"
									},
									"src": "1146:21:14"
								},
								{
									"documentation": {
										"id": 2437,
										"nodeType": "StructuredDocumentation",
										"src": "1173:101:14",
										"text": " @dev Emitted when a purchase or refund attempt is made outside the presale period."
									},
									"errorSelector": "e3840bc4",
									"id": 2439,
									"name": "NotInPurchasePeriod",
									"nameLocation": "1285:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:2:14"
									},
									"src": "1279:28:14"
								},
								{
									"documentation": {
										"id": 2440,
										"nodeType": "StructuredDocumentation",
										"src": "1313:84:14",
										"text": " @dev Emitted when a purchase amount is below the minimum allowed."
									},
									"errorSelector": "bd70f35d",
									"id": 2442,
									"name": "PurchaseBelowMinimum",
									"nameLocation": "1408:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1428:2:14"
									},
									"src": "1402:29:14"
								},
								{
									"documentation": {
										"id": 2443,
										"nodeType": "StructuredDocumentation",
										"src": "1437:108:14",
										"text": " @dev Emitted when a participant's purchase would exceed the maximum allowed contribution."
									},
									"errorSelector": "5a99681c",
									"id": 2445,
									"name": "PurchaseLimitExceed",
									"nameLocation": "1556:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1575:2:14"
									},
									"src": "1550:28:14"
								},
								{
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "1584:103:14",
										"text": " @dev Emitted when a refund is requested under conditions that do not permit refunds."
									},
									"errorSelector": "3742d1f6",
									"id": 2448,
									"name": "NotRefundable",
									"nameLocation": "1698:13:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:2:14"
									},
									"src": "1692:22:14"
								},
								{
									"documentation": {
										"id": 2449,
										"nodeType": "StructuredDocumentation",
										"src": "1720:95:14",
										"text": " @dev Emitted when the process of adding liquidity to a liquidity pool fails."
									},
									"errorSelector": "eda12fe6",
									"id": 2451,
									"name": "LiquificationFailed",
									"nameLocation": "1826:19:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:2:14"
									},
									"src": "1820:28:14"
								},
								{
									"documentation": {
										"id": 2452,
										"nodeType": "StructuredDocumentation",
										"src": "1854:104:14",
										"text": " @dev Emitted when the initialization parameters provided to the contract are invalid."
									},
									"errorSelector": "0d0b9e06",
									"id": 2454,
									"name": "InvalidInitializationParameters",
									"nameLocation": "1969:31:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2000:2:14"
									},
									"src": "1963:40:14"
								},
								{
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "2009:105:14",
										"text": " @dev Emitted when the pool validation parameters provided to the contract are invalid."
									},
									"errorSelector": "a606ca78",
									"id": 2457,
									"name": "InvalidCapValue",
									"nameLocation": "2125:15:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2140:2:14"
									},
									"src": "2119:24:14"
								},
								{
									"documentation": {
										"id": 2458,
										"nodeType": "StructuredDocumentation",
										"src": "2149:105:14",
										"text": " @dev Emitted when the pool validation parameters provided to the contract are invalid."
									},
									"errorSelector": "b5813461",
									"id": 2460,
									"name": "InvalidLimitValue",
									"nameLocation": "2265:17:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:14"
									},
									"src": "2259:26:14"
								},
								{
									"documentation": {
										"id": 2461,
										"nodeType": "StructuredDocumentation",
										"src": "2291:105:14",
										"text": " @dev Emitted when the pool validation parameters provided to the contract are invalid."
									},
									"errorSelector": "83b087d3",
									"id": 2463,
									"name": "InvalidLiquidityValue",
									"nameLocation": "2407:21:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:2:14"
									},
									"src": "2401:30:14"
								},
								{
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "2438:105:14",
										"text": " @dev Emitted when the pool validation parameters provided to the contract are invalid."
									},
									"errorSelector": "eff2c182",
									"id": 2466,
									"name": "InvalidTimestampValue",
									"nameLocation": "2554:21:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2575:2:14"
									},
									"src": "2548:30:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2467,
										"nodeType": "StructuredDocumentation",
										"src": "2584:382:14",
										"text": " @dev Emitted when the presale contract owner deposits tokens for sale.\n This is usually done before the presale starts to ensure tokens are available for purchase.\n @param creator Address of the contract owner who performs the deposit.\n @param amount Amount of tokens deposited.\n @param timestamp Block timestamp when the deposit occurred."
									},
									"eventSelector": "90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15",
									"id": 2475,
									"name": "Deposit",
									"nameLocation": "2977:7:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3001:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "2985:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2985:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2471,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3018:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3010:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2473,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3034:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3026:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3026:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2984:60:14"
									},
									"src": "2971:74:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "3051:315:14",
										"text": " @dev Emitted for each purchase made during the presale. Tracks the buyer, the amount of ETH contributed,\n and the amount of tokens purchased.\n @param beneficiary Address of the participant who made the purchase.\n @param contribution Amount of ETH contributed by the participant."
									},
									"eventSelector": "2499a5330ab0979cc612135e7883ebc3cd5c9f7a8508f042540c34723348f632",
									"id": 2482,
									"name": "Purchase",
									"nameLocation": "3377:8:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "3402:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "3386:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"indexed": false,
												"mutability": "mutable",
												"name": "contribution",
												"nameLocation": "3423:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "3415:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3415:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:51:14"
									},
									"src": "3371:66:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "3443:436:14",
										"text": " @dev Emitted when the presale is successfully finalized. Finalization may involve distributing tokens,\n transferring raised funds to a designated wallet, and/or enabling token claim functionality.\n @param creator Address of the contract owner who finalized the presale.\n @param amount Total amount of ETH raised in the presale.\n @param timestamp Block timestamp when the finalization occurred."
									},
									"eventSelector": "616c9469db50815ae0f1d0a020d9fc9060da7c57f03559afb0d4ebdaa0a3a05e",
									"id": 2491,
									"name": "Finalized",
									"nameLocation": "3890:9:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "3916:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "3900:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3933:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "3925:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3925:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3949:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "3941:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3941:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3899:60:14"
									},
									"src": "3884:76:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "3966:365:14",
										"text": " @dev Emitted when a participant successfully claims a refund. This is typically allowed when the presale\n is cancelled or does not meet its funding goals.\n @param beneficiary Address of the participant receiving the refund.\n @param amount Amount of wei refunded.\n @param timestamp Block timestamp when the refund occurred."
									},
									"eventSelector": "73f04af9dcc582a923ec15d3eea990fe34adabfff2879e28d44572e01a54abb6",
									"id": 2500,
									"name": "Refund",
									"nameLocation": "4342:6:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4365:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4349:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4349:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2496,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4386:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4378:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4378:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2498,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4402:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4394:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4348:64:14"
									},
									"src": "4336:77:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2501,
										"nodeType": "StructuredDocumentation",
										"src": "4419:293:14",
										"text": " @dev Emitted when participants claim their purchased tokens after the presale is finalized. \n @param beneficiary Address of the participant claiming tokens.\n @param amount Amount of tokens claimed.\n @param timestamp Block timestamp when the claim occurred."
									},
									"eventSelector": "30c2341ba3f2142e78472f07dcf018a42044ae1c2c2e7ce867b327257f07ef2b",
									"id": 2509,
									"name": "TokenClaim",
									"nameLocation": "4723:10:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4750:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4734:27:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4734:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2505,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4771:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4763:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4763:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2507,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4787:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "4779:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4733:64:14"
									},
									"src": "4717:81:14"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2510,
										"nodeType": "StructuredDocumentation",
										"src": "4804:322:14",
										"text": " @dev Emitted when the presale is cancelled by the contract owner. A cancellation may allow participants\n to claim refunds for their contributions.\n @param creator Address of the contract owner who cancelled the presale.\n @param timestamp Block timestamp when the cancellation occurred."
									},
									"eventSelector": "27f83af92b39768b17fe0c8d6922452702717efb8626d97e7a754e0b27d4f6d2",
									"id": 2516,
									"name": "Cancel",
									"nameLocation": "5137:6:14",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2512,
												"indexed": true,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "5160:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "5144:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "5177:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "5169:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:44:14"
									},
									"src": "5131:57:14"
								},
								{
									"documentation": {
										"id": 2517,
										"nodeType": "StructuredDocumentation",
										"src": "5194:294:14",
										"text": " @dev Allows for the deposit of presale tokens by the owner.\n This function is intended to be called by the presale contract owner to\n deposit the tokens that are to be sold during the presale.\n \n @return The amount of tokens deposited for the presale."
									},
									"functionSelector": "d0e30db0",
									"id": 2522,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "5502:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5509:2:14"
									},
									"returnParameters": {
										"id": 2521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2522,
												"src": "5530:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5530:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5529:9:14"
									},
									"scope": 2547,
									"src": "5493:46:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2523,
										"nodeType": "StructuredDocumentation",
										"src": "5545:414:14",
										"text": " @dev Finalizes the presale, allowing for the distribution of tokens to\n participants and the withdrawal of funds raised to the beneficiary. This\n function is typically called after the presale ends, assuming it meets\n any predefined criteria such as minimum funding goals.\n \n @return A boolean value indicating whether the presale was successfully\n finalized."
									},
									"functionSelector": "4bb278f3",
									"id": 2528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "finalize",
									"nameLocation": "5973:8:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5981:2:14"
									},
									"returnParameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "6002:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2525,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6002:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6001:6:14"
									},
									"scope": 2547,
									"src": "5964:44:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "6014:356:14",
										"text": " @dev Cancels the presale and enables the refund process for participants.\n This function can be used in scenarios where the presale does not meet\n its goals or if the organizer decides to cancel the event for any reason.\n \n @return A boolean value indicating whether the presale was successfully\n cancelled."
									},
									"functionSelector": "ea8a1af0",
									"id": 2534,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancel",
									"nameLocation": "6384:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6390:2:14"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2534,
												"src": "6411:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2531,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6411:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:6:14"
									},
									"scope": 2547,
									"src": "6375:42:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2535,
										"nodeType": "StructuredDocumentation",
										"src": "6423:264:14",
										"text": " @dev Allows participants to claim their purchased tokens after the presale\n is finalized. Participants call this function to receive the tokens they\n are entitled to.\n \n @return The amount of tokens claimed by the caller."
									},
									"functionSelector": "4e71d92d",
									"id": 2540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "6701:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6706:2:14"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2540,
												"src": "6727:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6727:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6726:9:14"
									},
									"scope": 2547,
									"src": "6692:44:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2541,
										"nodeType": "StructuredDocumentation",
										"src": "6742:276:14",
										"text": " @dev Enables participants to request a refund of their contribution if the\n presale is cancelled or if they are otherwise eligible for a refund\n according to the presale's terms.\n \n @return The amount of funds refunded to the caller."
									},
									"functionSelector": "590e1ae3",
									"id": 2546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refund",
									"nameLocation": "7032:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7038:2:14"
									},
									"returnParameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2546,
												"src": "7059:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7059:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7058:9:14"
									},
									"scope": 2547,
									"src": "7023:45:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2548,
							"src": "427:6643:14",
							"usedErrors": [
								2422,
								2427,
								2430,
								2433,
								2436,
								2439,
								2442,
								2445,
								2448,
								2451,
								2454,
								2457,
								2460,
								2463,
								2466
							],
							"usedEvents": [
								2475,
								2482,
								2491,
								2500,
								2509,
								2516
							]
						}
					],
					"src": "32:7038:14"
				},
				"id": 14
			}
		}
	}
}